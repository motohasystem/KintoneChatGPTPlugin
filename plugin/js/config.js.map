{"version":3,"file":"config.js","mappings":"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","sources":["webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/common.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/config-builder.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/config-manager.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/config-utilities.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/field-builder.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/incremental-table-builder.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/dist/index.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/button_installer.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/plugin_canvas.js","webpack://kintan_lab_chatgpt_sample_plugin/../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/utils.js","webpack://kintan_lab_chatgpt_sample_plugin/webpack/bootstrap","webpack://kintan_lab_chatgpt_sample_plugin/./src/ts/constants.ts","webpack://kintan_lab_chatgpt_sample_plugin/./src/ts/config/settings.ts","webpack://kintan_lab_chatgpt_sample_plugin/./src/ts/config/main.ts"],"sourcesContent":["\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSecretItem = exports.FieldType = void 0;\nvar FieldType;\n(function (FieldType) {\n    FieldType[FieldType[\"Dropdown\"] = 0] = \"Dropdown\";\n    FieldType[FieldType[\"Dropdown_FieldSelect\"] = 1] = \"Dropdown_FieldSelect\";\n    FieldType[FieldType[\"Radio\"] = 2] = \"Radio\";\n    FieldType[FieldType[\"Text\"] = 3] = \"Text\";\n    FieldType[FieldType[\"Number\"] = 4] = \"Number\";\n    FieldType[FieldType[\"MultilineText\"] = 5] = \"MultilineText\";\n    FieldType[FieldType[\"Checkbox\"] = 6] = \"Checkbox\";\n    FieldType[FieldType[\"IncrementalTable\"] = 7] = \"IncrementalTable\";\n    FieldType[FieldType[\"Label\"] = 8] = \"Label\";\n    FieldType[FieldType[\"Separator\"] = 9] = \"Separator\";\n})(FieldType = exports.FieldType || (exports.FieldType = {}));\nfunction isSecretItem(item) {\n    return 'secret' in item;\n}\nexports.isSecretItem = isSecretItem;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigBuilder = void 0;\nrequire(\"@shin-chan/kypes\");\nconst commonutils_1 = require(\"commonutils\");\nconst config_utilities_1 = require(\"./config-utilities\");\nconst common_1 = require(\"./common\");\nconst field_builder_1 = require(\"./field-builder\");\nconst incremental_table_builder_1 = require(\"./incremental-table-builder\");\nclass ConfigBuilder {\n    static LAYOUT_PARTS = [\"SPACER\"];\n    props = undefined;\n    layout = undefined;\n    config = undefined;\n    field_builder;\n    constructor(props, config) {\n        this.props = props;\n        this.config = config;\n        this.field_builder = new field_builder_1.FieldBuilder(props);\n    }\n    static is_layout_info(type) {\n        if (ConfigBuilder.LAYOUT_PARTS.includes(type)) {\n            return true;\n        }\n        return false;\n    }\n    static is_includes_layout_info(types) {\n        const is_includes = types.reduce((prev, curr) => {\n            if (ConfigBuilder.is_layout_info(curr)) {\n                prev = true;\n            }\n            return prev;\n        }, false);\n        return is_includes;\n    }\n    build_incremental_table(input_field, saved_rows) {\n        console.log({ input_field });\n        console.log({ saved_rows });\n        const table_builder = new incremental_table_builder_1.IncrementalTableBuilder(input_field, saved_rows, this.field_builder);\n        const table_rows = table_builder.build();\n        const table_cols = input_field.table_cols;\n        const elements_th = table_cols.map((column) => {\n            const el_span = commonutils_1.Utils.createElement('span', 'title');\n            el_span.textContent = column.header;\n            const th = commonutils_1.Utils.createElement('th', 'kintoneplugin-table-th', [el_span]);\n            return th;\n        });\n        elements_th.push(commonutils_1.Utils.createElement('th', 'kintoneplugin-table-th-blankspace'));\n        const tr = commonutils_1.Utils.createElement('tr', '', elements_th);\n        const thead = commonutils_1.Utils.createElement('thead', '', [tr]);\n        const tbody = commonutils_1.Utils.createElement('tbody', '', table_rows);\n        const incremental_table = commonutils_1.Utils.createElement('table', 'kintoneplugin-table ms-0', [thead, tbody], '', {\n            'id': `table-${input_field.code}`\n        });\n        return incremental_table;\n    }\n    static get_grand_tr(target) {\n        if (target == null) {\n            throw 'ERROR: nullが渡されたため祖父要素を取得できません';\n        }\n        const self = target;\n        const parent_td = self?.parentNode;\n        const grand_tr = parent_td?.parentNode;\n        return grand_tr;\n    }\n    static get_formparts(props, accept_types = []) {\n        const lists = {};\n        for (const key in props) {\n            if (!props.hasOwnProperty(key)) {\n                continue;\n            }\n            const prop = props[key];\n            const label = prop.label;\n            const code = prop.code;\n            const type = prop.type;\n            if (accept_types.includes(type)) {\n                lists[code] = {\n                    'code': code,\n                    'label': label,\n                    'option': type\n                };\n            }\n        }\n        const array = Object.keys(lists).map((k) => ({\n            key: k, value: lists[k]\n        }));\n        const sorted = array.sort((a, b) => {\n            const str_a = a.value.label.toString().toLowerCase();\n            const str_b = b.value.label.toString().toLowerCase();\n            if (str_a < str_b)\n                return -1;\n            else if (a > b)\n                return 1;\n            return 0;\n        });\n        const sorted_dic = Object.assign({}, ...sorted.map((item) => ({\n            [item.key]: item.value,\n        })));\n        return sorted_dic;\n    }\n    static addOnChangeEvent(select_set) {\n        for (const select of select_set) {\n            select.addEventListener('change', (event) => {\n                const target = event.target;\n                if (target == null) {\n                    return;\n                }\n                const selected = target[target.selectedIndex];\n                let option = selected.getAttribute('option');\n                if (option == null) {\n                    option = \"\";\n                }\n                let code = selected.getAttribute('code');\n                if (code == null) {\n                    code = \"\";\n                }\n                const ancestor = target.closest('tr');\n                console.log(ancestor);\n                if (ancestor == null) {\n                    return;\n                }\n                const inputs = ancestor.getElementsByTagName('input');\n                inputs[0].value = option;\n                inputs[1].value = code;\n            });\n        }\n    }\n    build_fields_dropdown(props, accepts, selected_fieldcode = \"\", selected_node_id = \"\", empty_label = null, show_fc = false) {\n        const field_dropdown = commonutils_1.Utils.createElement('select', 'select-kintone-field');\n        field_dropdown.id = selected_node_id;\n        if (empty_label != null) {\n            const empty_item = commonutils_1.Utils.createElement('option');\n            empty_item.label = empty_label;\n            field_dropdown.appendChild(empty_item);\n        }\n        const parts = ConfigBuilder.get_formparts(props, accepts);\n        const items = this.field_builder.compose_fielditems(parts, selected_fieldcode, show_fc);\n        items.forEach((item) => {\n            field_dropdown.appendChild(item);\n        });\n        return commonutils_1.Utils.createElement('div', '', [\n            commonutils_1.Utils.createElement('div', \"kintoneplugin-select-outer\", [\n                commonutils_1.Utils.createElement('div', 'kintoneplugin-select', [field_dropdown])\n            ])\n        ]);\n    }\n    async build_fields_dropdown_other_app(app_id, accepts, selected_label = \"\", selected_node_id = \"\", empty_label = null) {\n        if (app_id == undefined || app_id == config_utilities_1.ConfigUtilities.DEFAULT_OPTION) {\n            const empty_dropdown = commonutils_1.Utils.createElement('select', 'select-kintone-field');\n            empty_dropdown.id = selected_node_id;\n            if (empty_label != null) {\n                const empty_item = commonutils_1.Utils.createElement('option');\n                empty_item.label = empty_label;\n                empty_dropdown.appendChild(empty_item);\n            }\n            return commonutils_1.Utils.createElement('div', '', [\n                commonutils_1.Utils.createElement('div', \"kintoneplugin-select-outer\", [\n                    commonutils_1.Utils.createElement('div', 'kintoneplugin-select', [empty_dropdown])\n                ])\n            ]);\n        }\n        const resp_fields = await kintone.api('/k/v1/app/form/fields', 'GET', {\n            app: parseInt(app_id)\n        });\n        return this.build_fields_dropdown(resp_fields.properties, accepts, selected_label, selected_node_id, empty_label);\n    }\n    static make_parts_block(main_node, title, comment, block_class = \"\", flg_required = false, flg_secret = false) {\n        console.log('make_parts_block()');\n        const comment_node = commonutils_1.Utils.buildElement({\n            tagName: 'div',\n            className: 'mb-3',\n            innerHTML: comment\n        });\n        const caption_node = commonutils_1.Utils.buildElement({\n            tagName: 'div',\n            className: 'h4 mb-2',\n            textContent: title\n        });\n        if (flg_required) {\n            const badge = commonutils_1.Utils.buildElement({\n                tagName: 'span',\n                className: 'text-danger',\n                textContent: '*'\n            });\n            caption_node.appendChild(badge);\n        }\n        if (flg_secret) {\n            const badge = commonutils_1.Utils.buildElement({\n                tagName: 'span',\n                className: 'badge bg-secondary rounded-pill ms-2',\n                textContent: 'secret'\n            });\n            caption_node.appendChild(badge);\n        }\n        const block = commonutils_1.Utils.buildElement({\n            tagName: 'div',\n            className: block_class + ' ms-4 mt-4',\n            childElements: [\n                caption_node,\n                comment_node,\n                main_node\n            ]\n        });\n        return block;\n    }\n    static addFieldSelectEvent(parent_dropdown, parent_fieldcode, appid, selected_fieldcode = undefined) {\n        kintone.api('/k/v1/app/form/fields', 'GET', {\n            app: appid\n        }).then((resp_fields) => {\n            const fields = Object.keys(resp_fields.properties).map((prop) => {\n                return resp_fields.properties[prop];\n            });\n            const single_line_items = fields.filter((prop) => {\n                return prop.type == 'SINGLE_LINE_TEXT';\n            }).map((field) => {\n                return {\n                    'code': field.code,\n                    'label': field.label,\n                    'option': field.type\n                };\n            }).map((dd_item) => {\n                const item = commonutils_1.Utils.createElement('option', '');\n                item.label = dd_item.label;\n                item.setAttribute('code', dd_item.code);\n                item.setAttribute('option', dd_item.option);\n                if (dd_item.code == selected_fieldcode) {\n                    item.setAttribute('selected', '');\n                }\n                return item;\n            });\n            const select = commonutils_1.Utils.createElement('select', `select-kintone-field`, single_line_items);\n            select.addEventListener('change', (event) => {\n                console.log({ event });\n                const target = event.target;\n                if (target == null) {\n                    return;\n                }\n                const selected = target[target.selectedIndex];\n                const td_fieldcode = make_fieldcode_cell(selected);\n                parent_fieldcode.firstChild?.remove();\n                parent_fieldcode.appendChild(td_fieldcode);\n            });\n            const make_fieldcode_cell = (selected) => {\n                let fieldcode;\n                if (selected) {\n                    fieldcode = selected.getAttribute('code');\n                    if (fieldcode == null) {\n                        fieldcode = \"\";\n                    }\n                }\n                else {\n                    fieldcode = \"\";\n                }\n                const node_input = commonutils_1.Utils.createElement('input', 'kintoneplugin-input-text', []);\n                node_input.setAttribute('value', fieldcode);\n                node_input.setAttribute('disabled', '');\n                const el_td = commonutils_1.Utils.createElement('td', 'kintoneplugin-table-td-control', [\n                    commonutils_1.Utils.createElement('div', 'kintoneplugin-table-td-control-value', [\n                        commonutils_1.Utils.createElement('div', 'kintoneplugin-input-outer', [\n                            node_input\n                        ])\n                    ])\n                ]);\n                return el_td;\n            };\n            const node_dropdown = commonutils_1.Utils.createElement('div', 'kintoneplugin-table-td-control-value', [\n                commonutils_1.Utils.createElement('div', \"kintoneplugin-select-outer\", [\n                    commonutils_1.Utils.createElement('div', 'kintoneplugin-select', [select])\n                ])\n            ]);\n            parent_dropdown.firstChild?.remove();\n            parent_dropdown.appendChild(node_dropdown);\n            parent_fieldcode.firstChild?.remove();\n            const selected = select.item(select.selectedIndex);\n            const td_fieldcode = make_fieldcode_cell(selected);\n            parent_fieldcode.appendChild(td_fieldcode);\n        });\n    }\n    static set_switch_event(node_radio, event_type, callback_object) {\n        const input_radios = node_radio.querySelectorAll('input[type=\"radio\"]');\n        input_radios.forEach((input) => {\n            input.addEventListener(event_type, callback_object);\n        });\n    }\n    make_string_block(input_field, type = 'text') {\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        const fieldcode = input_field.code;\n        const saved_value = this.get_saved_value(this.config, input_field);\n        console.log({ saved_value });\n        const id = `${type}-${fieldcode}`;\n        const el_str = commonutils_1.Utils.createElement('div', 'kintoneplugin-input-outer', [\n            commonutils_1.Utils.ce('input', 'kintoneplugin-input-text', [], '', {\n                'type': type,\n                'id': id,\n                'value': saved_value\n            })\n        ]);\n        const flg_required = ((item) => {\n            return 'required' in item && item.required == true;\n        })(input_field);\n        const flg_secret = ((item) => {\n            if ((0, common_1.isSecretItem)(item)) {\n                return ('secret' in item) && (item.secret == true);\n            }\n            return false;\n        })(input_field);\n        const node_block = ConfigBuilder.make_parts_block(el_str, input_field.label, input_field.desc, '', flg_required, flg_secret);\n        return node_block;\n    }\n    get_saved_value(whole_config, input_field) {\n        if ((0, common_1.isSecretItem)(input_field)) {\n            console.log({ input_field });\n            const proxy_config = kintone.plugin.app.getProxyConfig(input_field.URL, input_field.method);\n            console.log({ proxy_config });\n            if (proxy_config == null) {\n                return \"\";\n            }\n            let header = input_field.header;\n            if (header == \"Authorization Bearer\") {\n                header = \"Authorization\";\n            }\n            const data = input_field.data;\n            if (header != undefined) {\n                const header_value = proxy_config.headers[header];\n                if (header_value.startsWith(\"Bearer\")) {\n                    const splited = header_value.split(/ /);\n                    return splited[1];\n                }\n                return header_value;\n            }\n            else if (data != undefined) {\n                return proxy_config.data[data];\n            }\n            throw new Error(`get_saved_value(): 秘匿情報フィールドとして格納されている情報が不正です。(${proxy_config})`);\n        }\n        let saved_value = whole_config[input_field.code];\n        if (saved_value == undefined) {\n            if (input_field.default != undefined) {\n                saved_value = input_field.default;\n            }\n            else {\n                saved_value = \"\";\n            }\n        }\n        return saved_value;\n    }\n    make_multiline_block(input_field) {\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        const fieldcode = input_field.code;\n        let saved_value = this.config[fieldcode];\n        if (saved_value == undefined) {\n            if (input_field.default != undefined) {\n                saved_value = input_field.default;\n            }\n            else {\n                saved_value = \"\";\n            }\n        }\n        console.log({ saved_value });\n        const id = `multiline-${fieldcode}`;\n        const cols = input_field.cols ? input_field.cols.toString() : '60';\n        const rows = input_field.rows ? input_field.rows.toString() : '10';\n        const el_str = commonutils_1.Utils.createElement('div', 'kintoneplugin-input-outer', [\n            commonutils_1.Utils.ce('textarea', '', [], saved_value, {\n                'id': id,\n                'rows': rows,\n                'cols': cols\n            })\n        ]);\n        const flg_required = ((item) => {\n            return 'required' in item && item.required == true;\n        })(input_field);\n        const node_block = ConfigBuilder.make_parts_block(el_str, input_field.label, input_field.desc, '', flg_required);\n        return node_block;\n    }\n    make_checkbox_block(input_field) {\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        if (input_field == undefined || input_field.accept == undefined) {\n            throw new Error('ConfigBuidler.make_checkbox_block(): 必要なプロパティ accept が未定義です。設定を見直してください。');\n        }\n        const fieldcode = input_field.code;\n        let saved_value = this.config[fieldcode];\n        if (saved_value == undefined) {\n            saved_value = [];\n        }\n        console.log({ saved_value });\n        const id = `${fieldcode}`;\n        const list_checkbox = input_field.accept.map(box_value => {\n            const checkbox_id = `${id}-${box_value}`;\n            console.log({ saved_value });\n            console.log({ box_value });\n            const attr_checkbox = {\n                'type': 'checkbox',\n                'name': 'checkbox',\n                'value': box_value,\n                'id': checkbox_id\n            };\n            if (saved_value.includes(box_value)) {\n                attr_checkbox['checked'] = \"checked\";\n            }\n            return commonutils_1.Utils.createElement('div', 'kintoneplugin-input-checkbox', [\n                commonutils_1.Utils.ce('span', 'kintoneplugin-input-checkbox-item', [\n                    commonutils_1.Utils.ce('input', 'kintoneplugin-input-checkbox-item', [], '', attr_checkbox),\n                    commonutils_1.Utils.ce('label', '', [], box_value, {\n                        'for': checkbox_id\n                    })\n                ])\n            ]);\n        });\n        const flg_required = ((item) => {\n            return 'required' in item && item.required == true;\n        })(input_field);\n        const node_block = ConfigBuilder.make_parts_block(commonutils_1.Utils.ce('div', '', list_checkbox, '', {\n            'id': id\n        }), input_field.label, input_field.desc, '', flg_required);\n        return node_block;\n    }\n    make_radio_block(input_field, block_class = \"\") {\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        const fieldcode = input_field.code;\n        let saved_string = this.config[fieldcode];\n        console.log({ saved_string });\n        if (saved_string == undefined && input_field.default != undefined) {\n            saved_string = input_field.default;\n        }\n        if (input_field == undefined || input_field.accept == undefined) {\n            throw new Error('ConfigBuidler.make_dropdown_fieldselect_block(): 必要なプロパティ accept が未定義です。設定を見直してください。');\n        }\n        const el_options = input_field.accept.map((label) => {\n            const id = `radio-${fieldcode}-${label}`;\n            const name = `radio-${fieldcode}`;\n            const el_radio = commonutils_1.Utils.createElement('input');\n            el_radio.setAttribute('type', 'radio');\n            el_radio.setAttribute('name', name);\n            el_radio.setAttribute('value', label);\n            el_radio.setAttribute('id', id);\n            if (label == saved_string) {\n                el_radio.setAttribute('checked', 'checked');\n            }\n            const el_label = commonutils_1.Utils.createElement('label', '', [], label);\n            el_label.setAttribute('for', id);\n            return commonutils_1.Utils.createElement('span', 'kintoneplugin-input-radio-item', [el_radio, el_label]);\n        });\n        const el_radio = commonutils_1.Utils.createElement('div', 'kintoneplugin-input-radio', el_options);\n        el_radio.id = fieldcode;\n        const flg_required = ((item) => {\n            return 'required' in item && item.required == true;\n        })(input_field);\n        const node_block = ConfigBuilder.make_parts_block(el_radio, input_field.label, input_field.desc, block_class, flg_required);\n        return node_block;\n    }\n    make_dropdown_fieldselect_block(input_field, block_class = \"\") {\n        const form_types = [];\n        const layout_types = [];\n        if (input_field.accept == undefined) {\n            throw new Error('ConfigBuidler.make_dropdown_fieldselect_block(): 必要なプロパティ accept が未定義です。設定を見直してください。');\n        }\n        input_field.accept.forEach((type) => {\n            if (ConfigBuilder.is_layout_info(type)) {\n                layout_types.push(type);\n            }\n            else {\n                form_types.push(type);\n            }\n        });\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        if (layout_types.length > 0 && this.layout == undefined) {\n            throw new Error('レイアウト情報をロードしていません。load_layout_info() を事前に呼び出してください。');\n        }\n        if (layout_types.length > 0 && form_types.length > 0) {\n            throw new Error('フォーム情報のフィールドとレイアウト情報のフィールドとが混在したドロップダウンは構築できません。');\n        }\n        const fieldcode = input_field.code;\n        const saved_string = this.config[fieldcode];\n        let node_dropdown;\n        const show_fc = input_field.verbose ? input_field.verbose : false;\n        if (form_types.length > 0) {\n            node_dropdown = this.build_fields_dropdown(this.props, form_types, saved_string, fieldcode, input_field.default, show_fc);\n        }\n        else if (layout_types.length > 0) {\n            node_dropdown = this.build_fields_dropdown(this.layout, layout_types, saved_string, fieldcode, input_field.default, show_fc);\n        }\n        else {\n            throw new Error(`[${input_field.label}] フォーム情報またはレイアウト情報が空欄で呼び出されました`);\n        }\n        const flg_required = ((item) => {\n            return 'required' in item && item.required == true;\n        })(input_field);\n        const node_block = ConfigBuilder.make_parts_block(node_dropdown, input_field.label, input_field.desc, block_class, flg_required);\n        return node_block;\n    }\n    make_incremental_table_block(input_field) {\n        if (this.config == undefined || this.props == undefined) {\n            throw new Error('インスタンスが初期化されていません');\n        }\n        const fieldcode = input_field.code;\n        const saved_rows = this.config[fieldcode];\n        console.log(saved_rows);\n        const el_table = this.build_incremental_table(input_field, saved_rows);\n        const node_block = ConfigBuilder.make_parts_block(el_table, input_field.label, input_field.desc);\n        return node_block;\n    }\n    make_subtitle_block(input_field) {\n        const class_heading = 'display-6 mb-3';\n        const heading = commonutils_1.Utils.ce('div', class_heading, [], input_field.label);\n        const desc = commonutils_1.Utils.ce('div', 'ms-4 mt-2 mb-5', [], input_field.desc);\n        return commonutils_1.Utils.createElement('div', '', [\n            heading, desc\n        ]);\n    }\n    async load_layout_info() {\n        const layout = await kintone.api('/k/v1/preview/app/form/layout', 'GET', {\n            app: kintone.app.getId()\n        });\n        console.log(layout);\n        const layout_infos = layout.layout.reduce((prev, curr) => {\n            if (curr.type == \"GROUP\") {\n                console.log(`curr: ${curr.type}`);\n                const spacers = curr.layout.reduce((row_prev, row_curr) => {\n                    const row_spacers = row_curr.fields.filter((row_field) => {\n                        console.log(row_field.type);\n                        return row_field.type == \"SPACER\";\n                    });\n                    row_prev = row_prev.concat(row_spacers);\n                    console.log(`row_prev: ${row_prev}`);\n                    return row_prev;\n                }, []);\n                prev.concat(spacers);\n            }\n            else {\n                prev = prev.concat(curr.fields.filter((field) => {\n                    return field.type == 'SPACER';\n                }));\n            }\n            return prev;\n        }, []);\n        this.layout = layout_infos.reduce((prev, curr) => {\n            curr.code = curr.elementId;\n            curr.label = curr.elementId;\n            prev[curr.code] = curr;\n            return prev;\n        }, {});\n        console.log(this.layout);\n    }\n}\nexports.ConfigBuilder = ConfigBuilder;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigManager = void 0;\nrequire(\"@shin-chan/kypes\");\nconst config_utilities_1 = require(\"./config-utilities\");\nconst config_builder_1 = require(\"./config-builder\");\nconst common_1 = require(\"./common\");\nconst commonutils_1 = require(\"commonutils\");\nclass ConfigManager {\n    KEY_CONFIG = 'config';\n    setting_input;\n    config = {};\n    hooks = {};\n    constructor(PLUGIN_ID, setting_input, settings_preference = undefined) {\n        const CONF = kintone.plugin.app.getConfig(PLUGIN_ID);\n        this.set_config(CONF);\n        console.log(this.config);\n        this.setting_input = setting_input;\n        if (settings_preference) {\n            this.set_preference(settings_preference);\n        }\n    }\n    set_preference(prefs) {\n        const node_title = document.getElementById('plugin_title');\n        if (node_title) {\n            node_title.textContent = prefs.title;\n        }\n        const node_description = document.getElementById('plugin_description');\n        if (node_description) {\n            node_description.textContent = prefs.description;\n        }\n    }\n    build() {\n        kintone.api('/k/v1/preview/app/form/fields', 'GET', {\n            app: kintone.app.getId()\n        }).then(async (resp) => {\n            const node_settings = this.make_setting_fields(resp.properties);\n            const btn_submit = this.make_button_submit();\n            const btn_cancel = this.make_button_cancel();\n            const form_node = (async () => {\n                const node = commonutils_1.Utils.createElement('form', '', await node_settings);\n                node.id = 'form_settings';\n                return node;\n            })();\n            const top = document.getElementById('config_body');\n            top?.appendChild(await form_node);\n            const buttons = commonutils_1.Utils.createElement('div', 'mt-5', [\n                btn_cancel,\n                btn_submit\n            ]);\n            top?.appendChild(buttons);\n        }).then((_resp) => {\n            this.call_target_event('load');\n        }).catch((err) => {\n            throw err;\n        });\n    }\n    async call_target_event(event_name) {\n        const funcs = this.hooks[event_name];\n        if (funcs == undefined) {\n            console.info(`イベント[${event_name}]は未登録です。`);\n            return;\n        }\n        for (const func of funcs) {\n            if (func != undefined) {\n                console.log({ func });\n                await func();\n            }\n        }\n    }\n    layout_inputs(builder, input) {\n        const setting_items = input.map((config) => {\n            const paragraph = this.make_paragraph(builder, config);\n            return paragraph;\n        });\n        return setting_items;\n    }\n    make_paragraph(builder, config) {\n        switch (config.type) {\n            case common_1.FieldType.Text:\n                return builder.make_string_block(config);\n            case common_1.FieldType.MultilineText:\n                return builder.make_multiline_block(config);\n            case common_1.FieldType.Radio:\n                return builder.make_radio_block(config);\n            case common_1.FieldType.Number:\n                return builder.make_string_block(config, 'number');\n            case common_1.FieldType.Checkbox:\n                return builder.make_checkbox_block(config);\n            case common_1.FieldType.IncrementalTable:\n                return builder.make_incremental_table_block(config);\n            case common_1.FieldType.Label:\n                return builder.make_subtitle_block(config);\n            case common_1.FieldType.Separator:\n                return commonutils_1.Utils.createElement('div', 'mt-5 bg-info');\n            case common_1.FieldType.Dropdown_FieldSelect:\n                if (!('accept' in config)) {\n                    throw new Error('プロパティ accept が必要です。config/settings.ts の設定を見直してください。');\n                }\n                return builder.make_dropdown_fieldselect_block(config);\n            default:\n                throw new Error(`未実装のFieldTypeを要求しています。${config.type} を実装してください。`);\n        }\n    }\n    set_config(CONF) {\n        const serialized = commonutils_1.Utils.get_from(CONF, this.KEY_CONFIG, '');\n        if (serialized == '') {\n            console.info('設定値がありません。初期値で開始します。');\n        }\n        else {\n            this.config = JSON.parse(serialized);\n        }\n    }\n    get_config(key = undefined) {\n        if (key == undefined) {\n            return this.config;\n        }\n        if (key in this.config) {\n            return this.config[key];\n        }\n        throw new Error(`未定義または未設定の設定キーが指定されました: [${key}]`);\n    }\n    async make_setting_fields(props) {\n        const builder = new config_builder_1.ConfigBuilder(props, this.config);\n        await builder.load_layout_info();\n        return this.layout_inputs(builder, this.setting_input);\n    }\n    isSecretItem(item) {\n        return 'secret' in item;\n    }\n    secret_parameters(config_tinker) {\n        const secrets = this.setting_input.filter((config) => {\n            return (0, common_1.isSecretItem)(config);\n        });\n        const proxy_params = this.make_proxy_params(secrets, config_tinker);\n        return proxy_params;\n    }\n    make_proxy_params(secrets, config_tinker) {\n        const items = secrets.reduce((prev, secret) => {\n            const key = secret.method + \":\" + secret.URL;\n            if (prev[key] == undefined) {\n                prev[key] = [];\n            }\n            prev[key].push(secret);\n            return prev;\n        }, {});\n        const result_params = Object.keys(items).reduce((params, key) => {\n            const secrets = items[key];\n            console.log({ secrets });\n            const get_text_and_validate_value = (secret) => {\n                const value = config_tinker.get_text_value(secret.code);\n                if (!('required' in secret)) {\n                    secret.required = false;\n                }\n                if (secret.required == true) {\n                    if (value == undefined || value == null || value == \"\") {\n                        throw new Error(`必須の項目[${secret.label}]が未記入です。`);\n                    }\n                }\n                if (value == undefined || value == null) {\n                    return \"\";\n                }\n                return value;\n            };\n            const headers = secrets.filter((secret) => {\n                return 'header' in secret;\n            }).reduce((prev, secret) => {\n                const value = get_text_and_validate_value(secret);\n                if (secret.header == undefined) {\n                    throw new Error('秘匿設定のheader要素が未定義です。');\n                }\n                if (secret.header == \"Authorization Bearer\") {\n                    prev[\"Authorization\"] = \"Bearer \" + value;\n                }\n                else {\n                    prev[secret.header] = value;\n                }\n                return prev;\n            }, {});\n            const data = secrets.filter((secret) => {\n                return 'data' in secret;\n            }).reduce((prev, secret) => {\n                const value = get_text_and_validate_value(secret);\n                if (secret.data == undefined) {\n                    throw new Error('秘匿設定のdata要素が未定義です');\n                }\n                prev[secret.data] = value;\n                return prev;\n            }, {});\n            const param = {\n                'URL': secrets[0].URL,\n                'method': secrets[0].method,\n                'headers': headers,\n                'data': data\n            };\n            params.push(param);\n            return params;\n        }, []);\n        return result_params;\n    }\n    store_parameters(config_tinker) {\n        const store = {};\n        this.setting_input.forEach((config) => {\n            if (config.type == common_1.FieldType.Label || config.type == common_1.FieldType.Separator) {\n                return;\n            }\n            if ('secret' in config && config.secret == true) {\n                return;\n            }\n            config = config;\n            const code = config.code;\n            const required = config.required;\n            console.log({ code });\n            const selected = config_tinker.get_selected(code, config.type);\n            if (selected) {\n                store[code] = selected;\n            }\n            else {\n                if (required) {\n                    const msg = `必須の設定項目 [${config.label}] が未設定です(${code})`;\n                    console.error(msg);\n                    throw new Error(msg);\n                }\n                else {\n                    store[code] = '';\n                }\n            }\n        });\n        console.log(store);\n        return store;\n    }\n    make_button_submit() {\n        const btn_submit = commonutils_1.Utils.createElement('button', 'kintoneplugin-button-dialog-ok');\n        btn_submit.setAttribute('type', 'button');\n        btn_submit.textContent = '適用';\n        btn_submit.addEventListener('keydown', (event) => {\n            if (event.isComposing || event.code == 'Enter') {\n                console.info('適用ボタンのenterを無効化しました。');\n                return false;\n            }\n        });\n        btn_submit.addEventListener('click', async (event) => {\n            event.preventDefault();\n            const this_form = document.getElementById('form_settings');\n            if (this_form == null) {\n                throw 'ERROR: フォーム要素を取得できませんでした。';\n            }\n            await this.call_target_event('submit')\n                .catch((error) => {\n                const msg = `⛔ 設定の保存でエラーが発生しました。（${error}）`;\n                console.log(msg);\n                alert(msg);\n                throw new Error(msg);\n            });\n            const config_tinker = new config_utilities_1.ConfigUtilities(this_form);\n            let proxy_params;\n            try {\n                proxy_params = this.secret_parameters(config_tinker);\n                console.log({ proxy_params });\n            }\n            catch (error) {\n                console.log('call 6');\n                const msg = `⛔ 設定値の保存でエラーが発生しました。設定値を見直してください。（${error}）`;\n                alert(msg);\n                console.log('call 7');\n                return event;\n            }\n            proxy_params.forEach(async (param) => {\n                console.log({ param });\n                const result = kintone.plugin.app.setProxyConfig(param.URL, param.method, param.headers, param.data, () => {\n                    console.log({ result });\n                });\n            });\n            let store_parameters;\n            try {\n                console.log('call 1');\n                store_parameters = this.store_parameters(config_tinker);\n                console.log('call 2');\n                setTimeout(() => {\n                    console.log('call 3');\n                    const serialized = JSON.stringify(store_parameters);\n                    console.log(serialized);\n                    const config = {};\n                    config[this.KEY_CONFIG] = serialized;\n                    console.log('call 4');\n                    kintone.plugin.app.setConfig(config);\n                }, 200);\n            }\n            catch (error) {\n                console.log('call 6');\n                alert(`⛔ 設定値の保存でエラーが発生しました。設定値を見直してください。（${error}）`);\n                console.log('call 7');\n                return event;\n            }\n        });\n        console.log('call 8');\n        return btn_submit;\n    }\n    make_button_cancel() {\n        const btn_cancel = commonutils_1.Utils.createElement('button', 'js-cancel-button kintoneplugin-button-dialog-cancel');\n        btn_cancel.textContent = 'キャンセル';\n        btn_cancel.addEventListener('click', function (event) {\n            console.log(event);\n            window.location.href = '../../' + kintone.app.getId() + '/plugin/';\n        });\n        return btn_cancel;\n    }\n    add_hook(event_name, func) {\n        if (this.hooks[event_name] == undefined) {\n            this.hooks[event_name] = [];\n        }\n        this.hooks[event_name]?.push(func);\n    }\n}\nexports.ConfigManager = ConfigManager;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigUtilities = void 0;\nconst commonutils_1 = require(\"commonutils\");\nconst common_1 = require(\"./common\");\nclass ConfigUtilities {\n    static DEFAULT_OPTION = '----';\n    config_form;\n    whole_selected_field_codes;\n    constructor(config_form) {\n        this.config_form = config_form;\n        this.whole_selected_field_codes = [];\n    }\n    add_selected_field_codes = (code) => {\n        this.whole_selected_field_codes.push(code);\n    };\n    is_overlapped(additional_labels) {\n        return commonutils_1.Utils.is_overlapped(this.overlapped(additional_labels));\n    }\n    overlapped(additional_labels = undefined) {\n        if (additional_labels != undefined) {\n            this.whole_selected_field_codes.concat(additional_labels);\n        }\n        return commonutils_1.Utils.overlapped(this.whole_selected_field_codes);\n    }\n    clear_selected_field_labels() {\n        this.whole_selected_field_codes = [];\n    }\n    get_selected_fieldcode = (select_node_id) => {\n        console.log(`[ConfigTinker] get_selected_fieldcode(): ${select_node_id}`);\n        const node = document.getElementById(select_node_id);\n        if (node.selectedIndex == -1) {\n            return '';\n        }\n        else if (node.options[node.selectedIndex].label == ConfigUtilities.DEFAULT_OPTION) {\n            return '';\n        }\n        const code = node.selectedOptions[0].getAttribute('fieldcode');\n        if (code == null) {\n            throw new Error(`ノード[ ${select_node_id} ]はフィールド選択ではありません。`);\n        }\n        return code;\n    };\n    get_selected_label = (select_node_id) => {\n        console.log(`[ConfigTinker] get_selected_label(): ${select_node_id}`);\n        const node = document.getElementById(select_node_id);\n        if (node == null) {\n            throw new Error(`ConfigUtilities.get_selected_label(): 指定のID'${select_node_id}'が null でした。`);\n        }\n        if (node.selectedIndex == -1) {\n            return '';\n        }\n        return node.selectedOptions[0].label;\n    };\n    get_checked_boxes = (select_node_id) => {\n        console.log(`[ConfigTinker] get_checked_boxes(): ${select_node_id}`);\n        const target_boxes = document.querySelectorAll(`[id^=\"${select_node_id}-\"]`);\n        if (target_boxes.length == 0) {\n            throw new Error(`ConfigUtilities.get_checked_boxes(): 指定のID'${select_node_id}-'から始まるチェックボックスが見つかりませんでした。`);\n        }\n        const checked_labels = Array.from(target_boxes).reduce((checked, curr) => {\n            if (curr.checked) {\n                checked.push(curr.value);\n            }\n            return checked;\n        }, []);\n        console.log({ checked_labels });\n        return checked_labels;\n    };\n    get_selected_radio(radio_id) {\n        const radio_name = `radio-${radio_id}`;\n        console.log(`[ConfigTinker] get_selected_radio(): ${radio_name}`);\n        const nodes = document.getElementsByName(radio_name);\n        const length = nodes.length;\n        for (let idx = 0; idx < length; idx++) {\n            const node_input = nodes[idx];\n            if (node_input.checked == true) {\n                return node_input.value;\n            }\n        }\n        return \"\";\n    }\n    get_text_value(fieldcode) {\n        const field_id = `text-${fieldcode}`;\n        console.log(`[ConfigTinker] get_text_value(): ${field_id}`);\n        const node_input = document.getElementById(field_id);\n        return node_input.value;\n    }\n    get_multilinetext_value(fieldcode) {\n        const field_id = `multiline-${fieldcode}`;\n        console.log(`[ConfigTinker] get_multiline_value(): ${field_id}`);\n        const node_input = document.getElementById(field_id);\n        return node_input.value;\n    }\n    get_number_value(fieldcode) {\n        const field_id = `number-${fieldcode}`;\n        console.log(`[ConfigTinker] get_number_value(): ${field_id}`);\n        const node_input = document.getElementById(field_id);\n        return node_input.value;\n    }\n    get_incremental_table_values(fieldcode) {\n        const field_id = `table-${fieldcode}`;\n        const node_table = document.getElementById(field_id);\n        console.log(field_id);\n        console.log(node_table);\n        if (node_table == null) {\n            throw new Error(`指定したテーブルが見つかりません。(id: ${field_id})`);\n        }\n        return this.abstruct_from_incremental_table(node_table);\n    }\n    abstruct_from_incremental_table(node_table) {\n        const whole_headers = Array.from(node_table.rows).filter((row) => {\n            return row.firstChild?.nodeName == \"TH\";\n        }).map((row) => {\n            const texts = Array.from(row.cells).filter((cell) => {\n                return cell.innerText != \"\";\n            }).map((cell) => {\n                return cell.innerText;\n            });\n            console.log(texts);\n            return texts;\n        });\n        const values = Array.from(node_table.rows).filter((row) => {\n            return row.firstChild?.nodeName != \"TH\";\n        }).map((row) => {\n            const cells = Array.from(row.cells).filter((cell) => {\n                const input_element = cell.getElementsByClassName('kintoneplugin-input-text')[0];\n                const selected_element = cell.getElementsByClassName('select-kintone-field')[0];\n                const checkbox_element = cell.getElementsByClassName('kintoneplugin-input-checkbox-item');\n                const multiline_element = cell.getElementsByClassName('kintoneplugin-multiline-text-inner')[0];\n                return input_element !== undefined || selected_element !== undefined || checkbox_element !== undefined || multiline_element != undefined;\n            }).map((cell) => {\n                const input_element = cell.getElementsByClassName('kintoneplugin-input-text')[0];\n                console.log({ input_element });\n                if (input_element != null) {\n                    return input_element.value;\n                }\n                const multiline_element = cell.getElementsByClassName('kintoneplugin-multiline-text-inner')[0];\n                console.log({ multiline_element });\n                if (multiline_element != null) {\n                    return multiline_element.value;\n                }\n                const selected_element = cell.getElementsByClassName('select-kintone-field')[0];\n                console.log({ selected_element });\n                if (selected_element != null) {\n                    const index = selected_element.selectedIndex;\n                    console.log({ index });\n                    const option = selected_element[index];\n                    if ('fieldcode' in selected_element[index].attributes) {\n                        console.log(`selected_element fieldcode: ${option.getAttribute('fieldcode')}`);\n                        const fieldcode = option.getAttribute('fieldcode');\n                        if (fieldcode != null) {\n                            return fieldcode;\n                        }\n                    }\n                    return selected_element[index].label;\n                }\n                console.log({ cell });\n                const checkbox_items = cell.getElementsByClassName('kintoneplugin-input-checkbox');\n                console.log({ checkbox_items });\n                if (checkbox_items != null) {\n                    return Array.from(checkbox_items).filter(item => {\n                        const node_checkbox = item.childNodes[0].childNodes[0];\n                        return node_checkbox.checked;\n                    }).map(item => {\n                        console.log({ item });\n                        if (item.textContent == null) {\n                            throw new Error('ラベルのないチェックボックスが定義されています。');\n                        }\n                        return item.textContent;\n                    });\n                }\n                throw new Error(`未対応のテーブルセル ${row} が渡されました。`);\n            }).filter((cell) => {\n                return !(Array.isArray(cell) && cell.length == 0);\n            });\n            return cells;\n        });\n        console.log({ values });\n        const filtered = values.filter((row) => {\n            return row.length > 0;\n        }).filter((row) => {\n            return row.filter((cell) => {\n                const length = cell != null ? cell.length : 0;\n                return length > 0;\n            }).length > 0;\n        });\n        console.log(filtered);\n        if (filtered.length == 0) {\n            return null;\n        }\n        const headers = whole_headers[0];\n        console.log({ headers });\n        const table_values = values.map((value) => {\n            return value.reduce((prev, cell, index) => {\n                const content = cell == null ? \"\" : cell;\n                prev[headers[index]] = content;\n                return prev;\n            }, {});\n        });\n        console.log({ table_values });\n        return table_values;\n    }\n    get_selected(node_id, field_type) {\n        switch (field_type) {\n            case common_1.FieldType.Dropdown:\n                return this.get_selected_label(node_id);\n            case common_1.FieldType.Checkbox:\n                return this.get_checked_boxes(node_id);\n            case common_1.FieldType.Radio:\n                return this.get_selected_radio(node_id);\n            case common_1.FieldType.Dropdown_FieldSelect:\n                return this.get_selected_fieldcode(node_id);\n            case common_1.FieldType.Text:\n                return this.get_text_value(node_id);\n            case common_1.FieldType.Number:\n                return this.get_number_value(node_id);\n            case common_1.FieldType.MultilineText:\n                return this.get_multilinetext_value(node_id);\n            case common_1.FieldType.IncrementalTable:\n                return this.get_incremental_table_values(node_id);\n        }\n        throw new Error(`get_selected(): 不明なフィールドタイプが渡されました (field_type: ${field_type})`);\n    }\n}\nexports.ConfigUtilities = ConfigUtilities;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldBuilder = void 0;\nconst commonutils_1 = require(\"commonutils\");\nconst common_1 = require(\"./common\");\nconst config_builder_1 = require(\"./config-builder\");\nconst config_utilities_1 = require(\"./config-utilities\");\nclass FieldBuilder {\n    props;\n    empty_label;\n    constructor(props, empty_label = config_utilities_1.ConfigUtilities.DEFAULT_OPTION) {\n        this.props = props;\n        this.empty_label = empty_label;\n    }\n    build_table_cell(table_id, column, value, row_count) {\n        if ('accept' in column) {\n            switch (column.type) {\n                case common_1.FieldType.Checkbox:\n                    return this.build_checkbox_cell(value, column, table_id, row_count);\n                case common_1.FieldType.Dropdown:\n                    return this.build_dropdown_cell(value, column);\n                case common_1.FieldType.Dropdown_FieldSelect:\n                    return this.build_dropdown_fieldselect_cell(value, column);\n            }\n        }\n        else {\n            switch (column.type) {\n                case common_1.FieldType.Text:\n                    return this.build_textcell(value);\n                case common_1.FieldType.MultilineText:\n                    return this.build_multilinetext_cell(value, column);\n            }\n        }\n        throw new Error(`未定義のFieldTypeが渡されました。FieldTypeに${column.type} を実装してください。`);\n    }\n    build_textcell = (preset) => {\n        preset = preset === undefined ? '' : preset;\n        return commonutils_1.Utils.createElement('div', 'kintoneplugin-input-outer', [\n            commonutils_1.Utils.createElement('input', 'kintoneplugin-input-text', [], undefined, {\n                'type': 'text',\n                'value': preset\n            })\n        ]);\n    };\n    build_checkbox_cell = (preset, column, table_id, row_count) => {\n        const list_checkbox = column.accept.map(box_value => {\n            const checkbox_id = `${table_id}-${row_count}-${box_value}`;\n            preset = preset === undefined ? [] : preset;\n            console.log({ box_value });\n            console.log({ preset });\n            const checked = preset.includes(box_value) ? \"checked\" : \"\";\n            const node_checkbox = commonutils_1.Utils.ce('input', '', [], '', {\n                'type': 'checkbox',\n                'name': 'checkbox',\n                'value': box_value,\n                'id': checkbox_id\n            });\n            if (checked != \"\") {\n                node_checkbox.setAttribute('checked', checked);\n            }\n            return commonutils_1.Utils.ce('div', 'kintoneplugin-input-checkbox', [\n                commonutils_1.Utils.createElement('span', 'kintoneplugin-input-checkbox-item', [\n                    node_checkbox,\n                    commonutils_1.Utils.ce('label', '', [], box_value, {\n                        'for': checkbox_id\n                    })\n                ])\n            ]);\n        });\n        return commonutils_1.Utils.createElement('div', '', list_checkbox);\n    };\n    build_dropdown_cell = (preset, column) => {\n        if (column == undefined || !('accept' in column)) {\n            throw new Error('選択肢情報としてundefinedが渡されました。');\n        }\n        preset = preset === undefined ? '' : preset;\n        const field_dropdown = commonutils_1.Utils.createElement('select', 'select-kintone-field');\n        if (column.empty_label != null) {\n            const empty_item = commonutils_1.Utils.createElement('option');\n            empty_item.label = column.empty_label;\n            field_dropdown.appendChild(empty_item);\n        }\n        column.accept.forEach((label) => {\n            const item = commonutils_1.Utils.createElement('option');\n            item.label = label;\n            if (label == preset) {\n                item.setAttribute('selected', '');\n            }\n            field_dropdown.appendChild(item);\n        });\n        return commonutils_1.Utils.createElement('div', '', [\n            commonutils_1.Utils.createElement('div', \"kintoneplugin-select-outer\", [\n                commonutils_1.Utils.createElement('div', 'kintoneplugin-select', [field_dropdown])\n            ])\n        ]);\n    };\n    build_dropdown_fieldselect_cell = (preset, column) => {\n        if (column == undefined || !('accept' in column)) {\n            throw new Error('選択肢情報としてundefinedが渡されました。');\n        }\n        const field_dropdown = commonutils_1.Utils.createElement('select', 'select-kintone-field');\n        field_dropdown.id = preset === undefined ? '' : preset;\n        const empty_item = commonutils_1.Utils.createElement('option');\n        empty_item.label = this.empty_label;\n        field_dropdown.appendChild(empty_item);\n        const parts = config_builder_1.ConfigBuilder.get_formparts(this.props, column.accept);\n        const show_fc = column.verbose ? column.verbose : false;\n        const items = this.compose_fielditems(parts, preset, show_fc);\n        items.forEach((item) => {\n            field_dropdown.appendChild(item);\n        });\n        return commonutils_1.Utils.createElement('div', '', [\n            commonutils_1.Utils.createElement('div', \"kintoneplugin-select-outer\", [\n                commonutils_1.Utils.createElement('div', 'kintoneplugin-select', [field_dropdown])\n            ])\n        ]);\n    };\n    compose_fielditems(parts, preset, show_fc) {\n        const items = [];\n        for (const code in parts) {\n            const item = commonutils_1.Utils.createElement('option');\n            const prop = parts[code];\n            item.setAttribute('fieldcode', code);\n            if (show_fc) {\n                item.label = prop.label + ` [${code}]`;\n            }\n            else {\n                item.label = prop.label;\n            }\n            if (code == preset) {\n                item.setAttribute('selected', '');\n            }\n            items.push(item);\n        }\n        return items;\n    }\n    build_multilinetext_cell = (preset) => {\n        preset = preset === undefined ? '' : preset;\n        return commonutils_1.Utils.createElement('div', 'kintoneplugin-input-outer', [\n            commonutils_1.Utils.ce('textarea', 'kintoneplugin-multiline-text-inner', [], preset, {\n                'rows': '3',\n                'cols': '40'\n            })\n        ]);\n    };\n}\nexports.FieldBuilder = FieldBuilder;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IncrementalTableBuilder = void 0;\nconst commonutils_1 = require(\"commonutils\");\nconst config_builder_1 = require(\"./config-builder\");\nclass IncrementalTableBuilder {\n    table_conf;\n    saved_rows;\n    table_rows;\n    field_builder;\n    rows_count;\n    constructor(input_field, saved_rows, field_builder) {\n        this.table_conf = input_field;\n        this.saved_rows = saved_rows;\n        this.field_builder = field_builder;\n        this.table_rows = [];\n        this.rows_count = 0;\n    }\n    build() {\n        const table_cols = this.table_conf.table_cols;\n        const spacer_count = table_cols.length - 3;\n        if (this.saved_rows == null || Object.keys(this.saved_rows).length == 0) {\n            this.table_rows.push(this.build_table_row(0, table_cols, undefined, spacer_count));\n        }\n        else {\n            this.saved_rows.forEach((opt, index) => {\n                const row = this.build_table_row(index, table_cols, opt, spacer_count);\n                this.table_rows.push(row);\n            });\n        }\n        return this.table_rows;\n    }\n    build_table_row(row_number, table_cols, saved_data = undefined, spacer_cols = 0) {\n        console.log({ table_cols });\n        console.log({ saved_data });\n        const built_row = [];\n        for (let index = 0; index < table_cols.length; index++) {\n            const column = table_cols[index];\n            const value = saved_data == undefined ? undefined : saved_data[column.header];\n            console.log({ value });\n            const input_field = this.field_builder.build_table_cell(this.table_conf.code, column, value, row_number);\n            built_row.push(commonutils_1.Utils.ce('td', '', [\n                commonutils_1.Utils.ce('div', 'kintoneplugin-table-td-control', [\n                    commonutils_1.Utils.ce('div', 'kintoneplugin-table-td-control-value', [\n                        input_field\n                    ])\n                ])\n            ]));\n        }\n        const node_button_add = this.create_button_row_add(table_cols);\n        const node_button_remove = this.create_button_row_remove();\n        console.log({ spacer_cols });\n        spacer_cols = spacer_cols < 0 ? 0 : spacer_cols;\n        const spacers = [...Array(spacer_cols)].map(() => {\n            return commonutils_1.Utils.createElement('td', 'td_spacer');\n        });\n        const tds = [\n            ...built_row,\n            ...spacers,\n            commonutils_1.Utils.createElement('td', 'kintoneplugin-table-td-operation', [\n                node_button_add,\n                node_button_remove\n            ])\n        ];\n        this.rows_count = built_row.length;\n        const table_row = commonutils_1.Utils.createElement('tr', '', tds);\n        return table_row;\n    }\n    get_table_rows_count() {\n        const table_id = `table-${this.table_conf.code}`;\n        const table_node = document.getElementById(table_id);\n        if (table_node) {\n            return table_node.getElementsByTagName('tr').length;\n        }\n        throw new Error(`指定したテーブルID ${table_id} が存在しません。`);\n    }\n    create_button_row_add(table_cols) {\n        const node_button_add = document.createElement('button');\n        node_button_add.className = 'kintoneplugin-button-add-row-image';\n        node_button_add.setAttribute('type', 'button');\n        node_button_add.setAttribute('title', 'Add row');\n        node_button_add.addEventListener('click', (event) => {\n            console.log(`テーブルを一行追加する${event}`);\n            const grand_tr = config_builder_1.ConfigBuilder.get_grand_tr(event.target);\n            const ancestor_tbody = grand_tr?.parentNode;\n            if (grand_tr == null || ancestor_tbody == null) {\n                throw 'ERROR: 祖先のtbodyを取得できませんでした。';\n            }\n            const target = event?.target;\n            if (target == null) {\n                return;\n            }\n            const spacer_count = grand_tr.children.length - 1 - table_cols.length;\n            const rows_count = this.get_table_rows_count() + 1;\n            const add_elem = this.build_table_row(rows_count, table_cols, undefined, spacer_count);\n            ancestor_tbody.insertBefore(add_elem, grand_tr.nextElementSibling);\n        });\n        return node_button_add;\n    }\n    create_button_row_remove() {\n        const node_button_remove = document.createElement('button');\n        node_button_remove.className = 'kintoneplugin-button-remove-row-image';\n        node_button_remove.setAttribute('type', 'button');\n        node_button_remove.setAttribute('title', 'Delete this row');\n        node_button_remove.addEventListener('click', (event) => {\n            const grand_tr = config_builder_1.ConfigBuilder.get_grand_tr(event.target);\n            if (grand_tr.parentNode?.childNodes.length == 1) {\n                return;\n            }\n            grand_tr.parentNode?.removeChild(grand_tr);\n            console.log(`テーブルを一行削除する${event}`);\n        });\n        return node_button_remove;\n    }\n}\nexports.IncrementalTableBuilder = IncrementalTableBuilder;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./config-builder\"), exports);\n__exportStar(require(\"./config-manager\"), exports);\n__exportStar(require(\"./config-utilities\"), exports);\n__exportStar(require(\"./field-builder\"), exports);\n__exportStar(require(\"./incremental-table-builder\"), exports);\n__exportStar(require(\"./common\"), exports);\n","module.exports = {};\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ButtonInstaller = void 0;\nconst utils_1 = require(\"./utils\");\nrequire(\"@shin-chan/kypes\");\nclass ButtonInstaller {\n    class_hms_button = 'button-hms-items';\n    buttons = [];\n    canvas;\n    constructor(classname = '') {\n        if (classname != '') {\n            this.class_hms_button = classname;\n        }\n    }\n    create_button(icon_label, tooltip = '') {\n        const icon = utils_1.Utils.ce('span', '', [], icon_label);\n        icon.style.color = 'dodgerblue';\n        let button = utils_1.Utils.ce('button', this.class_hms_button, [icon], '', {\n            'title': tooltip\n        });\n        button = utils_1.Utils.decorate_menu_icon(button);\n        console.log(icon_label.length);\n        if (icon_label.length > 2) {\n            button.style.fontSize = '16px';\n        }\n        return button;\n    }\n    add_button(button) {\n        this.buttons.push(button);\n    }\n    install() {\n        if (this.already_installed()) {\n            console.info('ボタンはすでに設置済みです。');\n            return;\n        }\n        if (this.buttons.length == 0) {\n            console.info('ボタンが設定されていません。何もせずに終了します。');\n            return;\n        }\n        this.put_buttons(this.buttons);\n    }\n    set_canvas(canvas) {\n        this.canvas = canvas;\n    }\n    get_hms() {\n        const hms = kintone.app.getHeaderMenuSpaceElement();\n        if (hms == undefined) {\n            const msg = 'ボタン配置スペースが取得できませんでした。';\n            console.error(msg);\n            throw new Error(msg);\n        }\n        return hms;\n    }\n    already_installed() {\n        const hms_buttons = document.getElementsByClassName(this.class_hms_button);\n        if (hms_buttons.length > 0) {\n            return true;\n        }\n        return false;\n    }\n    put_buttons(buttons) {\n        const hms = this.canvas === undefined ? this.get_hms() : this.canvas;\n        buttons.forEach((btn) => {\n            console.log(hms);\n            hms.append(btn);\n        });\n    }\n    get_header_element(index_text) {\n        const headers = document.querySelectorAll('.recordlist-header-label-gaia');\n        return Array.from(headers).filter((header) => {\n            return header.textContent == index_text;\n        });\n    }\n}\nexports.ButtonInstaller = ButtonInstaller;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./button_installer\"), exports);\n__exportStar(require(\"./plugin_canvas\"), exports);\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginCanvas = void 0;\nconst utils_1 = require(\"./utils\");\nrequire(\"@shin-chan/kypes\");\nclass PluginCanvas {\n    static CLASS_DISMISS = 'offcanvas-dismiss';\n    id_island;\n    id_offcanvas;\n    title_offcanvas;\n    island;\n    enable_offcanvas;\n    constructor(title, id_island, default_element = null, icon_element = undefined) {\n        this.title_offcanvas = title;\n        this.id_island = `plugin_island_id_${id_island}`;\n        this.id_offcanvas = `offcanvas_${this.id_island}`;\n        if (id_island == \"\") {\n            console.log(`[${this.constructor.name}] オフキャンバスを使いません。`);\n            if (default_element == null) {\n                default_element = kintone.app.getHeaderMenuSpaceElement();\n            }\n            if (default_element == null) {\n                throw new Error('kintone.app.HeaderMenuSpaceElement() を取得できませんでした。');\n            }\n            this.island = default_element;\n            this.enable_offcanvas = false;\n            return;\n        }\n        this.enable_offcanvas = true;\n        const already = document.getElementById(this.id_island);\n        if (already) {\n            console.log(`[${this.constructor.name}] 既存のオフキャンバスを使用します。`);\n            this.island = already;\n        }\n        else {\n            console.log(`[${this.constructor.name}] オフキャンバスをID[${this.id_island}]で作成します。`);\n            const icon_balloon = ((icon) => {\n                if (icon) {\n                    return icon;\n                }\n                else {\n                    const baloon = utils_1.Utils.ce('span', '', [], '🎈');\n                    baloon.style.cursor = 'pointer';\n                    return baloon;\n                }\n            })(icon_element);\n            icon_balloon.style.color = 'dodgerblue';\n            let island = utils_1.Utils.ce('div', 'bbk-tool-icon-box', [icon_balloon], '', {\n                'id': this.id_island,\n                'data-bs-toggle': 'offcanvas',\n                'aria-controls': this.id_offcanvas,\n                'data-bs-target': `#${this.id_offcanvas}`\n            });\n            island = utils_1.Utils.decorate_menu_icon(island);\n            this.island = island;\n            this.init_offcanvas();\n        }\n    }\n    init_offcanvas() {\n        const headerSpace = kintone.app.getHeaderMenuSpaceElement();\n        if (headerSpace) {\n            headerSpace.appendChild(this.get_node());\n            headerSpace.appendChild(this.build_node_offcanvas());\n        }\n    }\n    get_node() {\n        return this.island;\n    }\n    build_node_offcanvas() {\n        return utils_1.Utils.ce('div', 'offcanvas offcanvas-start', [\n            utils_1.Utils.ce('div', 'offcanvas-header', [\n                utils_1.Utils.ce('h5', 'offcanvas-title', [], this.title_offcanvas, {\n                    'id': `${this.id_offcanvas}Label`\n                }),\n                utils_1.Utils.ce('button', 'btn-close text-reset', [], '', {\n                    'data-bs-dismiss': 'offcanvas',\n                    'aria-label': 'Close'\n                })\n            ]),\n            utils_1.Utils.ce('div', 'offcanvas-body', [\n                utils_1.Utils.ce('div', 'mb-4', [], 'ここから各種プラグインを呼び出せます。')\n            ], '', {\n                'id': `${this.id_offcanvas}-body`\n            })\n        ], '', {\n            'tabindex': '-1',\n            'id': `${this.id_offcanvas}`,\n            'aria-labelledby': `${this.id_offcanvas}Label`,\n            'data-bs-backdrop': 'false'\n        });\n    }\n    append(node) {\n        if (this.enable_offcanvas) {\n            const offcanvas = document.getElementById(`${this.id_offcanvas}-body`);\n            this.deal_dismiss_attribute(node);\n            offcanvas?.appendChild(node);\n        }\n        else {\n            this.island.append(node);\n        }\n    }\n    deal_dismiss_attribute(node) {\n        const dismissElements = Array.from(node.querySelectorAll(`.${PluginCanvas.CLASS_DISMISS}`));\n        console.log(dismissElements);\n        if (dismissElements.length > 0) {\n            dismissElements.map((element) => {\n                element.setAttribute('data-bs-dismiss', \"offcanvas\");\n            });\n        }\n        else {\n            node.setAttribute('data-bs-dismiss', \"offcanvas\");\n        }\n    }\n}\nexports.PluginCanvas = PluginCanvas;\n","\"use strict\";\n/*!\n * Copyright 2023 Daisuke Motohashi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nclass Utils {\n    static unique_properties(props, with_record_number = false) {\n        const results = [];\n        for (const fieldcode of Object.keys(props)) {\n            const prop = props[fieldcode];\n            if (prop.unique == true) {\n                results.push(prop);\n            }\n            else if (with_record_number && prop['type'] == 'RECORD_NUMBER') {\n                results.push(prop);\n            }\n        }\n        return results;\n    }\n    static is_not_empty_string(test_str) {\n        return !Utils.is_empty_string(test_str);\n    }\n    static is_empty_string(test_str) {\n        if (test_str == null || test_str == undefined) {\n            return true;\n        }\n        if (test_str.length > 0) {\n            return false;\n        }\n        return true;\n    }\n    static get_from = (dic, conf_key, defaults) => {\n        if (dic.hasOwnProperty(conf_key)) {\n            return dic[conf_key];\n        }\n        return defaults;\n    };\n    static buildElement = (params) => {\n        const tag = params['tagName'];\n        const cl = params['className'] ? params['className'] : \"\";\n        const ce = params['childElements'] ? params['childElements'] : [];\n        const tc = params['textContent'] ? params['textContent'] : undefined;\n        const ih = params['innerHTML'] ? params['innerHTML'] : undefined;\n        const at = params['attrs'] ? params['attrs'] : {};\n        return Utils.createElement(tag, cl, ce, tc, at, ih);\n    };\n    static createElement = (tagName, className = \"\", childElements = [], textContent = undefined, attrs = undefined, innerHTML = undefined) => {\n        const el = document.createElement(tagName);\n        el.className = className;\n        if (textContent != undefined) {\n            el.textContent = textContent;\n        }\n        if (innerHTML != undefined) {\n            el.innerHTML = innerHTML;\n        }\n        if (childElements.length > 0) {\n            childElements.forEach((child) => {\n                el.appendChild(child);\n            });\n        }\n        if (attrs) {\n            Object.entries(attrs).forEach(([key, value]) => {\n                el.setAttribute(key, value);\n            });\n        }\n        return el;\n    };\n    static ce = (t, c = \"\", ce = [], tc = \"\", at = undefined) => {\n        return this.createElement(t, c, ce, tc, at);\n    };\n    static decorate_menu_icon(el) {\n        el.style.height = '48px';\n        el.style.backgroundColor = '#f7f9fa';\n        el.style.fontSize = '28px';\n        el.style.border = '1px solid #e3e7e8';\n        el.style.display = 'inline';\n        el.style.marginLeft = '2px';\n        el.style.marginRight = '2px';\n        el.style.verticalAlign = 'middle';\n        return el;\n    }\n    static simpleDiv = (msg) => {\n        return Utils.createElement('div', '', [], msg);\n    };\n    static is_overlapped = (list) => {\n        const overlapped = Utils.overlapped(list);\n        if (overlapped.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    static overlapped = (list) => {\n        const overlapped = list.filter((x, _i, self) => {\n            return self.indexOf(x) !== self.lastIndexOf(x);\n        });\n        return Array.from(new Set(overlapped));\n    };\n    static get_application_url(appid) {\n        return `${location.protocol}//${location.host}/k/${appid}`;\n    }\n    static retrieve_errors(error, max_msgs = -1) {\n        const errors = error?.error?.errors;\n        if (errors == undefined) {\n            return undefined;\n        }\n        let whole_errors = [];\n        Object.keys(errors).forEach((field) => {\n            const msgs = errors[field].messages;\n            const comments = msgs.map((msg) => {\n                return `[${field}] ${msg}`;\n            });\n            whole_errors = whole_errors.concat(comments);\n        });\n        whole_errors.sort();\n        if (max_msgs >= 0 && max_msgs < whole_errors.length) {\n            const remain_msgs = whole_errors.length - max_msgs;\n            whole_errors = whole_errors.splice(0, max_msgs);\n            whole_errors.push(`以下${remain_msgs}件のエラーメッセージを省略しました。`);\n        }\n        return whole_errors;\n    }\n}\nexports.Utils = Utils;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// 定数定義、configとdesktopの双方で使う定義値をここで記述する\r\nexport const CONSTANTS = {\r\n    // プラグインのタイトル\r\n    PLUGIN_NAME: 'ChatGPT連携プラグイン'\r\n\r\n    // 分類が未選択の場合に表示する文字列\r\n    , EMPTY_LABEL: \"----\"\r\n\r\n    // API Key\r\n    , API_KEY: 'api_key'\r\n\r\n    // ChatGPT Model ID\r\n    , MODEL_ID: 'model_id'\r\n\r\n    // 固定プロンプト\r\n    , STATIC_PROMPT: 'static_prompt'\r\n\r\n    // レコード個別プロンプト\r\n    , UNIQUE_PROMPT: 'unique_prompt'\r\n\r\n    // 入力フィールド選択\r\n    , INPUT_FIELD: 'input_field'\r\n\r\n    // 出力フィールド選択\r\n    , OUTPUT_FIELD: 'output_field'\r\n\r\n    // 実行ボタン配置スペース\r\n    , BTN_SPACE_FIELD: 'btn_space_field'\r\n\r\n    // レコード編集モード\r\n    , FLAG_RECORD_MODIFIER: 'flag_record_modifier'\r\n    , LABELS_RECORD_MODIFIER: ['enable', 'disable']\r\n\r\n    // レスポンスの最長トークン\r\n    , NUMBER_MAX_TOKENS: 'NUMBER_MAX_TOKENS'\r\n\r\n    // systemロールのプロンプト\r\n    , SYSTEM_PROMPT: 'system_prompt'\r\n\r\n    // fewshotを定義するテーブル\r\n    , TABLE_FEWSHOTS_PROMPT: 'table_fewshot_prompt'\r\n    // テーブルの各項目\r\n    , TABLE_FEWSHOTS: {\r\n        'role': '役割'\r\n        , 'content': 'プロンプト'\r\n    }\r\n};\r\n\r\n// export type fewshots_keys =  keyof typeof CONSTANTS.TABLE_FEWSHOTS\r\n","import { FieldType, KintoneConfigSetting, KintonePluginPreference } from \"plugin-parameters-helper\";\r\nimport { CONSTANTS } from \"../constants\";\r\n\r\n// 設定項目に関する設定、デスクトップ側からも参照する。\r\nexport class Settings {\r\n    // 設定項目の定義\r\n    static preference: KintonePluginPreference = {\r\n        'title': 'ChatGPT連携プラグインの設定'\r\n        , 'description': ''\r\n    }\r\n\r\n    static input: KintoneConfigSetting = [\r\n        {\r\n            'label': 'ChatGPTの設定'\r\n            , 'desc': 'API呼び出しに必要な項目を指定します。'\r\n            , 'type': FieldType.Label\r\n        }\r\n        , {\r\n            'label': 'API Key'\r\n            , 'desc': 'ChatGPT APIのAPI Tokenを指定してください。'\r\n            , 'code': CONSTANTS.API_KEY\r\n            , 'type': FieldType.Text\r\n            , 'required': true\r\n            , 'secret': true\r\n            , 'URL': 'https://api.openai.com/v1/chat/completions'\r\n            , 'method': 'POST'\r\n            , 'header': 'Authorization Bearer'\r\n        }\r\n        , {\r\n            'label': 'ChatGPTの利用モデル'\r\n            , 'desc': '利用モデル名を入力してください。デフォルトは \"gpt-3.5-turbo\" です。'\r\n            , 'code': CONSTANTS.MODEL_ID\r\n            , 'type': FieldType.Text\r\n            , 'default': 'gpt-3.5-turbo'\r\n            , 'required': true\r\n        }\r\n        , {\r\n            'label': 'MAX Tokens'\r\n            , 'desc': 'レスポンスの最大トークン長を指定してください。'\r\n            , 'code': CONSTANTS.NUMBER_MAX_TOKENS\r\n            , 'type': FieldType.Number\r\n            , 'default': '512'\r\n            , 'required': true\r\n        }\r\n        , {\r\n            'label': '役割プロンプト'\r\n            , 'desc': 'ChatGPTの役割を与えます。あなたはカウンセラーです。のような役割をプロンプトしてください。'\r\n            , 'code': CONSTANTS.SYSTEM_PROMPT\r\n            , 'type': FieldType.MultilineText\r\n            , 'rows': 3\r\n            , 'cols': 50\r\n            , 'required': false\r\n        }\r\n        , {\r\n            'label': '対話例プロンプト'\r\n            , 'desc': '会話の例をChatGPTに教えます。この項目が長くなる場合はMAX Tokensの値を増やしてください。'\r\n            , 'code': CONSTANTS.TABLE_FEWSHOTS_PROMPT\r\n            , 'type': FieldType.IncrementalTable\r\n            , 'required': false\r\n            , 'table_cols': [\r\n                {\r\n                    'header': CONSTANTS.TABLE_FEWSHOTS.role\r\n                    , 'type': FieldType.Dropdown\r\n                    , 'accept': ['user', 'assistant']\r\n                }\r\n                , {\r\n                    'header': CONSTANTS.TABLE_FEWSHOTS.content\r\n                    , 'type': FieldType.MultilineText\r\n                }\r\n            ]\r\n        }\r\n        , {\r\n            'label': ''\r\n            , 'desc': '=============================================='\r\n            , 'type': FieldType.Separator\r\n            , 'required': false\r\n        }\r\n        , {\r\n            'label': 'プラグインの動作設定'\r\n            , 'desc': 'ボタンの配置やレコード単位でプロンプトとして使用するフィールドなどを設定します。'\r\n            , 'type': FieldType.Label\r\n        }\r\n        , {\r\n            'label': '実行ボタン配置スペース選択'\r\n            , 'desc': 'API呼び出しを実行するボタンを配置するスペースを選択してください。'\r\n            , 'code': CONSTANTS.BTN_SPACE_FIELD\r\n            , 'type': FieldType.Dropdown_FieldSelect\r\n            , 'accept': ['SPACER']\r\n            , 'required': true\r\n        }\r\n        // , {\r\n        //     'label': '固定プロンプト'\r\n        //     , 'desc': '入力として毎回渡す固定のプロンプトを記入してください。'\r\n        //     , 'code': CONSTANTS.STATIC_PROMPT\r\n        //     , 'type': FieldType.MultilineText\r\n        //     , 'required': false\r\n        // }\r\n        // , {\r\n        //     'label': 'レコード別プロンプト'\r\n        //     , 'desc': 'レコード別に指定するプロンプトフィールドを選択してください。'\r\n        //     , 'code': CONSTANTS.UNIQUE_PROMPT\r\n        //     , 'type': FieldType.Dropdown_FieldSelect\r\n        //     , 'accept': ['SINGLE_LINE_TEXT', 'MULTI_LINE_TEXT']\r\n        //     , 'default': CONSTANTS.EMPTY_LABEL\r\n        //     , 'required': false\r\n        // }\r\n        , {\r\n            'label': '[danger] レコード編集モード'\r\n            , 'desc': '有効にするとレコード全体を編集対象として書き換えるモードで動作します。その際、↓以降の設定は無効になります。よくわからない場合はdisableにしておいてください。'\r\n            , 'code': CONSTANTS.FLAG_RECORD_MODIFIER\r\n            , 'type': FieldType.Radio\r\n            , 'accept': CONSTANTS.LABELS_RECORD_MODIFIER\r\n            , 'default': CONSTANTS.LABELS_RECORD_MODIFIER[1]\r\n            , 'required': true\r\n        }\r\n        , {\r\n            'label': ''\r\n            , 'desc': '=============================================='\r\n            , 'type': FieldType.Separator\r\n            , 'required': false\r\n        }\r\n        , {\r\n            'label': 'kintoneのフィールド設定'\r\n            , 'desc': 'ChatGPTに問い合わせる入力フィールドと、回答を出力する出力フィールドを設定します。'\r\n            , 'type': FieldType.Label\r\n        }\r\n        , {\r\n            'label': '入力フィールド選択'\r\n            , 'desc': '入力として使用するフィールドを選択してください'\r\n            , 'code': CONSTANTS.INPUT_FIELD\r\n            , 'type': FieldType.Dropdown_FieldSelect\r\n            , 'accept': ['SINGLE_LINE_TEXT', 'MULTI_LINE_TEXT']\r\n            , 'required': true\r\n        }\r\n        , {\r\n            'label': '出力フィールド選択'\r\n            , 'desc': 'ChatGPTの返答を入力するフィールドを選択してください。'\r\n            , 'code': CONSTANTS.OUTPUT_FIELD\r\n            , 'type': FieldType.Dropdown_FieldSelect\r\n            , 'accept': ['MULTI_LINE_TEXT']\r\n            , 'required': true\r\n        }\r\n    ]\r\n}\r\n","import { ConfigManager } from \"plugin-parameters-helper\";\nimport { Settings } from \"./settings\";\n\n(function (PLUGIN_ID) {\n    'use strict';\n    console.info('run config main')\n\n\n    if (PLUGIN_ID == undefined) {\n        throw new Error('PLUGIN_ID == undefined で呼び出されました。')\n    }\n\n    const setting_prefs = Settings.preference\n    const setting_input = Settings.input\n    const manager = new ConfigManager(PLUGIN_ID, setting_input, setting_prefs)\n    manager.build()\n\n})(kintone.$PLUGIN_ID);\n\n"],"names":["Object","defineProperty","exports","value","isSecretItem","FieldType","item","ConfigBuilder","require","commonutils_1","config_utilities_1","common_1","field_builder_1","incremental_table_builder_1","constructor","props","config","undefined","this","field_builder","FieldBuilder","static","type","LAYOUT_PARTS","includes","types","reduce","prev","curr","is_layout_info","build_incremental_table","input_field","saved_rows","table_rows","IncrementalTableBuilder","build","elements_th","table_cols","map","column","el_span","Utils","createElement","textContent","header","push","tr","thead","tbody","code","target","self","parent_td","parentNode","accept_types","lists","key","hasOwnProperty","prop","label","sorted","keys","k","sort","a","b","toString","toLowerCase","assign","select_set","select","addEventListener","event","selected","selectedIndex","option","getAttribute","ancestor","closest","inputs","getElementsByTagName","build_fields_dropdown","accepts","selected_fieldcode","selected_node_id","empty_label","show_fc","field_dropdown","id","empty_item","appendChild","parts","get_formparts","compose_fielditems","forEach","async","app_id","selected_label","ConfigUtilities","DEFAULT_OPTION","empty_dropdown","resp_fields","kintone","api","app","parseInt","properties","main_node","title","comment","block_class","flg_required","flg_secret","comment_node","buildElement","tagName","className","innerHTML","caption_node","badge","childElements","parent_dropdown","parent_fieldcode","appid","then","single_line_items","filter","field","dd_item","setAttribute","td_fieldcode","make_fieldcode_cell","firstChild","remove","fieldcode","node_input","node_dropdown","node_radio","event_type","callback_object","querySelectorAll","input","make_string_block","Error","saved_value","get_saved_value","el_str","ce","required","secret","make_parts_block","desc","whole_config","proxy_config","plugin","getProxyConfig","URL","method","data","header_value","headers","startsWith","split","default","make_multiline_block","cols","rows","make_checkbox_block","accept","list_checkbox","box_value","checkbox_id","attr_checkbox","make_radio_block","saved_string","el_options","name","el_radio","el_label","make_dropdown_fieldselect_block","form_types","layout_types","length","layout","verbose","make_incremental_table_block","el_table","make_subtitle_block","heading","layout_infos","getId","spacers","row_prev","row_curr","row_spacers","fields","row_field","concat","elementId","ConfigManager","config_builder_1","PLUGIN_ID","setting_input","settings_preference","CONF","getConfig","set_config","set_preference","prefs","node_title","document","getElementById","node_description","description","node_settings","make_setting_fields","resp","btn_submit","make_button_submit","btn_cancel","make_button_cancel","form_node","node","top","buttons","_resp","call_target_event","catch","err","event_name","funcs","hooks","func","layout_inputs","builder","make_paragraph","Text","MultilineText","Radio","Number","Checkbox","IncrementalTable","Label","Separator","Dropdown_FieldSelect","serialized","get_from","KEY_CONFIG","JSON","parse","get_config","load_layout_info","secret_parameters","config_tinker","secrets","make_proxy_params","items","result_params","params","get_text_and_validate_value","get_text_value","param","store_parameters","store","get_selected","msg","isComposing","preventDefault","this_form","error","alert","proxy_params","setProxyConfig","setTimeout","stringify","setConfig","window","location","href","add_hook","config_form","whole_selected_field_codes","select_node_id","options","selectedOptions","target_boxes","Array","from","checked","is_overlapped","additional_labels","overlapped","clear_selected_field_labels","get_selected_radio","radio_id","radio_name","nodes","getElementsByName","idx","field_id","get_multilinetext_value","get_number_value","get_incremental_table_values","node_table","abstruct_from_incremental_table","whole_headers","row","nodeName","cells","cell","innerText","values","input_element","getElementsByClassName","selected_element","checkbox_element","multiline_element","index","attributes","checkbox_items","childNodes","isArray","content","node_id","field_type","Dropdown","get_selected_label","get_checked_boxes","get_selected_fieldcode","preset","table_id","row_count","node_checkbox","build_table_cell","build_checkbox_cell","build_dropdown_cell","build_dropdown_fieldselect_cell","build_textcell","build_multilinetext_cell","table_conf","rows_count","spacer_count","build_table_row","opt","row_number","saved_data","spacer_cols","built_row","node_button_add","create_button_row_add","node_button_remove","create_button_row_remove","tds","get_table_rows_count","table_node","grand_tr","get_grand_tr","ancestor_tbody","children","add_elem","insertBefore","nextElementSibling","removeChild","__createBinding","create","o","m","k2","enumerable","get","__exportStar","p","prototype","call","module","ButtonInstaller","utils_1","class_hms_button","canvas","classname","create_button","icon_label","tooltip","icon","style","color","button","decorate_menu_icon","fontSize","add_button","install","already_installed","put_buttons","set_canvas","get_hms","hms","getHeaderMenuSpaceElement","btn","append","get_header_element","index_text","PluginCanvas","id_island","id_offcanvas","title_offcanvas","island","enable_offcanvas","default_element","icon_element","already","icon_balloon","baloon","cursor","init_offcanvas","headerSpace","get_node","build_node_offcanvas","offcanvas","deal_dismiss_attribute","dismissElements","CLASS_DISMISS","element","with_record_number","results","unique","test_str","is_empty_string","dic","conf_key","defaults","tag","cl","tc","ih","at","attrs","el","child","entries","t","c","height","backgroundColor","border","display","marginLeft","marginRight","verticalAlign","list","x","_i","indexOf","lastIndexOf","Set","protocol","host","max_msgs","errors","whole_errors","comments","messages","remain_msgs","splice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTANTS","PLUGIN_NAME","EMPTY_LABEL","API_KEY","MODEL_ID","STATIC_PROMPT","UNIQUE_PROMPT","INPUT_FIELD","OUTPUT_FIELD","BTN_SPACE_FIELD","FLAG_RECORD_MODIFIER","LABELS_RECORD_MODIFIER","NUMBER_MAX_TOKENS","SYSTEM_PROMPT","TABLE_FEWSHOTS_PROMPT","TABLE_FEWSHOTS","Settings","role","setting_prefs","preference","$PLUGIN_ID"],"sourceRoot":""}