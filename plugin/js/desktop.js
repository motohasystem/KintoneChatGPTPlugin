/*! For license information please see desktop.js.LICENSE.txt */
(()=>{var n={"./node_modules/@kintone/rest-api-client/lib/KintoneRequestConfigBuilder.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},i=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},a=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneRequestConfigBuilder=void 0;var s=a(e("./node_modules/form-data/lib/browser.js")),l=a(e("./node_modules/qs/lib/index.js")),d=e("./node_modules/js-base64/base64.js"),c=e("./node_modules/@kintone/rest-api-client/lib/platform/index.js"),p=function(){function n(n){if(this.baseUrl=n.baseUrl,this.auth=n.auth,this.headers=this.buildHeaders({basicAuth:n.basicAuth,userAgent:n.userAgent}),"httpsAgent"in n){if("clientCertAuth"in n)throw new Error("Cannot specify clientCertAuth along with httpsAgent.");this.httpsAgent=n.httpsAgent}else"clientCertAuth"in n&&(this.clientCertAuth=n.clientCertAuth);this.proxy=n.proxy,this.requestToken=null}return n.prototype.build=function(n,t,e,a){return r(this,void 0,void 0,(function(){var r,l,d,p,A,m,u,f,b,g,h;return i(this,(function(i){switch(i.label){case 0:switch(r=o(o(o({method:n,headers:this.headers,url:"".concat(this.baseUrl).concat(t)},a||{}),c.platformDeps.buildPlatformDependentConfig({httpsAgent:this.httpsAgent,clientCertAuth:this.clientCertAuth})),{proxy:this.proxy}),n){case"get":return[3,1];case"post":return[3,4];case"put":return[3,8];case"delete":return[3,10]}return[3,12];case 1:return(m=this.buildRequestUrl(t,e)).length>4096?(l=[o({},r)],b={method:"post",headers:o(o({},this.headers),{"X-HTTP-Method-Override":"GET"})},[4,this.buildData(e)]):[3,3];case 2:return[2,o.apply(void 0,l.concat([(b.data=i.sent(),b)]))];case 3:return[2,o(o({},r),{url:m})];case 4:return e instanceof s.default?[4,this.buildData(e)]:[3,6];case 5:return d=i.sent(),[2,o(o({},r),{headers:"function"==typeof d.getHeaders?o(o({},this.headers),d.getHeaders()):this.headers,data:d})];case 6:return p=[o({},r)],g={},[4,this.buildData(e)];case 7:return[2,o.apply(void 0,p.concat([(g.data=i.sent(),g)]))];case 8:return A=[o({},r)],h={},[4,this.buildData(e)];case 9:return[2,o.apply(void 0,A.concat([(h.data=i.sent(),h)]))];case 10:return u=this.buildRequestUrl,f=[t],[4,this.buildData(e)];case 11:return m=u.apply(this,f.concat([i.sent()])),[2,o(o({},r),{url:m})];case 12:throw new Error("".concat(n," method is not supported"));case 13:return[2]}}))}))},n.prototype.buildRequestUrl=function(n,t){return"".concat(this.baseUrl).concat(n,"?").concat(l.default.stringify(t))},n.prototype.buildData=function(n){return r(this,void 0,void 0,(function(){var t;return i(this,(function(e){switch(e.label){case 0:return"session"!==this.auth.type?[3,2]:[4,this.getRequestToken()];case 1:return t=e.sent(),n instanceof s.default?(n.append("__REQUEST_TOKEN__",t),[2,n]):[2,o({__REQUEST_TOKEN__:t},n)];case 2:return[2,n]}}))}))},n.prototype.buildHeaders=function(n){var t=n.basicAuth,e=n.userAgent,r=t?{Authorization:"Basic ".concat(d.Base64.encode("".concat(t.username,":").concat(t.password)))}:{},i=c.platformDeps.buildHeaders({userAgent:e}),a=o(o({},i),r);switch(this.auth.type){case"password":return o(o({},a),{"X-Cybozu-Authorization":d.Base64.encode("".concat(this.auth.username,":").concat(this.auth.password))});case"apiToken":var s=this.auth.apiToken;return Array.isArray(s)?o(o({},a),{"X-Cybozu-API-Token":s.join(",")}):o(o({},a),{"X-Cybozu-API-Token":s});case"oAuthToken":return o(o({},a),{Authorization:"Bearer ".concat(this.auth.oAuthToken)});default:return o(o({},a),{"X-Requested-With":"XMLHttpRequest"})}},n.prototype.getRequestToken=function(){return r(this,void 0,void 0,(function(){var n;return i(this,(function(t){switch(t.label){case 0:return null!==this.requestToken?[3,2]:(n=this,[4,c.platformDeps.getRequestToken()]);case 1:n.requestToken=t.sent(),t.label=2;case 2:return[2,this.requestToken]}}))}))},n}();t.KintoneRequestConfigBuilder=p},"./node_modules/@kintone/rest-api-client/lib/KintoneResponseHandler.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__rest||function(n,t){var e={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&t.indexOf(o)<0&&(e[o]=n[o]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(e[o[r]]=n[o[r]])}return e};Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneResponseHandler=void 0;var i=e("./node_modules/@kintone/rest-api-client/lib/error/KintoneAbortSearchError.js"),a=e("./node_modules/@kintone/rest-api-client/lib/error/KintoneRestAPIError.js"),s=function(){function n(n){var t=n.enableAbortSearchError;this.enableAbortSearchError=t}return n.prototype.handle=function(n){var t=this;return n.then((function(n){return t.handleSuccessResponse(n)}),(function(n){return t.handleErrorResponse(n)}))},n.prototype.handleSuccessResponse=function(n){if(this.enableAbortSearchError&&/Filter aborted because of too many search results/.test(n.headers["x-cybozu-warning"]))throw new i.KintoneAbortSearchError(n.headers["x-cybozu-warning"]);return n.data},n.prototype.handleErrorResponse=function(n){if(!n.response){if(/mac verify failure/.test(n.toString()))throw new Error("invalid clientCertAuth setting");throw n}var t=n.response,e=t.data,i=r(t,["data"]);if("string"==typeof e)throw new Error("".concat(i.status,": ").concat(i.statusText));throw new a.KintoneRestAPIError(o({data:e},i))},n}();t.KintoneResponseHandler=s},"./node_modules/@kintone/rest-api-client/lib/KintoneRestAPIClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneRestAPIClient=void 0;var r=e("./node_modules/@kintone/rest-api-client/lib/client/BulkRequestClient.js"),i=e("./node_modules/@kintone/rest-api-client/lib/client/AppClient.js"),a=e("./node_modules/@kintone/rest-api-client/lib/client/RecordClient.js"),s=e("./node_modules/@kintone/rest-api-client/lib/client/FileClient.js"),l=e("./node_modules/@kintone/rest-api-client/lib/http/index.js"),d=e("./node_modules/@kintone/rest-api-client/lib/KintoneRequestConfigBuilder.js"),c=e("./node_modules/@kintone/rest-api-client/lib/KintoneResponseHandler.js"),p=e("./node_modules/@kintone/rest-api-client/lib/platform/index.js"),A=e("./node_modules/@kintone/rest-api-client/lib/platform/UnsupportedPlatformError.js"),m=function(){function n(n){var t,e,m;void 0===n&&(n={}),u(n),this.baseUrl=p.platformDeps.buildBaseUrl(n.baseUrl).replace(/\/+$/,"");var f=function(n){if("username"in n)return o({type:"password"},n);if("apiToken"in n)return o({type:"apiToken"},n);if("oAuthToken"in n)return o({type:"oAuthToken"},n);try{return p.platformDeps.getDefaultAuth()}catch(n){if(n instanceof A.UnsupportedPlatformError)throw new Error("session authentication is not supported in ".concat(n.platform," environment."));throw n}}(null!==(t=n.auth)&&void 0!==t?t:{}),b=new d.KintoneRequestConfigBuilder(o(o({},n),{baseUrl:this.baseUrl,auth:f})),g=new c.KintoneResponseHandler({enableAbortSearchError:null!==(m=null===(e=n.featureFlags)||void 0===e?void 0:e.enableAbortSearchError)&&void 0!==m&&m}),h=new l.DefaultHttpClient({responseHandler:g,requestConfigBuilder:b}),x=n.guestSpaceId;this.bulkRequest_=new r.BulkRequestClient(h,x),this.record=new a.RecordClient(h,this.bulkRequest_,x),this.app=new i.AppClient(h,x),this.file=new s.FileClient(h,x)}return Object.defineProperty(n,"version",{get:function(){return p.platformDeps.getVersion()},enumerable:!1,configurable:!0}),n.prototype.getBaseUrl=function(){return this.baseUrl},n.prototype.bulkRequest=function(n){return this.bulkRequest_.send(n)},n}();t.KintoneRestAPIClient=m;var u=function(n){f(n.baseUrl),b(n.guestSpaceId)},f=function(n){if(void 0!==n){var t=new URL(n);if("localhost"!==t.hostname&&"https:"!==t.protocol)throw new Error('The protocol of baseUrl must be "https".')}},b=function(n){if(""===n||null===n)throw new Error("invalid guestSpaceId: got [".concat(n,"]"))}},"./node_modules/@kintone/rest-api-client/lib/client/AppClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},i=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},a=this&&this.__rest||function(n,t){var e={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&t.indexOf(o)<0&&(e[o]=n[o]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(e[o[r]]=n[o[r]])}return e};Object.defineProperty(t,"__esModule",{value:!0}),t.AppClient=void 0;var s=e("./node_modules/@kintone/rest-api-client/lib/url.js"),l=function(){function n(n,t){this.client=n,this.guestSpaceId=t}return n.prototype.getFormFields=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"app/form/fields",preview:t});return this.client.get(r,o({},e))},n.prototype.addFormFields=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/form/fields",preview:!0});return this.client.post(t,n)},n.prototype.updateFormFields=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/form/fields",preview:!0});return this.client.put(t,n)},n.prototype.deleteFormFields=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/form/fields",preview:!0});return this.client.delete(t,n)},n.prototype.getFormLayout=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"app/form/layout",preview:t});return this.client.get(r,o({},e))},n.prototype.updateFormLayout=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/form/layout",preview:!0});return this.client.put(t,n)},n.prototype.getViews=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/views",preview:t});return this.client.get(o,e)},n.prototype.updateViews=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/views",preview:!0});return this.client.put(t,n)},n.prototype.getApp=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app"});return this.client.get(t,n)},n.prototype.getApps=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"apps"});return this.client.get(t,n)},n.prototype.addApp=function(n){return r(this,void 0,void 0,(function(){var t,e,r,a,s;return i(this,(function(i){switch(i.label){case 0:return t=n.name,e=n.space,r=this.buildPathWithGuestSpaceId({endpointName:"app",preview:!0}),e?(a=this.buildPathWithGuestSpaceId({endpointName:"space"}),[4,this.client.get(a,{id:e})]):[3,2];case 1:return s=i.sent().defaultThread,[2,this.client.post(r,o(o({},n),{thread:s}))];case 2:return[2,this.client.post(r,{name:t})]}}))}))},n.prototype.getAppSettings=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/settings",preview:t});return this.client.get(o,e)},n.prototype.updateAppSettings=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/settings",preview:!0});return this.client.put(t,n)},n.prototype.getProcessManagement=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/status",preview:t});return this.client.get(o,e)},n.prototype.updateProcessManagement=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/status",preview:!0});return this.client.put(t,n)},n.prototype.getDeployStatus=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/deploy",preview:!0});return this.client.get(t,n)},n.prototype.deployApp=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/deploy",preview:!0});return this.client.post(t,n)},n.prototype.getFieldAcl=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"field/acl",preview:t});return this.client.get(r,o({},e))},n.prototype.updateFieldAcl=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"field/acl",preview:!0});return this.client.put(t,n)},n.prototype.getAppAcl=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"app/acl",preview:t});return this.client.get(r,o({},e))},n.prototype.updateAppAcl=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/acl",preview:!0});return this.client.put(t,n)},n.prototype.evaluateRecordsAcl=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records/acl/evaluate"});return this.client.get(t,n)},n.prototype.getRecordAcl=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"record/acl",preview:t});return this.client.get(r,o({},e))},n.prototype.updateRecordAcl=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/acl",preview:!0});return this.client.put(t,n)},n.prototype.getAppCustomize=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"app/customize",preview:t});return this.client.get(r,o({},e))},n.prototype.updateAppCustomize=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/customize",preview:!0});return this.client.put(t,n)},n.prototype.getGeneralNotifications=function(n){var t=n.preview,e=a(n,["preview"]),r=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/general",preview:t});return this.client.get(r,o({},e))},n.prototype.updateGeneralNotifications=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/general",preview:!0});return this.client.put(t,n)},n.prototype.getPerRecordNotifications=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/perRecord",preview:t});return this.client.get(o,e)},n.prototype.updatePerRecordNotifications=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/perRecord",preview:!0});return this.client.put(t,n)},n.prototype.getReminderNotifications=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/reminder",preview:t});return this.client.get(o,e)},n.prototype.updateReminderNotifications=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/notifications/reminder",preview:!0});return this.client.put(t,n)},n.prototype.getReports=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/reports",preview:t});return this.client.get(o,e)},n.prototype.updateReports=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/reports",preview:!0});return this.client.put(t,n)},n.prototype.getAppActions=function(n){var t=n.preview,e=a(n,["preview"]),o=this.buildPathWithGuestSpaceId({endpointName:"app/actions",preview:t});return this.client.get(o,e)},n.prototype.updateAppActions=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"app/actions",preview:!0});return this.client.put(t,n)},n.prototype.buildPathWithGuestSpaceId=function(n){return(0,s.buildPath)(o(o({},n),{guestSpaceId:this.guestSpaceId}))},n}();t.AppClient=l},"./node_modules/@kintone/rest-api-client/lib/client/BulkRequestClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__rest||function(n,t){var e={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&t.indexOf(o)<0&&(e[o]=n[o]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(e[o[r]]=n[o[r]])}return e};Object.defineProperty(t,"__esModule",{value:!0}),t.BulkRequestClient=void 0;var i=e("./node_modules/@kintone/rest-api-client/lib/url.js"),a=function(){function n(n,t){this.client=n,this.guestSpaceId=t,this.REQUESTS_LENGTH_LIMIT=20}return n.prototype.send=function(n){var t=this,e=n.requests.map((function(n){if("endpointName"in n){var e=n.endpointName,i=r(n,["endpointName"]);return o({api:t.buildPathWithGuestSpaceId({endpointName:e})},i)}return n})),i=this.buildPathWithGuestSpaceId({endpointName:"bulkRequest"});return this.client.post(i,{requests:e})},n.prototype.buildPathWithGuestSpaceId=function(n){return(0,i.buildPath)(o(o({},n),{guestSpaceId:this.guestSpaceId}))},n}();t.BulkRequestClient=a},"./node_modules/@kintone/rest-api-client/lib/client/FileClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},i=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},a=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.FileClient=void 0;var s=e("./node_modules/@kintone/rest-api-client/lib/url.js"),l=a(e("./node_modules/form-data/lib/browser.js")),d=e("./node_modules/@kintone/rest-api-client/lib/platform/index.js"),c=e("./node_modules/@kintone/rest-api-client/lib/platform/UnsupportedPlatformError.js"),p=function(){function n(n,t){this.client=n,this.guestSpaceId=t}return n.prototype.uploadFile=function(n){return r(this,void 0,void 0,(function(){var t,e,o,r,a,s,p,A,m;return i(this,(function(i){switch(i.label){case 0:if(t=this.buildPathWithGuestSpaceId({endpointName:"file"}),e=new l.default,!("path"in n.file))return[3,5];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,d.platformDeps.readFileFromPath(n.file.path)];case 2:return o=i.sent(),r=o.name,A=o.data,e.append("file",A,r),[3,4];case 3:if((a=i.sent())instanceof c.UnsupportedPlatformError)throw new Error("uploadFile doesn't allow to accept a file path in ".concat(a.platform," environment."));throw a;case 4:return[3,6];case 5:s=n.file,p=s.name,A=s.data,m=d.platformDeps.buildFormDataValue(A,p),e.append("file",m,p),i.label=6;case 6:return[2,this.client.postData(t,e)]}}))}))},n.prototype.downloadFile=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"file"});return this.client.getData(t,n)},n.prototype.buildPathWithGuestSpaceId=function(n){return(0,s.buildPath)(o(o({},n),{guestSpaceId:this.guestSpaceId}))},n}();t.FileClient=p},"./node_modules/@kintone/rest-api-client/lib/client/RecordClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},i=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},a=this&&this.__rest||function(n,t){var e={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&t.indexOf(o)<0&&(e[o]=n[o]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(e[o[r]]=n[o[r]])}return e},s=this&&this.__spreadArray||function(n,t,e){if(e||2===arguments.length)for(var o,r=0,i=t.length;r<i;r++)!o&&r in t||(o||(o=Array.prototype.slice.call(t,0,r)),o[r]=t[r]);return n.concat(o||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.RecordClient=void 0;var l=e("./node_modules/@kintone/rest-api-client/lib/url.js"),d=e("./node_modules/@kintone/rest-api-client/lib/error/KintoneAllRecordsError.js"),c=function(){function n(n,t,e){this.client=n,this.bulkRequestClient=t,this.guestSpaceId=e,this.didWarnMaximumOffsetValue=!1}return n.prototype.getRecord=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record"});return this.client.get(t,n)},n.prototype.addRecord=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record"});return this.client.post(t,n)},n.prototype.updateRecord=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record"});return this.client.put(t,n)},n.prototype.upsertRecord=function(n){return r(this,void 0,void 0,(function(){var t,e,o,r,a,s;return i(this,(function(i){switch(i.label){case 0:return t=n.app,e=n.updateKey,o=n.record,[4,this.getRecords({app:t,query:"".concat(e.field,' = "').concat(e.value,'"')})];case 1:return(r=i.sent().records).length>0?"__ID__"!==r[0].$id.type?[3,3]:[4,this.updateRecord(n)]:[3,4];case 2:return a=i.sent().revision,[2,{id:r[0].$id.value,revision:a}];case 3:throw new Error("Missing `$id` in `getRecords` response. This error is likely caused by a bug in Kintone REST API Client. Please file an issue.");case 4:return[2,this.addRecord({app:t,record:Object.assign({},o,(s={},s[e.field]={value:e.value},s))})]}}))}))},n.prototype.getRecords=function(n){return r(this,void 0,void 0,(function(){var t,e;return i(this,(function(o){switch(o.label){case 0:return t=this.buildPathWithGuestSpaceId({endpointName:"records"}),[4,this.client.get(t,n)];case 1:return e=o.sent(),this.warnMaximumOffsetValueIfNeeded(n.query),[2,e]}}))}))},n.prototype.warnMaximumOffsetValueIfNeeded=function(n){if(n){var t=n.match(/offset\s+(\d+)/i);!this.didWarnMaximumOffsetValue&&t&&Number(t[1])>1e4&&(this.didWarnMaximumOffsetValue=!0,console.warn("Warning: The maximum offset value will be limited to 10,000 in the future. Please use `createCursor()` and `getRecordsByCursor()` instead."))}},n.prototype.addRecords=function(n){return r(this,void 0,void 0,(function(){var t,e,o,r;return i(this,(function(i){switch(i.label){case 0:return t=this.buildPathWithGuestSpaceId({endpointName:"records"}),[4,this.client.post(t,n)];case 1:return e=i.sent(),o=e.ids,r=e.revisions,[2,{ids:o,revisions:r,records:o.map((function(n,t){return{id:n,revision:r[t]}}))}]}}))}))},n.prototype.updateRecords=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records"});return this.client.put(t,n)},n.prototype.deleteRecords=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records"});return this.client.delete(t,n)},n.prototype.createCursor=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records/cursor"});return this.client.post(t,n)},n.prototype.getRecordsByCursor=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records/cursor"});return this.client.get(t,n)},n.prototype.deleteCursor=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records/cursor"});return this.client.delete(t,n)},n.prototype.getAllRecords=function(n){return r(this,void 0,void 0,(function(){var t,e,r,s,l,d,c;return i(this,(function(i){return t=n.condition,e=n.orderBy,r=n.withCursor,s=void 0===r||r,l=a(n,["condition","orderBy","withCursor"]),e?s?(d=t?"".concat(t," "):"",c="".concat(d).concat(e?"order by ".concat(e):""),[2,this.getAllRecordsWithCursor(o(o({},l),{query:c}))]):[2,this.getAllRecordsWithOffset(o(o({},l),{orderBy:e,condition:t}))]:[2,this.getAllRecordsWithId(o(o({},l),{condition:t}))]}))}))},n.prototype.getAllRecordsWithId=function(n){return r(this,void 0,void 0,(function(){var t,e,r;return i(this,(function(i){return t=n.fields,e=a(n,["fields"]),(r=t)&&r.length>0&&-1===r.indexOf("$id")&&(r=s(s([],r,!0),["$id"],!1)),[2,this.getAllRecordsRecursiveWithId(o(o({},e),{fields:r}),"0",[])]}))}))},n.prototype.getAllRecordsRecursiveWithId=function(n,t,e){return r(this,void 0,void 0,(function(){var r,s,l,d,c,p,A,m,u;return i(this,(function(i){switch(i.label){case 0:return r=500,s=n.condition,l=a(n,["condition"]),d=s?"(".concat(s,") and "):"",c="".concat(d,"$id > ").concat(t," order by $id asc limit ").concat(r),[4,this.getRecords(o(o({},l),{query:c}))];case 1:if(p=i.sent(),A=e.concat(p.records),p.records.length<r)return[2,A];if("__ID__"===(m=p.records[p.records.length-1]).$id.type)return u=m.$id.value,[2,this.getAllRecordsRecursiveWithId(n,u,A)];throw new Error("Missing `$id` in `getRecords` response. This error is likely caused by a bug in Kintone REST API Client. Please file an issue.")}}))}))},n.prototype.getAllRecordsWithOffset=function(n){return r(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.getAllRecordsRecursiveWithOffset(n,0,[])]}))}))},n.prototype.getAllRecordsRecursiveWithOffset=function(n,t,e){return r(this,void 0,void 0,(function(){var r,s,l,d,c,p,A,m;return i(this,(function(i){switch(i.label){case 0:return r=500,s=n.condition,l=n.orderBy,d=a(n,["condition","orderBy"]),c=s?"".concat(s," "):"",p="".concat(c).concat(l?"order by ".concat(l," "):"","limit ").concat(r," offset ").concat(t),[4,this.getRecords(o(o({},d),{query:p}))];case 1:return A=i.sent(),m=e.concat(A.records),A.records.length<r?[2,m]:[2,this.getAllRecordsRecursiveWithOffset(n,t+r,m)]}}))}))},n.prototype.getAllRecordsWithCursor=function(n){return r(this,void 0,void 0,(function(){var t,e;return i(this,(function(o){switch(o.label){case 0:return[4,this.createCursor(n)];case 1:t=o.sent().id,o.label=2;case 2:return o.trys.push([2,4,,6]),[4,this.getAllRecordsRecursiveByCursor(t,[])];case 3:return[2,o.sent()];case 4:return e=o.sent(),[4,this.deleteCursor({id:t})];case 5:throw o.sent(),e;case 6:return[2]}}))}))},n.prototype.getAllRecordsRecursiveByCursor=function(n,t){return r(this,void 0,void 0,(function(){var e,o;return i(this,(function(r){switch(r.label){case 0:return[4,this.getRecordsByCursor({id:n})];case 1:return e=r.sent(),o=t.concat(e.records),e.next?[2,this.getAllRecordsRecursiveByCursor(n,o)]:[2,o]}}))}))},n.prototype.addAllRecords=function(n){return r(this,void 0,void 0,(function(){return i(this,(function(t){if(!n.records.every((function(n){return!Array.isArray(n)&&n instanceof Object})))throw new Error("the `records` parameter must be an array of object.");return[2,this.addAllRecordsRecursive(n,n.records.length,[])]}))}))},n.prototype.addAllRecordsRecursive=function(n,t,e){return r(this,void 0,void 0,(function(){var o,r,a,s,l,c;return i(this,(function(i){switch(i.label){case 0:if(o=100*this.bulkRequestClient.REQUESTS_LENGTH_LIMIT,r=n.app,a=n.records,0===(s=a.slice(0,o)).length)return[2,{records:e}];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.addAllRecordsWithBulkRequest({app:r,records:s})];case 2:return l=i.sent(),[3,4];case 3:throw c=i.sent(),new d.KintoneAllRecordsError({records:e},a,t,c,100);case 4:return[2,this.addAllRecordsRecursive({app:r,records:a.slice(o)},t,e.concat(l))]}}))}))},n.prototype.addAllRecordsWithBulkRequest=function(n){return r(this,void 0,void 0,(function(){var t,e;return i(this,(function(o){switch(o.label){case 0:return t=this.separateArrayRecursive(100,[],n.records),e=t.map((function(t){return{method:"POST",endpointName:"records",payload:{app:n.app,records:t}}})),[4,this.bulkRequestClient.send({requests:e})];case 1:return[2,o.sent().results.map((function(n){var t=n.ids,e=n.revisions;return t.map((function(n,t){return{id:n,revision:e[t]}}))})).reduce((function(n,t){return n.concat(t)}),[])]}}))}))},n.prototype.updateAllRecords=function(n){return r(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.updateAllRecordsRecursive(n,n.records.length,[])]}))}))},n.prototype.updateAllRecordsRecursive=function(n,t,e){return r(this,void 0,void 0,(function(){var o,r,a,s,l,c;return i(this,(function(i){switch(i.label){case 0:if(o=100*this.bulkRequestClient.REQUESTS_LENGTH_LIMIT,r=n.app,a=n.records,0===(s=a.slice(0,o)).length)return[2,{records:e}];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.updateAllRecordsWithBulkRequest({app:r,records:s})];case 2:return l=i.sent(),[3,4];case 3:throw c=i.sent(),new d.KintoneAllRecordsError({records:e},a,t,c,100);case 4:return[2,this.updateAllRecordsRecursive({app:r,records:a.slice(o)},t,e.concat(l))]}}))}))},n.prototype.updateAllRecordsWithBulkRequest=function(n){return r(this,void 0,void 0,(function(){var t,e;return i(this,(function(o){switch(o.label){case 0:return t=this.separateArrayRecursive(100,[],n.records),e=t.map((function(t){return{method:"PUT",endpointName:"records",payload:{app:n.app,records:t}}})),[4,this.bulkRequestClient.send({requests:e})];case 1:return[2,o.sent().results.map((function(n){return n.records})).reduce((function(n,t){return n.concat(t)}),[])]}}))}))},n.prototype.deleteAllRecords=function(n){return this.deleteAllRecordsRecursive(n,n.records.length)},n.prototype.deleteAllRecordsRecursive=function(n,t){return r(this,void 0,void 0,(function(){var e,o,r,a,s;return i(this,(function(i){switch(i.label){case 0:if(e=100*this.bulkRequestClient.REQUESTS_LENGTH_LIMIT,o=n.app,r=n.records,0===(a=r.slice(0,e)).length)return[2,{}];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.deleteAllRecordsWithBulkRequest({app:o,records:a})];case 2:return i.sent(),[3,4];case 3:throw s=i.sent(),new d.KintoneAllRecordsError({},r,t,s,100);case 4:return[2,this.deleteAllRecordsRecursive({app:o,records:r.slice(e)},t)]}}))}))},n.prototype.deleteAllRecordsWithBulkRequest=function(n){return r(this,void 0,void 0,(function(){var t,e;return i(this,(function(o){switch(o.label){case 0:return t=this.separateArrayRecursive(100,[],n.records),e=t.map((function(t){return{method:"DELETE",endpointName:"records",payload:{app:n.app,ids:t.map((function(n){return n.id})),revisions:t.map((function(n){return n.revision}))}}})),[4,this.bulkRequestClient.send({requests:e})];case 1:return o.sent(),[2]}}))}))},n.prototype.separateArrayRecursive=function(n,t,e){var o=e.slice(0,n);return 0===o.length?t:this.separateArrayRecursive(n,s(s([],t,!0),[o],!1),e.slice(n))},n.prototype.addRecordComment=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/comment"});return this.client.post(t,n)},n.prototype.deleteRecordComment=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/comment"});return this.client.delete(t,n)},n.prototype.getRecordComments=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/comments"});return this.client.get(t,n)},n.prototype.updateRecordAssignees=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/assignees"});return this.client.put(t,n)},n.prototype.updateRecordStatus=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"record/status"});return this.client.put(t,n)},n.prototype.updateRecordsStatus=function(n){var t=this.buildPathWithGuestSpaceId({endpointName:"records/status"});return this.client.put(t,n)},n.prototype.buildPathWithGuestSpaceId=function(n){return(0,l.buildPath)(o(o({},n),{guestSpaceId:this.guestSpaceId}))},n}();t.RecordClient=c},"./node_modules/@kintone/rest-api-client/lib/error/KintoneAbortSearchError.js":function(n,t){"use strict";var e,o=this&&this.__extends||(e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])},e(n,t)},function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneAbortSearchError=void 0;var r=function(n){function t(e){var o=n.call(this,e)||this;return o.name="KintoneAbortSearchError",o.message=e,Object.setPrototypeOf(o,t.prototype),o}return o(t,n),t}(Error);t.KintoneAbortSearchError=r},"./node_modules/@kintone/rest-api-client/lib/error/KintoneAllRecordsError.js":function(n,t){"use strict";var e,o=this&&this.__extends||(e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])},e(n,t)},function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneAllRecordsError=void 0;var r=function(n){function t(e,o,r,i,a){var s=this,l=r-o.length,d=t.extractErrorIndex(l,i,a),c=t.buildErrorMessage(l,r,d);return(s=n.call(this,c)||this).name="KintoneAllRecordsError",s.processedRecordsResult=e,s.unprocessedRecords=o,s.error=i,s.errorIndex=d,s.message=c,s.numOfProcessedRecords=l,s.numOfAllRecords=r,Object.setPrototypeOf(s,t.prototype),s}return o(t,n),t.parseErrorIndex=function(n){var t=[];return Object.keys(n).forEach((function(n){var e=n.match(/records\[(\d+)\]/);e&&t.push(Number(e[1]))})),t.length>0?Math.min.apply(Math,t):null},t.extractErrorIndex=function(n,e,o){if(void 0!==e.bulkRequestIndex&&e.errors){var r=t.parseErrorIndex(e.errors);if(null!==r)return n+e.bulkRequestIndex*o+r}},t.buildErrorMessage=function(n,t,e){var o="";return void 0!==e&&(o="An error occurred at records[".concat(e,"]. ")),o+="".concat(n,"/").concat(t," records are processed successfully")},t}(Error);t.KintoneAllRecordsError=r},"./node_modules/@kintone/rest-api-client/lib/error/KintoneRestAPIError.js":function(n,t){"use strict";var e,o=this&&this.__extends||(e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])},e(n,t)},function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneRestAPIError=void 0;var r=function(n){function t(e){var o=this,r=t.buildErrorResponseDateWithIndex(e),i=r.data,a=r.bulkRequestIndex;return(o=n.call(this,i.message)||this).name="KintoneRestAPIError",o.id=i.id,o.code=i.code,o.errors=i.errors,o.status=e.status,o.bulkRequestIndex=a,o.headers=e.headers,o.message="[".concat(e.status,"] [").concat(o.code,"] ").concat(o.message," (").concat(o.id,")"),Error.captureStackTrace&&Error.captureStackTrace(o,t),Object.setPrototypeOf(o,t.prototype),o}return o(t,n),t.findErrorResponseDataWithIndex=function(n){for(var t=0;t<n.length;t++){if(0!==Object.keys(n[t]).length)return{data:n[t],bulkRequestIndex:t}}throw Error("Missing response data in `results`. This error is likely caused by a bug in Kintone REST API Client. Please file an issue.")},t.buildErrorResponseDateWithIndex=function(n){return"results"in n.data?t.findErrorResponseDataWithIndex(n.data.results):{data:n.data}},t}(Error);t.KintoneRestAPIError=r},"./node_modules/@kintone/rest-api-client/lib/error/index.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,o,r)}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e("./node_modules/@kintone/rest-api-client/lib/error/KintoneAbortSearchError.js"),t),r(e("./node_modules/@kintone/rest-api-client/lib/error/KintoneAllRecordsError.js"),t),r(e("./node_modules/@kintone/rest-api-client/lib/error/KintoneRestAPIError.js"),t)},"./node_modules/@kintone/rest-api-client/lib/http/AxiosClient.js":function(n,t,e){"use strict";var o=this&&this.__assign||function(){return o=Object.assign||function(n){for(var t,e=1,o=arguments.length;e<o;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},o.apply(this,arguments)},r=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},i=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},a=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.AxiosClient=void 0;var s=a(e("./node_modules/@kintone/rest-api-client/node_modules/axios/index.js")),l=function(){function n(n){var t=n.responseHandler,e=n.requestConfigBuilder;this.responseHandler=t,this.requestConfigBuilder=e}return n.prototype.get=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("get",n,t)];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.getData=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("get",n,t,{responseType:"arraybuffer"})];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.post=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("post",n,t)];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.postData=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("post",n,t)];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.put=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("put",n,t)];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.delete=function(n,t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(o){switch(o.label){case 0:return[4,this.requestConfigBuilder.build("delete",n,t)];case 1:return e=o.sent(),[4,this.sendRequest(e)];case 2:return[2,o.sent()]}}))}))},n.prototype.sendRequest=function(n){return this.responseHandler.handle((0,s.default)(o(o({},n),{maxBodyLength:1/0,maxContentLength:1/0})))},n}();t.AxiosClient=l},"./node_modules/@kintone/rest-api-client/lib/http/index.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultHttpClient=void 0;var o=e("./node_modules/@kintone/rest-api-client/lib/http/AxiosClient.js");Object.defineProperty(t,"DefaultHttpClient",{enumerable:!0,get:function(){return o.AxiosClient}})},"./node_modules/@kintone/rest-api-client/lib/index.browser.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,o,r)}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__setModuleDefault||(Object.create?function(n,t){Object.defineProperty(n,"default",{enumerable:!0,value:t})}:function(n,t){n.default=t}),i=this&&this.__importStar||function(n){if(n&&n.__esModule)return n;var t={};if(null!=n)for(var e in n)"default"!==e&&Object.prototype.hasOwnProperty.call(n,e)&&o(t,n,e);return r(t,n),t},a=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),t.KintoneRestAPIClient=void 0;var s=e("./node_modules/@kintone/rest-api-client/lib/platform/index.js"),l=i(e("./node_modules/@kintone/rest-api-client/lib/platform/browser.js"));(0,s.injectPlatformDeps)(l);var d=e("./node_modules/@kintone/rest-api-client/lib/KintoneRestAPIClient.js");Object.defineProperty(t,"KintoneRestAPIClient",{enumerable:!0,get:function(){return d.KintoneRestAPIClient}}),a(e("./node_modules/@kintone/rest-api-client/lib/error/index.js"),t)},"./node_modules/@kintone/rest-api-client/lib/platform/UnsupportedPlatformError.js":function(n,t){"use strict";var e,o=this&&this.__extends||(e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])},e(n,t)},function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,"__esModule",{value:!0}),t.UnsupportedPlatformError=void 0;var r=function(n){function t(e){var o=this,r="This function is not supported in ".concat(e," environment");return o=n.call(this,r)||this,Error.captureStackTrace&&Error.captureStackTrace(o,t),o.name="UnsupportedPlatformError",o.platform=e,Object.setPrototypeOf(o,t.prototype),o}return o(t,n),t}(Error);t.UnsupportedPlatformError=r},"./node_modules/@kintone/rest-api-client/lib/platform/browser.js":function(n,t,e){"use strict";var o=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))},r=this&&this.__generator||function(n,t){var e,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(e=1,o&&(r=2&s[0]?o.return:s[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,s[1])).done)return r;switch(o=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(n,a)}catch(n){s=[6,n],o=0}finally{e=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},i=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.getVersion=t.buildBaseUrl=t.buildFormDataValue=t.buildHeaders=t.buildPlatformDependentConfig=t.getDefaultAuth=t.getRequestToken=t.readFileFromPath=void 0;var a=e("./node_modules/@kintone/rest-api-client/lib/platform/UnsupportedPlatformError.js"),s=i(e("./node_modules/mime/lite.js"));t.readFileFromPath=function(n){throw new a.UnsupportedPlatformError("Browser")};t.getRequestToken=function(){return o(void 0,void 0,void 0,(function(){var n,t;return r(this,(function(e){if("object"==typeof kintone&&null!==kintone&&"function"==typeof kintone.getRequestToken)return[2,kintone.getRequestToken()];if("object"==typeof garoon&&null!==garoon&&"function"==typeof(null===(t=null===(n=garoon.connect)||void 0===n?void 0:n.kintone)||void 0===t?void 0:t.getRequestToken))return[2,garoon.connect.kintone.getRequestToken()];throw new Error("session authentication must specify a request token")}))}))};t.getDefaultAuth=function(){return{type:"session"}};t.buildPlatformDependentConfig=function(){return{}};t.buildHeaders=function(){return{}};t.buildFormDataValue=function(n,t){var e={};return t&&(e.type=s.default.getType(t)||void 0),new Blob([n],e)};t.buildBaseUrl=function(n){if(n)return n;if(void 0===location)throw new Error("The baseUrl parameter is required for this environment");var t=location.host,e=location.protocol;return"".concat(e,"//").concat(t)};t.getVersion=function(){return PACKAGE_VERSION}},"./node_modules/@kintone/rest-api-client/lib/platform/index.js":(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.injectPlatformDeps=t.platformDeps=void 0,t.platformDeps={readFileFromPath:function(){throw new Error("not implemented")},getRequestToken:function(){throw new Error("not implemented")},getDefaultAuth:function(){throw new Error("not implemented")},buildPlatformDependentConfig:function(){throw new Error("not implemented")},buildHeaders:function(){throw new Error("not implemented")},buildFormDataValue:function(){throw new Error("not implemented")},buildBaseUrl:function(){throw new Error("not implemented")},getVersion:function(){throw new Error("not implemented")}};t.injectPlatformDeps=function(n){n.readFileFromPath&&(t.platformDeps.readFileFromPath=n.readFileFromPath),n.getRequestToken&&(t.platformDeps.getRequestToken=n.getRequestToken),n.getDefaultAuth&&(t.platformDeps.getDefaultAuth=n.getDefaultAuth),n.buildPlatformDependentConfig&&(t.platformDeps.buildPlatformDependentConfig=n.buildPlatformDependentConfig),n.buildHeaders&&(t.platformDeps.buildHeaders=n.buildHeaders),n.buildFormDataValue&&(t.platformDeps.buildFormDataValue=n.buildFormDataValue),n.buildBaseUrl&&(t.platformDeps.buildBaseUrl=n.buildBaseUrl),n.getVersion&&(t.platformDeps.getVersion=n.getVersion)}},"./node_modules/@kintone/rest-api-client/lib/url.js":(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.buildPath=void 0;t.buildPath=function(n){var t=n.endpointName,e=n.guestSpaceId,o=n.preview,r=void 0!==e?"/guest/".concat(e):"",i=o?"/preview":"";return"/k".concat(r,"/v1").concat(i,"/").concat(t,".json")}},"./node_modules/@kintone/rest-api-client/node_modules/axios/index.js":(n,t,e)=>{n.exports=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/axios.js")},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/adapters/xhr.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/settle.js"),i=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/cookies.js"),a=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/buildURL.js"),s=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/buildFullPath.js"),l=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/parseHeaders.js"),d=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isURLSameOrigin.js"),c=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/transitional.js"),p=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js"),A=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CanceledError.js"),m=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/parseProtocol.js");n.exports=function(n){return new Promise((function(t,e){var u,f=n.data,b=n.headers,g=n.responseType;function h(){n.cancelToken&&n.cancelToken.unsubscribe(u),n.signal&&n.signal.removeEventListener("abort",u)}o.isFormData(f)&&o.isStandardBrowserEnv()&&delete b["Content-Type"];var x=new XMLHttpRequest;if(n.auth){var v=n.auth.username||"",E=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";b.Authorization="Basic "+btoa(v+":"+E)}var B=s(n.baseURL,n.url);function y(){if(x){var o="getAllResponseHeaders"in x?l(x.getAllResponseHeaders()):null,i={data:g&&"text"!==g&&"json"!==g?x.response:x.responseText,status:x.status,statusText:x.statusText,headers:o,config:n,request:x};r((function(n){t(n),h()}),(function(n){e(n),h()}),i),x=null}}if(x.open(n.method.toUpperCase(),a(B,n.params,n.paramsSerializer),!0),x.timeout=n.timeout,"onloadend"in x?x.onloadend=y:x.onreadystatechange=function(){x&&4===x.readyState&&(0!==x.status||x.responseURL&&0===x.responseURL.indexOf("file:"))&&setTimeout(y)},x.onabort=function(){x&&(e(new p("Request aborted",p.ECONNABORTED,n,x)),x=null)},x.onerror=function(){e(new p("Network Error",p.ERR_NETWORK,n,x,x)),x=null},x.ontimeout=function(){var t=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded",o=n.transitional||c;n.timeoutErrorMessage&&(t=n.timeoutErrorMessage),e(new p(t,o.clarifyTimeoutError?p.ETIMEDOUT:p.ECONNABORTED,n,x)),x=null},o.isStandardBrowserEnv()){var w=(n.withCredentials||d(B))&&n.xsrfCookieName?i.read(n.xsrfCookieName):void 0;w&&(b[n.xsrfHeaderName]=w)}"setRequestHeader"in x&&o.forEach(b,(function(n,t){void 0===f&&"content-type"===t.toLowerCase()?delete b[t]:x.setRequestHeader(t,n)})),o.isUndefined(n.withCredentials)||(x.withCredentials=!!n.withCredentials),g&&"json"!==g&&(x.responseType=n.responseType),"function"==typeof n.onDownloadProgress&&x.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&x.upload&&x.upload.addEventListener("progress",n.onUploadProgress),(n.cancelToken||n.signal)&&(u=function(n){x&&(e(!n||n&&n.type?new A:n),x.abort(),x=null)},n.cancelToken&&n.cancelToken.subscribe(u),n.signal&&(n.signal.aborted?u():n.signal.addEventListener("abort",u))),f||(f=null);var I=m(B);I&&-1===["http","https","file"].indexOf(I)?e(new p("Unsupported protocol "+I+":",p.ERR_BAD_REQUEST,n)):x.send(f)}))}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/axios.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/bind.js"),i=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/Axios.js"),a=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/mergeConfig.js");var s=function n(t){var e=new i(t),s=r(i.prototype.request,e);return o.extend(s,i.prototype,e),o.extend(s,e),s.create=function(e){return n(a(t,e))},s}(e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/index.js"));s.Axios=i,s.CanceledError=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CanceledError.js"),s.CancelToken=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CancelToken.js"),s.isCancel=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/isCancel.js"),s.VERSION=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/env/data.js").version,s.toFormData=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/toFormData.js"),s.AxiosError=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js"),s.Cancel=s.CanceledError,s.all=function(n){return Promise.all(n)},s.spread=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/spread.js"),s.isAxiosError=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isAxiosError.js"),n.exports=s,n.exports.default=s},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CancelToken.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CanceledError.js");function r(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(n){t=n}));var e=this;this.promise.then((function(n){if(e._listeners){var t,o=e._listeners.length;for(t=0;t<o;t++)e._listeners[t](n);e._listeners=null}})),this.promise.then=function(n){var t,o=new Promise((function(n){e.subscribe(n),t=n})).then(n);return o.cancel=function(){e.unsubscribe(t)},o},n((function(n){e.reason||(e.reason=new o(n),t(e.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.prototype.subscribe=function(n){this.reason?n(this.reason):this._listeners?this._listeners.push(n):this._listeners=[n]},r.prototype.unsubscribe=function(n){if(this._listeners){var t=this._listeners.indexOf(n);-1!==t&&this._listeners.splice(t,1)}},r.source=function(){var n;return{token:new r((function(t){n=t})),cancel:n}},n.exports=r},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CanceledError.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js");function r(n){o.call(this,null==n?"canceled":n,o.ERR_CANCELED),this.name="CanceledError"}e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js").inherits(r,o,{__CANCEL__:!0}),n.exports=r},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/isCancel.js":n=>{"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/Axios.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/buildURL.js"),i=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/InterceptorManager.js"),a=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/dispatchRequest.js"),s=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/mergeConfig.js"),l=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/buildFullPath.js"),d=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/validator.js"),c=d.validators;function p(n){this.defaults=n,this.interceptors={request:new i,response:new i}}p.prototype.request=function(n,t){"string"==typeof n?(t=t||{}).url=n:t=n||{},(t=s(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=t.transitional;void 0!==e&&d.assertOptions(e,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var o=[],r=!0;this.interceptors.request.forEach((function(n){"function"==typeof n.runWhen&&!1===n.runWhen(t)||(r=r&&n.synchronous,o.unshift(n.fulfilled,n.rejected))}));var i,l=[];if(this.interceptors.response.forEach((function(n){l.push(n.fulfilled,n.rejected)})),!r){var p=[a,void 0];for(Array.prototype.unshift.apply(p,o),p=p.concat(l),i=Promise.resolve(t);p.length;)i=i.then(p.shift(),p.shift());return i}for(var A=t;o.length;){var m=o.shift(),u=o.shift();try{A=m(A)}catch(n){u(n);break}}try{i=a(A)}catch(n){return Promise.reject(n)}for(;l.length;)i=i.then(l.shift(),l.shift());return i},p.prototype.getUri=function(n){n=s(this.defaults,n);var t=l(n.baseURL,n.url);return r(t,n.params,n.paramsSerializer)},o.forEach(["delete","get","head","options"],(function(n){p.prototype[n]=function(t,e){return this.request(s(e||{},{method:n,url:t,data:(e||{}).data}))}})),o.forEach(["post","put","patch"],(function(n){function t(t){return function(e,o,r){return this.request(s(r||{},{method:n,headers:t?{"Content-Type":"multipart/form-data"}:{},url:e,data:o}))}}p.prototype[n]=t(),p.prototype[n+"Form"]=t(!0)})),n.exports=p},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");function r(n,t,e,o,r){Error.call(this),this.message=n,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),o&&(this.request=o),r&&(this.response=r)}o.inherits(r,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var i=r.prototype,a={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach((function(n){a[n]={value:n}})),Object.defineProperties(r,a),Object.defineProperty(i,"isAxiosError",{value:!0}),r.from=function(n,t,e,a,s,l){var d=Object.create(i);return o.toFlatObject(n,d,(function(n){return n!==Error.prototype})),r.call(d,n.message,t,e,a,s),d.name=n.name,l&&Object.assign(d,l),d},n.exports=r},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/InterceptorManager.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");function r(){this.handlers=[]}r.prototype.use=function(n,t,e){return this.handlers.push({fulfilled:n,rejected:t,synchronous:!!e&&e.synchronous,runWhen:e?e.runWhen:null}),this.handlers.length-1},r.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},r.prototype.forEach=function(n){o.forEach(this.handlers,(function(t){null!==t&&n(t)}))},n.exports=r},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/buildFullPath.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isAbsoluteURL.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/combineURLs.js");n.exports=function(n,t){return n&&!o(t)?r(n,t):t}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/dispatchRequest.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/transformData.js"),i=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/isCancel.js"),a=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/index.js"),s=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/cancel/CanceledError.js");function l(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new s}n.exports=function(n){return l(n),n.headers=n.headers||{},n.data=r.call(n,n.data,n.headers,n.transformRequest),n.headers=o.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),o.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete n.headers[t]})),(n.adapter||a.adapter)(n).then((function(t){return l(n),t.data=r.call(n,t.data,t.headers,n.transformResponse),t}),(function(t){return i(t)||(l(n),t&&t.response&&(t.response.data=r.call(n,t.response.data,t.response.headers,n.transformResponse))),Promise.reject(t)}))}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/mergeConfig.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=function(n,t){t=t||{};var e={};function r(n,t){return o.isPlainObject(n)&&o.isPlainObject(t)?o.merge(n,t):o.isPlainObject(t)?o.merge({},t):o.isArray(t)?t.slice():t}function i(e){return o.isUndefined(t[e])?o.isUndefined(n[e])?void 0:r(void 0,n[e]):r(n[e],t[e])}function a(n){if(!o.isUndefined(t[n]))return r(void 0,t[n])}function s(e){return o.isUndefined(t[e])?o.isUndefined(n[e])?void 0:r(void 0,n[e]):r(void 0,t[e])}function l(e){return e in t?r(n[e],t[e]):e in n?r(void 0,n[e]):void 0}var d={url:a,method:a,data:a,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:l};return o.forEach(Object.keys(n).concat(Object.keys(t)),(function(n){var t=d[n]||i,r=t(n);o.isUndefined(r)&&t!==l||(e[n]=r)})),e}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/settle.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js");n.exports=function(n,t,e){var r=e.config.validateStatus;e.status&&r&&!r(e.status)?t(new o("Request failed with status code "+e.status,[o.ERR_BAD_REQUEST,o.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e)):n(e)}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/transformData.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/index.js");n.exports=function(n,t,e){var i=this||r;return o.forEach(e,(function(e){n=e.call(i,n,t)})),n}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/normalizeHeaderName.js"),i=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js"),a=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/transitional.js"),s=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/toFormData.js"),l={"Content-Type":"application/x-www-form-urlencoded"};function d(n,t){!o.isUndefined(n)&&o.isUndefined(n["Content-Type"])&&(n["Content-Type"]=t)}var c,p={transitional:a,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/adapters/xhr.js")),c),transformRequest:[function(n,t){if(r(t,"Accept"),r(t,"Content-Type"),o.isFormData(n)||o.isArrayBuffer(n)||o.isBuffer(n)||o.isStream(n)||o.isFile(n)||o.isBlob(n))return n;if(o.isArrayBufferView(n))return n.buffer;if(o.isURLSearchParams(n))return d(t,"application/x-www-form-urlencoded;charset=utf-8"),n.toString();var e,i=o.isObject(n),a=t&&t["Content-Type"];if((e=o.isFileList(n))||i&&"multipart/form-data"===a){var l=this.env&&this.env.FormData;return s(e?{"files[]":n}:n,l&&new l)}return i||"application/json"===a?(d(t,"application/json"),function(n,t,e){if(o.isString(n))try{return(t||JSON.parse)(n),o.trim(n)}catch(n){if("SyntaxError"!==n.name)throw n}return(e||JSON.stringify)(n)}(n)):n}],transformResponse:[function(n){var t=this.transitional||p.transitional,e=t&&t.silentJSONParsing,r=t&&t.forcedJSONParsing,a=!e&&"json"===this.responseType;if(a||r&&o.isString(n)&&n.length)try{return JSON.parse(n)}catch(n){if(a){if("SyntaxError"===n.name)throw i.from(n,i.ERR_BAD_RESPONSE,this,null,this.response);throw n}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/null.js")},validateStatus:function(n){return n>=200&&n<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};o.forEach(["delete","get","head"],(function(n){p.headers[n]={}})),o.forEach(["post","put","patch"],(function(n){p.headers[n]=o.merge(l)})),n.exports=p},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/defaults/transitional.js":n=>{"use strict";n.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/env/data.js":n=>{n.exports={version:"0.27.2"}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/bind.js":n=>{"use strict";n.exports=function(n,t){return function(){for(var e=new Array(arguments.length),o=0;o<e.length;o++)e[o]=arguments[o];return n.apply(t,e)}}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/buildURL.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");function r(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,t,e){if(!t)return n;var i;if(e)i=e(t);else if(o.isURLSearchParams(t))i=t.toString();else{var a=[];o.forEach(t,(function(n,t){null!=n&&(o.isArray(n)?t+="[]":n=[n],o.forEach(n,(function(n){o.isDate(n)?n=n.toISOString():o.isObject(n)&&(n=JSON.stringify(n)),a.push(r(t)+"="+r(n))})))})),i=a.join("&")}if(i){var s=n.indexOf("#");-1!==s&&(n=n.slice(0,s)),n+=(-1===n.indexOf("?")?"?":"&")+i}return n}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/combineURLs.js":n=>{"use strict";n.exports=function(n,t){return t?n.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):n}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/cookies.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=o.isStandardBrowserEnv()?{write:function(n,t,e,r,i,a){var s=[];s.push(n+"="+encodeURIComponent(t)),o.isNumber(e)&&s.push("expires="+new Date(e).toGMTString()),o.isString(r)&&s.push("path="+r),o.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(n){var t=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isAbsoluteURL.js":n=>{"use strict";n.exports=function(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isAxiosError.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=function(n){return o.isObject(n)&&!0===n.isAxiosError}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/isURLSameOrigin.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=o.isStandardBrowserEnv()?function(){var n,t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a");function r(n){var o=n;return t&&(e.setAttribute("href",o),o=e.href),e.setAttribute("href",o),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\?/,""):"",hash:e.hash?e.hash.replace(/^#/,""):"",hostname:e.hostname,port:e.port,pathname:"/"===e.pathname.charAt(0)?e.pathname:"/"+e.pathname}}return n=r(window.location.href),function(t){var e=o.isString(t)?r(t):t;return e.protocol===n.protocol&&e.host===n.host}}():function(){return!0}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/normalizeHeaderName.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=function(n,t){o.forEach(n,(function(e,o){o!==t&&o.toUpperCase()===t.toUpperCase()&&(n[t]=e,delete n[o])}))}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/null.js":n=>{n.exports=null},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/parseHeaders.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js"),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var t,e,i,a={};return n?(o.forEach(n.split("\n"),(function(n){if(i=n.indexOf(":"),t=o.trim(n.substr(0,i)).toLowerCase(),e=o.trim(n.substr(i+1)),t){if(a[t]&&r.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([e]):a[t]?a[t]+", "+e:e}})),a):a}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/parseProtocol.js":n=>{"use strict";n.exports=function(n){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(n);return t&&t[1]||""}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/spread.js":n=>{"use strict";n.exports=function(n){return function(t){return n.apply(null,t)}}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/toFormData.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js");n.exports=function(n,t){t=t||new FormData;var e=[];function r(n){return null===n?"":o.isDate(n)?n.toISOString():o.isArrayBuffer(n)||o.isTypedArray(n)?"function"==typeof Blob?new Blob([n]):Buffer.from(n):n}return function n(i,a){if(o.isPlainObject(i)||o.isArray(i)){if(-1!==e.indexOf(i))throw Error("Circular reference detected in "+a);e.push(i),o.forEach(i,(function(e,i){if(!o.isUndefined(e)){var s,l=a?a+"."+i:i;if(e&&!a&&"object"==typeof e)if(o.endsWith(i,"{}"))e=JSON.stringify(e);else if(o.endsWith(i,"[]")&&(s=o.toArray(e)))return void s.forEach((function(n){!o.isUndefined(n)&&t.append(l,r(n))}));n(e,l)}})),e.pop()}else t.append(a,r(i))}(n),t}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/validator.js":(n,t,e)=>{"use strict";var o=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/env/data.js").version,r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/core/AxiosError.js"),i={};["object","boolean","number","function","string","symbol"].forEach((function(n,t){i[n]=function(e){return typeof e===n||"a"+(t<1?"n ":" ")+n}}));var a={};i.transitional=function(n,t,e){function i(n,t){return"[Axios v"+o+"] Transitional option '"+n+"'"+t+(e?". "+e:"")}return function(e,o,s){if(!1===n)throw new r(i(o," has been removed"+(t?" in "+t:"")),r.ERR_DEPRECATED);return t&&!a[o]&&(a[o]=!0,console.warn(i(o," has been deprecated since v"+t+" and will be removed in the near future"))),!n||n(e,o,s)}},n.exports={assertOptions:function(n,t,e){if("object"!=typeof n)throw new r("options must be an object",r.ERR_BAD_OPTION_VALUE);for(var o=Object.keys(n),i=o.length;i-- >0;){var a=o[i],s=t[a];if(s){var l=n[a],d=void 0===l||s(l,a,n);if(!0!==d)throw new r("option "+a+" must be "+d,r.ERR_BAD_OPTION_VALUE)}else if(!0!==e)throw new r("Unknown option "+a,r.ERR_BAD_OPTION)}},validators:i}},"./node_modules/@kintone/rest-api-client/node_modules/axios/lib/utils.js":(n,t,e)=>{"use strict";var o,r=e("./node_modules/@kintone/rest-api-client/node_modules/axios/lib/helpers/bind.js"),i=Object.prototype.toString,a=(o=Object.create(null),function(n){var t=i.call(n);return o[t]||(o[t]=t.slice(8,-1).toLowerCase())});function s(n){return n=n.toLowerCase(),function(t){return a(t)===n}}function l(n){return Array.isArray(n)}function d(n){return void 0===n}var c=s("ArrayBuffer");function p(n){return null!==n&&"object"==typeof n}function A(n){if("object"!==a(n))return!1;var t=Object.getPrototypeOf(n);return null===t||t===Object.prototype}var m=s("Date"),u=s("File"),f=s("Blob"),b=s("FileList");function g(n){return"[object Function]"===i.call(n)}var h=s("URLSearchParams");function x(n,t){if(null!=n)if("object"!=typeof n&&(n=[n]),l(n))for(var e=0,o=n.length;e<o;e++)t.call(null,n[e],e,n);else for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.call(null,n[r],r,n)}var v,E=(v="undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(n){return v&&n instanceof v});n.exports={isArray:l,isArrayBuffer:c,isBuffer:function(n){return null!==n&&!d(n)&&null!==n.constructor&&!d(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){var t="[object FormData]";return n&&("function"==typeof FormData&&n instanceof FormData||i.call(n)===t||g(n.toString)&&n.toString()===t)},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&c(n.buffer)},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:p,isPlainObject:A,isUndefined:d,isDate:m,isFile:u,isBlob:f,isFunction:g,isStream:function(n){return p(n)&&g(n.pipe)},isURLSearchParams:h,isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:x,merge:function n(){var t={};function e(e,o){A(t[o])&&A(e)?t[o]=n(t[o],e):A(e)?t[o]=n({},e):l(e)?t[o]=e.slice():t[o]=e}for(var o=0,r=arguments.length;o<r;o++)x(arguments[o],e);return t},extend:function(n,t,e){return x(t,(function(t,o){n[o]=e&&"function"==typeof t?r(t,e):t})),n},trim:function(n){return n.trim?n.trim():n.replace(/^\s+|\s+$/g,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n},inherits:function(n,t,e,o){n.prototype=Object.create(t.prototype,o),n.prototype.constructor=n,e&&Object.assign(n.prototype,e)},toFlatObject:function(n,t,e){var o,r,i,a={};t=t||{};do{for(r=(o=Object.getOwnPropertyNames(n)).length;r-- >0;)a[i=o[r]]||(t[i]=n[i],a[i]=!0);n=Object.getPrototypeOf(n)}while(n&&(!e||e(n,t))&&n!==Object.prototype);return t},kindOf:a,kindOfTest:s,endsWith:function(n,t,e){n=String(n),(void 0===e||e>n.length)&&(e=n.length),e-=t.length;var o=n.indexOf(t,e);return-1!==o&&o===e},toArray:function(n){if(!n)return null;var t=n.length;if(d(t))return null;for(var e=new Array(t);t-- >0;)e[t]=n[t];return e},isTypedArray:E,isFileList:b}},"./node_modules/@popperjs/core/lib/createPopper.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{createPopper:()=>E,detectOverflow:()=>u.default,popperGenerator:()=>v});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"),s=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"),l=e("./node_modules/@popperjs/core/lib/utils/orderModifiers.js"),d=e("./node_modules/@popperjs/core/lib/utils/debounce.js"),c=e("./node_modules/@popperjs/core/lib/utils/validateModifiers.js"),p=e("./node_modules/@popperjs/core/lib/utils/uniqueBy.js"),A=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),m=e("./node_modules/@popperjs/core/lib/utils/mergeByName.js"),u=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),f=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),b=e("./node_modules/@popperjs/core/lib/enums.js"),g="Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.",h={placement:"bottom",modifiers:[],strategy:"absolute"};function x(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];return!t.some((function(n){return!(n&&"function"==typeof n.getBoundingClientRect)}))}function v(n){void 0===n&&(n={});var t=n,e=t.defaultModifiers,u=void 0===e?[]:e,v=t.defaultOptions,E=void 0===v?h:v;return function(n,t,e){void 0===e&&(e=E);var v={placement:"bottom",orderedModifiers:[],options:Object.assign({},h,E),modifiersData:{},elements:{reference:n,popper:t},attributes:{},styles:{}},B=[],y=!1,w={state:v,setOptions:function(e){var o="function"==typeof e?e(v.options):e;I(),v.options=Object.assign({},E,v.options,o),v.scrollParents={reference:(0,f.isElement)(n)?(0,i.default)(n):n.contextElement?(0,i.default)(n.contextElement):[],popper:(0,i.default)(t)};var r=(0,l.default)((0,m.default)([].concat(u,v.options.modifiers)));v.orderedModifiers=r.filter((function(n){return n.enabled}));var a=(0,p.default)([].concat(r,v.options.modifiers),(function(n){return n.name}));(0,c.default)(a),(0,A.default)(v.options.placement)===b.auto&&(v.orderedModifiers.find((function(n){return"flip"===n.name}))||console.error(['Popper: "auto" placements require the "flip" modifier be',"present and enabled to work."].join(" ")));var d=(0,s.default)(t);return[d.marginTop,d.marginRight,d.marginBottom,d.marginLeft].some((function(n){return parseFloat(n)}))&&console.warn(['Popper: CSS "margin" styles cannot be used to apply padding',"between the popper and its reference element or boundary.","To replicate margin, use the `offset` modifier, as well as","the `padding` option in the `preventOverflow` and `flip`","modifiers."].join(" ")),v.orderedModifiers.forEach((function(n){var t=n.name,e=n.options,o=void 0===e?{}:e,r=n.effect;if("function"==typeof r){var i=r({state:v,name:t,instance:w,options:o}),a=function(){};B.push(i||a)}})),w.update()},forceUpdate:function(){if(!y){var n=v.elements,t=n.reference,e=n.popper;if(x(t,e)){v.rects={reference:(0,o.default)(t,(0,a.default)(e),"fixed"===v.options.strategy),popper:(0,r.default)(e)},v.reset=!1,v.placement=v.options.placement,v.orderedModifiers.forEach((function(n){return v.modifiersData[n.name]=Object.assign({},n.data)}));for(var i=0,s=0;s<v.orderedModifiers.length;s++){if((i+=1)>100){console.error("Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.");break}if(!0!==v.reset){var l=v.orderedModifiers[s],d=l.fn,c=l.options,p=void 0===c?{}:c,A=l.name;"function"==typeof d&&(v=d({state:v,options:p,name:A,instance:w})||v)}else v.reset=!1,s=-1}}else console.error(g)}},update:(0,d.default)((function(){return new Promise((function(n){w.forceUpdate(),n(v)}))})),destroy:function(){I(),y=!0}};if(!x(n,t))return console.error(g),w;function I(){B.forEach((function(n){return n()})),B=[]}return w.setOptions(e).then((function(n){!y&&e.onFirstUpdate&&e.onFirstUpdate(n)})),w}}var E=v()},"./node_modules/@popperjs/core/lib/dom-utils/contains.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");function r(n,t){var e=t.getRootNode&&t.getRootNode();if(n.contains(t))return!0;if(e&&(0,o.isShadowRoot)(e)){var r=t;do{if(r&&n.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}},"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),r=e("./node_modules/@popperjs/core/lib/utils/math.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");function s(n,t,e){void 0===t&&(t=!1),void 0===e&&(e=!1);var s=n.getBoundingClientRect(),l=1,d=1;t&&(0,o.isHTMLElement)(n)&&(l=n.offsetWidth>0&&(0,r.round)(s.width)/n.offsetWidth||1,d=n.offsetHeight>0&&(0,r.round)(s.height)/n.offsetHeight||1);var c=((0,o.isElement)(n)?(0,i.default)(n):window).visualViewport,p=!(0,a.default)()&&e,A=(s.left+(p&&c?c.offsetLeft:0))/l,m=(s.top+(p&&c?c.offsetTop:0))/d,u=s.width/l,f=s.height/d;return{width:u,height:f,top:m,right:A+u,bottom:m+f,left:A,x:A,y:m}}},"./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>h});var o=e("./node_modules/@popperjs/core/lib/enums.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js"),s=e("./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"),l=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),d=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"),c=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),p=e("./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"),A=e("./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"),m=e("./node_modules/@popperjs/core/lib/dom-utils/contains.js"),u=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),f=e("./node_modules/@popperjs/core/lib/utils/rectToClientRect.js"),b=e("./node_modules/@popperjs/core/lib/utils/math.js");function g(n,t,e){return t===o.viewport?(0,f.default)((0,r.default)(n,e)):(0,c.isElement)(t)?function(n,t){var e=(0,p.default)(n,!1,"fixed"===t);return e.top=e.top+n.clientTop,e.left=e.left+n.clientLeft,e.bottom=e.top+n.clientHeight,e.right=e.left+n.clientWidth,e.width=n.clientWidth,e.height=n.clientHeight,e.x=e.left,e.y=e.top,e}(t,e):(0,f.default)((0,i.default)((0,l.default)(n)))}function h(n,t,e,o){var r="clippingParents"===t?function(n){var t=(0,a.default)((0,A.default)(n)),e=["absolute","fixed"].indexOf((0,d.default)(n).position)>=0&&(0,c.isHTMLElement)(n)?(0,s.default)(n):n;return(0,c.isElement)(e)?t.filter((function(n){return(0,c.isElement)(n)&&(0,m.default)(n,e)&&"body"!==(0,u.default)(n)})):[]}(n):[].concat(t),i=[].concat(r,[e]),l=i[0],p=i.reduce((function(t,e){var r=g(n,e,o);return t.top=(0,b.max)(r.top,t.top),t.right=(0,b.min)(r.right,t.right),t.bottom=(0,b.min)(r.bottom,t.bottom),t.left=(0,b.max)(r.left,t.left),t}),g(n,l,o));return p.width=p.right-p.left,p.height=p.bottom-p.top,p.x=p.left,p.y=p.top,p}},"./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>p});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),s=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"),l=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),d=e("./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js"),c=e("./node_modules/@popperjs/core/lib/utils/math.js");function p(n,t,e){void 0===e&&(e=!1);var p=(0,a.isHTMLElement)(t),A=(0,a.isHTMLElement)(t)&&function(n){var t=n.getBoundingClientRect(),e=(0,c.round)(t.width)/n.offsetWidth||1,o=(0,c.round)(t.height)/n.offsetHeight||1;return 1!==e||1!==o}(t),m=(0,l.default)(t),u=(0,o.default)(n,A,e),f={scrollLeft:0,scrollTop:0},b={x:0,y:0};return(p||!p&&!e)&&(("body"!==(0,i.default)(t)||(0,d.default)(m))&&(f=(0,r.default)(t)),(0,a.isHTMLElement)(t)?((b=(0,o.default)(t,!0)).x+=t.clientLeft,b.y+=t.clientTop):m&&(b.x=(0,s.default)(m))),{x:u.left+f.scrollLeft-b.x,y:u.top+f.scrollTop-b.y,width:u.width,height:u.height}}},"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");function r(n){return(0,o.default)(n).getComputedStyle(n)}},"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");function r(n){return(((0,o.isElement)(n)?n.ownerDocument:n.document)||window.document).documentElement}},"./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>l});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js"),s=e("./node_modules/@popperjs/core/lib/utils/math.js");function l(n){var t,e=(0,o.default)(n),l=(0,a.default)(n),d=null==(t=n.ownerDocument)?void 0:t.body,c=(0,s.max)(e.scrollWidth,e.clientWidth,d?d.scrollWidth:0,d?d.clientWidth:0),p=(0,s.max)(e.scrollHeight,e.clientHeight,d?d.scrollHeight:0,d?d.clientHeight:0),A=-l.scrollLeft+(0,i.default)(n),m=-l.scrollTop;return"rtl"===(0,r.default)(d||e).direction&&(A+=(0,s.max)(e.clientWidth,d?d.clientWidth:0)-c),{width:c,height:p,x:A,y:m}}},"./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":(n,t,e)=>{"use strict";function o(n){return{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop}}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");function r(n){var t=(0,o.default)(n),e=n.offsetWidth,r=n.offsetHeight;return Math.abs(t.width-e)<=1&&(e=t.width),Math.abs(t.height-r)<=1&&(r=t.height),{x:n.offsetLeft,y:n.offsetTop,width:e,height:r}}},"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":(n,t,e)=>{"use strict";function o(n){return n?(n.nodeName||"").toLowerCase():null}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js");function s(n){return n!==(0,r.default)(n)&&(0,i.isHTMLElement)(n)?(0,a.default)(n):(0,o.default)(n)}},"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>p});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),s=e("./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js"),l=e("./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"),d=e("./node_modules/@popperjs/core/lib/utils/userAgent.js");function c(n){return(0,a.isHTMLElement)(n)&&"fixed"!==(0,i.default)(n).position?n.offsetParent:null}function p(n){for(var t=(0,o.default)(n),e=c(n);e&&(0,s.default)(e)&&"static"===(0,i.default)(e).position;)e=c(e);return e&&("html"===(0,r.default)(e)||"body"===(0,r.default)(e)&&"static"===(0,i.default)(e).position)?t:e||function(n){var t=/firefox/i.test((0,d.default)());if(/Trident/i.test((0,d.default)())&&(0,a.isHTMLElement)(n)&&"fixed"===(0,i.default)(n).position)return null;var e=(0,l.default)(n);for((0,a.isShadowRoot)(e)&&(e=e.host);(0,a.isHTMLElement)(e)&&["html","body"].indexOf((0,r.default)(e))<0;){var o=(0,i.default)(e);if("none"!==o.transform||"none"!==o.perspective||"paint"===o.contain||-1!==["transform","perspective"].indexOf(o.willChange)||t&&"filter"===o.willChange||t&&o.filter&&"none"!==o.filter)return e;e=e.parentNode}return null}(n)||t}},"./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>a});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");function a(n){return"html"===(0,o.default)(n)?n:n.assignedSlot||n.parentNode||((0,i.isShadowRoot)(n)?n.host:null)||(0,r.default)(n)}},"./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");function s(n){return["html","body","#document"].indexOf((0,i.default)(n))>=0?n.ownerDocument.body:(0,a.isHTMLElement)(n)&&(0,r.default)(n)?n:s((0,o.default)(n))}},"./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");function s(n,t){var e=(0,o.default)(n),s=(0,r.default)(n),l=e.visualViewport,d=s.clientWidth,c=s.clientHeight,p=0,A=0;if(l){d=l.width,c=l.height;var m=(0,a.default)();(m||!m&&"fixed"===t)&&(p=l.offsetLeft,A=l.offsetTop)}return{width:d,height:c,x:p+(0,i.default)(n),y:A}}},"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":(n,t,e)=>{"use strict";function o(n){if(null==n)return window;if("[object Window]"!==n.toString()){var t=n.ownerDocument;return t&&t.defaultView||window}return n}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");function r(n){var t=(0,o.default)(n);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}},"./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>a});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");function a(n){return(0,o.default)((0,r.default)(n)).left+(0,i.default)(n).scrollLeft}},"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{isElement:()=>r,isHTMLElement:()=>i,isShadowRoot:()=>a});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");function r(n){return n instanceof(0,o.default)(n).Element||n instanceof Element}function i(n){return n instanceof(0,o.default)(n).HTMLElement||n instanceof HTMLElement}function a(n){return"undefined"!=typeof ShadowRoot&&(n instanceof(0,o.default)(n).ShadowRoot||n instanceof ShadowRoot)}},"./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/utils/userAgent.js");function r(){return!/^((?!chrome|android).)*safari/i.test((0,o.default)())}},"./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");function r(n){var t=(0,o.default)(n),e=t.overflow,r=t.overflowX,i=t.overflowY;return/auto|scroll|overlay|hidden/.test(e+i+r)}},"./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");function r(n){return["table","td","th"].indexOf((0,o.default)(n))>=0}},"./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");function s(n,t){var e;void 0===t&&(t=[]);var l=(0,o.default)(n),d=l===(null==(e=n.ownerDocument)?void 0:e.body),c=(0,i.default)(l),p=d?[c].concat(c.visualViewport||[],(0,a.default)(l)?l:[]):l,A=t.concat(p);return d?A:A.concat(s((0,r.default)(p)))}},"./node_modules/@popperjs/core/lib/enums.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{afterMain:()=>B,afterRead:()=>x,afterWrite:()=>I,auto:()=>s,basePlacements:()=>l,beforeMain:()=>v,beforeRead:()=>g,beforeWrite:()=>y,bottom:()=>r,clippingParents:()=>p,end:()=>c,left:()=>a,main:()=>E,modifierPhases:()=>$,placements:()=>b,popper:()=>m,read:()=>h,reference:()=>u,right:()=>i,start:()=>d,top:()=>o,variationPlacements:()=>f,viewport:()=>A,write:()=>w});var o="top",r="bottom",i="right",a="left",s="auto",l=[o,r,i,a],d="start",c="end",p="clippingParents",A="viewport",m="popper",u="reference",f=l.reduce((function(n,t){return n.concat([t+"-"+d,t+"-"+c])}),[]),b=[].concat(l,[s]).reduce((function(n,t){return n.concat([t,t+"-"+d,t+"-"+c])}),[]),g="beforeRead",h="read",x="afterRead",v="beforeMain",E="main",B="afterMain",y="beforeWrite",w="write",I="afterWrite",$=[g,h,x,v,E,B,y,w,I]},"./node_modules/@popperjs/core/lib/index.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{afterMain:()=>o.afterMain,afterRead:()=>o.afterRead,afterWrite:()=>o.afterWrite,applyStyles:()=>r.applyStyles,arrow:()=>r.arrow,auto:()=>o.auto,basePlacements:()=>o.basePlacements,beforeMain:()=>o.beforeMain,beforeRead:()=>o.beforeRead,beforeWrite:()=>o.beforeWrite,bottom:()=>o.bottom,clippingParents:()=>o.clippingParents,computeStyles:()=>r.computeStyles,createPopper:()=>s.createPopper,createPopperBase:()=>i.createPopper,createPopperLite:()=>l.createPopper,detectOverflow:()=>a.default,end:()=>o.end,eventListeners:()=>r.eventListeners,flip:()=>r.flip,hide:()=>r.hide,left:()=>o.left,main:()=>o.main,modifierPhases:()=>o.modifierPhases,offset:()=>r.offset,placements:()=>o.placements,popper:()=>o.popper,popperGenerator:()=>i.popperGenerator,popperOffsets:()=>r.popperOffsets,preventOverflow:()=>r.preventOverflow,read:()=>o.read,reference:()=>o.reference,right:()=>o.right,start:()=>o.start,top:()=>o.top,variationPlacements:()=>o.variationPlacements,viewport:()=>o.viewport,write:()=>o.write});var o=e("./node_modules/@popperjs/core/lib/enums.js"),r=e("./node_modules/@popperjs/core/lib/modifiers/index.js"),i=e("./node_modules/@popperjs/core/lib/createPopper.js"),a=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),s=e("./node_modules/@popperjs/core/lib/popper.js"),l=e("./node_modules/@popperjs/core/lib/popper-lite.js")},"./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");t.default={name:"applyStyles",enabled:!0,phase:"write",fn:function(n){var t=n.state;Object.keys(t.elements).forEach((function(n){var e=t.styles[n]||{},i=t.attributes[n]||{},a=t.elements[n];(0,r.isHTMLElement)(a)&&(0,o.default)(a)&&(Object.assign(a.style,e),Object.keys(i).forEach((function(n){var t=i[n];!1===t?a.removeAttribute(n):a.setAttribute(n,!0===t?"":t)})))}))},effect:function(n){var t=n.state,e={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,e.popper),t.styles=e,t.elements.arrow&&Object.assign(t.elements.arrow.style,e.arrow),function(){Object.keys(t.elements).forEach((function(n){var i=t.elements[n],a=t.attributes[n]||{},s=Object.keys(t.styles.hasOwnProperty(n)?t.styles[n]:e[n]).reduce((function(n,t){return n[t]="",n}),{});(0,r.isHTMLElement)(i)&&(0,o.default)(i)&&(Object.assign(i.style,s),Object.keys(a).forEach((function(n){i.removeAttribute(n)})))}))}},requires:["computeStyles"]}},"./node_modules/@popperjs/core/lib/modifiers/arrow.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/contains.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"),s=e("./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js"),l=e("./node_modules/@popperjs/core/lib/utils/within.js"),d=e("./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js"),c=e("./node_modules/@popperjs/core/lib/utils/expandToHashMap.js"),p=e("./node_modules/@popperjs/core/lib/enums.js"),A=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");t.default={name:"arrow",enabled:!0,phase:"main",fn:function(n){var t,e=n.state,i=n.name,A=n.options,m=e.elements.arrow,u=e.modifiersData.popperOffsets,f=(0,o.default)(e.placement),b=(0,s.default)(f),g=[p.left,p.right].indexOf(f)>=0?"height":"width";if(m&&u){var h=function(n,t){return n="function"==typeof n?n(Object.assign({},t.rects,{placement:t.placement})):n,(0,d.default)("number"!=typeof n?n:(0,c.default)(n,p.basePlacements))}(A.padding,e),x=(0,r.default)(m),v="y"===b?p.top:p.left,E="y"===b?p.bottom:p.right,B=e.rects.reference[g]+e.rects.reference[b]-u[b]-e.rects.popper[g],y=u[b]-e.rects.reference[b],w=(0,a.default)(m),I=w?"y"===b?w.clientHeight||0:w.clientWidth||0:0,$=B/2-y/2,C=h[v],_=I-x[g]-h[E],k=I/2-x[g]/2+$,O=(0,l.within)(C,k,_),j=b;e.modifiersData[i]=((t={})[j]=O,t.centerOffset=O-k,t)}},effect:function(n){var t=n.state,e=n.options.element,o=void 0===e?"[data-popper-arrow]":e;null!=o&&("string"!=typeof o||(o=t.elements.popper.querySelector(o)))&&((0,A.isHTMLElement)(o)||console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).',"To use an SVG arrow, wrap it in an HTMLElement that will be used as","the arrow."].join(" ")),(0,i.default)(t.elements.popper,o)?t.elements.arrow=o:console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper',"element."].join(" ")))},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]}},"./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{mapToStyles:()=>A});var o=e("./node_modules/@popperjs/core/lib/enums.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),a=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),s=e("./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"),l=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),d=e("./node_modules/@popperjs/core/lib/utils/getVariation.js"),c=e("./node_modules/@popperjs/core/lib/utils/math.js"),p={top:"auto",right:"auto",bottom:"auto",left:"auto"};function A(n){var t,e=n.popper,l=n.popperRect,d=n.placement,A=n.variation,m=n.offsets,u=n.position,f=n.gpuAcceleration,b=n.adaptive,g=n.roundOffsets,h=n.isFixed,x=m.x,v=void 0===x?0:x,E=m.y,B=void 0===E?0:E,y="function"==typeof g?g({x:v,y:B}):{x:v,y:B};v=y.x,B=y.y;var w=m.hasOwnProperty("x"),I=m.hasOwnProperty("y"),$=o.left,C=o.top,_=window;if(b){var k=(0,r.default)(e),O="clientHeight",j="clientWidth";if(k===(0,i.default)(e)&&(k=(0,a.default)(e),"static"!==(0,s.default)(k).position&&"absolute"===u&&(O="scrollHeight",j="scrollWidth")),d===o.top||(d===o.left||d===o.right)&&A===o.end)C=o.bottom,B-=(h&&k===_&&_.visualViewport?_.visualViewport.height:k[O])-l.height,B*=f?1:-1;if(d===o.left||(d===o.top||d===o.bottom)&&A===o.end)$=o.right,v-=(h&&k===_&&_.visualViewport?_.visualViewport.width:k[j])-l.width,v*=f?1:-1}var M,S=Object.assign({position:u},b&&p),R=!0===g?function(n){var t=n.x,e=n.y,o=window.devicePixelRatio||1;return{x:(0,c.round)(t*o)/o||0,y:(0,c.round)(e*o)/o||0}}({x:v,y:B}):{x:v,y:B};return v=R.x,B=R.y,f?Object.assign({},S,((M={})[C]=I?"0":"",M[$]=w?"0":"",M.transform=(_.devicePixelRatio||1)<=1?"translate("+v+"px, "+B+"px)":"translate3d("+v+"px, "+B+"px, 0)",M)):Object.assign({},S,((t={})[C]=I?B+"px":"",t[$]=w?v+"px":"",t.transform="",t))}t.default={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(n){var t=n.state,e=n.options,o=e.gpuAcceleration,r=void 0===o||o,i=e.adaptive,a=void 0===i||i,c=e.roundOffsets,p=void 0===c||c,m=(0,s.default)(t.elements.popper).transitionProperty||"";a&&["transform","top","right","bottom","left"].some((function(n){return m.indexOf(n)>=0}))&&console.warn(["Popper: Detected CSS transitions on at least one of the following",'CSS properties: "transform", "top", "right", "bottom", "left".',"\n\n",'Disable the "computeStyles" modifier\'s `adaptive` option to allow',"for smooth transitions, or remove these properties from the CSS","transition declaration on the popper element if only transitioning","opacity or background-color for example.","\n\n","We recommend using the popper element as a wrapper around an inner","element that can have any CSS property transitioned for animations."].join(" "));var u={placement:(0,l.default)(t.placement),variation:(0,d.default)(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:r,isFixed:"fixed"===t.options.strategy};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,A(Object.assign({},u,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:a,roundOffsets:p})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,A(Object.assign({},u,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:p})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}}},"./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/dom-utils/getWindow.js"),r={passive:!0};t.default={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(n){var t=n.state,e=n.instance,i=n.options,a=i.scroll,s=void 0===a||a,l=i.resize,d=void 0===l||l,c=(0,o.default)(t.elements.popper),p=[].concat(t.scrollParents.reference,t.scrollParents.popper);return s&&p.forEach((function(n){n.addEventListener("scroll",e.update,r)})),d&&c.addEventListener("resize",e.update,r),function(){s&&p.forEach((function(n){n.removeEventListener("scroll",e.update,r)})),d&&c.removeEventListener("resize",e.update,r)}},data:{}}},"./node_modules/@popperjs/core/lib/modifiers/flip.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js"),r=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),i=e("./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js"),a=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),s=e("./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js"),l=e("./node_modules/@popperjs/core/lib/enums.js"),d=e("./node_modules/@popperjs/core/lib/utils/getVariation.js");t.default={name:"flip",enabled:!0,phase:"main",fn:function(n){var t=n.state,e=n.options,c=n.name;if(!t.modifiersData[c]._skip){for(var p=e.mainAxis,A=void 0===p||p,m=e.altAxis,u=void 0===m||m,f=e.fallbackPlacements,b=e.padding,g=e.boundary,h=e.rootBoundary,x=e.altBoundary,v=e.flipVariations,E=void 0===v||v,B=e.allowedAutoPlacements,y=t.options.placement,w=(0,r.default)(y),I=f||(w===y||!E?[(0,o.default)(y)]:function(n){if((0,r.default)(n)===l.auto)return[];var t=(0,o.default)(n);return[(0,i.default)(n),t,(0,i.default)(t)]}(y)),$=[y].concat(I).reduce((function(n,e){return n.concat((0,r.default)(e)===l.auto?(0,s.default)(t,{placement:e,boundary:g,rootBoundary:h,padding:b,flipVariations:E,allowedAutoPlacements:B}):e)}),[]),C=t.rects.reference,_=t.rects.popper,k=new Map,O=!0,j=$[0],M=0;M<$.length;M++){var S=$[M],R=(0,r.default)(S),F=(0,d.default)(S)===l.start,V=[l.top,l.bottom].indexOf(R)>=0,T=V?"width":"height",P=(0,a.default)(t,{placement:S,boundary:g,rootBoundary:h,altBoundary:x,padding:b}),N=V?F?l.right:l.left:F?l.bottom:l.top;C[T]>_[T]&&(N=(0,o.default)(N));var L=(0,o.default)(N),D=[];if(A&&D.push(P[R]<=0),u&&D.push(P[N]<=0,P[L]<=0),D.every((function(n){return n}))){j=S,O=!1;break}k.set(S,D)}if(O)for(var Q=function(n){var t=$.find((function(t){var e=k.get(t);if(e)return e.slice(0,n).every((function(n){return n}))}));if(t)return j=t,"break"},z=E?3:1;z>0;z--){if("break"===Q(z))break}t.placement!==j&&(t.modifiersData[c]._skip=!0,t.placement=j,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}}},"./node_modules/@popperjs/core/lib/modifiers/hide.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/enums.js"),r=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js");function i(n,t,e){return void 0===e&&(e={x:0,y:0}),{top:n.top-t.height-e.y,right:n.right-t.width+e.x,bottom:n.bottom-t.height+e.y,left:n.left-t.width-e.x}}function a(n){return[o.top,o.right,o.bottom,o.left].some((function(t){return n[t]>=0}))}t.default={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(n){var t=n.state,e=n.name,o=t.rects.reference,s=t.rects.popper,l=t.modifiersData.preventOverflow,d=(0,r.default)(t,{elementContext:"reference"}),c=(0,r.default)(t,{altBoundary:!0}),p=i(d,o),A=i(c,s,l),m=a(p),u=a(A);t.modifiersData[e]={referenceClippingOffsets:p,popperEscapeOffsets:A,isReferenceHidden:m,hasPopperEscaped:u},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":m,"data-popper-escaped":u})}}},"./node_modules/@popperjs/core/lib/modifiers/index.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{applyStyles:()=>o.default,arrow:()=>r.default,computeStyles:()=>i.default,eventListeners:()=>a.default,flip:()=>s.default,hide:()=>l.default,offset:()=>d.default,popperOffsets:()=>c.default,preventOverflow:()=>p.default});var o=e("./node_modules/@popperjs/core/lib/modifiers/applyStyles.js"),r=e("./node_modules/@popperjs/core/lib/modifiers/arrow.js"),i=e("./node_modules/@popperjs/core/lib/modifiers/computeStyles.js"),a=e("./node_modules/@popperjs/core/lib/modifiers/eventListeners.js"),s=e("./node_modules/@popperjs/core/lib/modifiers/flip.js"),l=e("./node_modules/@popperjs/core/lib/modifiers/hide.js"),d=e("./node_modules/@popperjs/core/lib/modifiers/offset.js"),c=e("./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"),p=e("./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js")},"./node_modules/@popperjs/core/lib/modifiers/offset.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{distanceAndSkiddingToXY:()=>i});var o=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),r=e("./node_modules/@popperjs/core/lib/enums.js");function i(n,t,e){var i=(0,o.default)(n),a=[r.left,r.top].indexOf(i)>=0?-1:1,s="function"==typeof e?e(Object.assign({},t,{placement:n})):e,l=s[0],d=s[1];return l=l||0,d=(d||0)*a,[r.left,r.right].indexOf(i)>=0?{x:d,y:l}:{x:l,y:d}}t.default={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(n){var t=n.state,e=n.options,o=n.name,a=e.offset,s=void 0===a?[0,0]:a,l=r.placements.reduce((function(n,e){return n[e]=i(e,t.rects,s),n}),{}),d=l[t.placement],c=d.x,p=d.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=c,t.modifiersData.popperOffsets.y+=p),t.modifiersData[o]=l}}},"./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/utils/computeOffsets.js");t.default={name:"popperOffsets",enabled:!0,phase:"read",fn:function(n){var t=n.state,e=n.name;t.modifiersData[e]=(0,o.default)({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}}},"./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/@popperjs/core/lib/enums.js"),r=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),i=e("./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js"),a=e("./node_modules/@popperjs/core/lib/utils/getAltAxis.js"),s=e("./node_modules/@popperjs/core/lib/utils/within.js"),l=e("./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"),d=e("./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"),c=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),p=e("./node_modules/@popperjs/core/lib/utils/getVariation.js"),A=e("./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js"),m=e("./node_modules/@popperjs/core/lib/utils/math.js");t.default={name:"preventOverflow",enabled:!0,phase:"main",fn:function(n){var t=n.state,e=n.options,u=n.name,f=e.mainAxis,b=void 0===f||f,g=e.altAxis,h=void 0!==g&&g,x=e.boundary,v=e.rootBoundary,E=e.altBoundary,B=e.padding,y=e.tether,w=void 0===y||y,I=e.tetherOffset,$=void 0===I?0:I,C=(0,c.default)(t,{boundary:x,rootBoundary:v,padding:B,altBoundary:E}),_=(0,r.default)(t.placement),k=(0,p.default)(t.placement),O=!k,j=(0,i.default)(_),M=(0,a.default)(j),S=t.modifiersData.popperOffsets,R=t.rects.reference,F=t.rects.popper,V="function"==typeof $?$(Object.assign({},t.rects,{placement:t.placement})):$,T="number"==typeof V?{mainAxis:V,altAxis:V}:Object.assign({mainAxis:0,altAxis:0},V),P=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,N={x:0,y:0};if(S){if(b){var L,D="y"===j?o.top:o.left,Q="y"===j?o.bottom:o.right,z="y"===j?"height":"width",q=S[j],U=q+C[D],G=q-C[Q],J=w?-F[z]/2:0,H=k===o.start?R[z]:F[z],K=k===o.start?-F[z]:-R[z],W=t.elements.arrow,Z=w&&W?(0,l.default)(W):{width:0,height:0},Y=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:(0,A.default)(),X=Y[D],nn=Y[Q],tn=(0,s.within)(0,R[z],Z[z]),en=O?R[z]/2-J-tn-X-T.mainAxis:H-tn-X-T.mainAxis,on=O?-R[z]/2+J+tn+nn+T.mainAxis:K+tn+nn+T.mainAxis,rn=t.elements.arrow&&(0,d.default)(t.elements.arrow),an=rn?"y"===j?rn.clientTop||0:rn.clientLeft||0:0,sn=null!=(L=null==P?void 0:P[j])?L:0,ln=q+en-sn-an,dn=q+on-sn,cn=(0,s.within)(w?(0,m.min)(U,ln):U,q,w?(0,m.max)(G,dn):G);S[j]=cn,N[j]=cn-q}if(h){var pn,An="x"===j?o.top:o.left,mn="x"===j?o.bottom:o.right,un=S[M],fn="y"===M?"height":"width",bn=un+C[An],gn=un-C[mn],hn=-1!==[o.top,o.left].indexOf(_),xn=null!=(pn=null==P?void 0:P[M])?pn:0,vn=hn?bn:un-R[fn]-F[fn]-xn+T.altAxis,En=hn?un+R[fn]+F[fn]-xn-T.altAxis:gn,Bn=w&&hn?(0,s.withinMaxClamp)(vn,un,En):(0,s.within)(w?vn:bn,un,w?En:gn);S[M]=Bn,N[M]=Bn-un}t.modifiersData[u]=N}},requiresIfExists:["offset"]}},"./node_modules/@popperjs/core/lib/popper-lite.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{createPopper:()=>c,defaultModifiers:()=>d,detectOverflow:()=>r.default,popperGenerator:()=>o.popperGenerator});var o=e("./node_modules/@popperjs/core/lib/createPopper.js"),r=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),i=e("./node_modules/@popperjs/core/lib/modifiers/eventListeners.js"),a=e("./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"),s=e("./node_modules/@popperjs/core/lib/modifiers/computeStyles.js"),l=e("./node_modules/@popperjs/core/lib/modifiers/applyStyles.js"),d=[i.default,a.default,s.default,l.default],c=(0,o.popperGenerator)({defaultModifiers:d})},"./node_modules/@popperjs/core/lib/popper.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{applyStyles:()=>f.applyStyles,arrow:()=>f.arrow,computeStyles:()=>f.computeStyles,createPopper:()=>g,createPopperLite:()=>u.createPopper,defaultModifiers:()=>b,detectOverflow:()=>r.default,eventListeners:()=>f.eventListeners,flip:()=>f.flip,hide:()=>f.hide,offset:()=>f.offset,popperGenerator:()=>o.popperGenerator,popperOffsets:()=>f.popperOffsets,preventOverflow:()=>f.preventOverflow});var o=e("./node_modules/@popperjs/core/lib/createPopper.js"),r=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),i=e("./node_modules/@popperjs/core/lib/modifiers/eventListeners.js"),a=e("./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"),s=e("./node_modules/@popperjs/core/lib/modifiers/computeStyles.js"),l=e("./node_modules/@popperjs/core/lib/modifiers/applyStyles.js"),d=e("./node_modules/@popperjs/core/lib/modifiers/offset.js"),c=e("./node_modules/@popperjs/core/lib/modifiers/flip.js"),p=e("./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js"),A=e("./node_modules/@popperjs/core/lib/modifiers/arrow.js"),m=e("./node_modules/@popperjs/core/lib/modifiers/hide.js"),u=e("./node_modules/@popperjs/core/lib/popper-lite.js"),f=e("./node_modules/@popperjs/core/lib/modifiers/index.js"),b=[i.default,a.default,s.default,l.default,d.default,c.default,p.default,A.default,m.default],g=(0,o.popperGenerator)({defaultModifiers:b})},"./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/utils/getVariation.js"),r=e("./node_modules/@popperjs/core/lib/enums.js"),i=e("./node_modules/@popperjs/core/lib/utils/detectOverflow.js"),a=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");function s(n,t){void 0===t&&(t={});var e=t,s=e.placement,l=e.boundary,d=e.rootBoundary,c=e.padding,p=e.flipVariations,A=e.allowedAutoPlacements,m=void 0===A?r.placements:A,u=(0,o.default)(s),f=u?p?r.variationPlacements:r.variationPlacements.filter((function(n){return(0,o.default)(n)===u})):r.basePlacements,b=f.filter((function(n){return m.indexOf(n)>=0}));0===b.length&&(b=f,console.error(["Popper: The `allowedAutoPlacements` option did not allow any","placements. Ensure the `placement` option matches the variation","of the allowed placements.",'For example, "auto" cannot be used to allow "bottom-start".','Use "auto-start" instead.'].join(" ")));var g=b.reduce((function(t,e){return t[e]=(0,i.default)(n,{placement:e,boundary:l,rootBoundary:d,padding:c})[(0,a.default)(e)],t}),{});return Object.keys(g).sort((function(n,t){return g[n]-g[t]}))}},"./node_modules/@popperjs/core/lib/utils/computeOffsets.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/utils/getBasePlacement.js"),r=e("./node_modules/@popperjs/core/lib/utils/getVariation.js"),i=e("./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js"),a=e("./node_modules/@popperjs/core/lib/enums.js");function s(n){var t,e=n.reference,s=n.element,l=n.placement,d=l?(0,o.default)(l):null,c=l?(0,r.default)(l):null,p=e.x+e.width/2-s.width/2,A=e.y+e.height/2-s.height/2;switch(d){case a.top:t={x:p,y:e.y-s.height};break;case a.bottom:t={x:p,y:e.y+e.height};break;case a.right:t={x:e.x+e.width,y:A};break;case a.left:t={x:e.x-s.width,y:A};break;default:t={x:e.x,y:e.y}}var m=d?(0,i.default)(d):null;if(null!=m){var u="y"===m?"height":"width";switch(c){case a.start:t[m]=t[m]-(e[u]/2-s[u]/2);break;case a.end:t[m]=t[m]+(e[u]/2-s[u]/2)}}return t}},"./node_modules/@popperjs/core/lib/utils/debounce.js":(n,t,e)=>{"use strict";function o(n){var t;return function(){return t||(t=new Promise((function(e){Promise.resolve().then((function(){t=void 0,e(n())}))}))),t}}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/detectOverflow.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>A});var o=e("./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js"),r=e("./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"),i=e("./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"),a=e("./node_modules/@popperjs/core/lib/utils/computeOffsets.js"),s=e("./node_modules/@popperjs/core/lib/utils/rectToClientRect.js"),l=e("./node_modules/@popperjs/core/lib/enums.js"),d=e("./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"),c=e("./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js"),p=e("./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");function A(n,t){void 0===t&&(t={});var e=t,A=e.placement,m=void 0===A?n.placement:A,u=e.strategy,f=void 0===u?n.strategy:u,b=e.boundary,g=void 0===b?l.clippingParents:b,h=e.rootBoundary,x=void 0===h?l.viewport:h,v=e.elementContext,E=void 0===v?l.popper:v,B=e.altBoundary,y=void 0!==B&&B,w=e.padding,I=void 0===w?0:w,$=(0,c.default)("number"!=typeof I?I:(0,p.default)(I,l.basePlacements)),C=E===l.popper?l.reference:l.popper,_=n.rects.popper,k=n.elements[y?C:E],O=(0,o.default)((0,d.isElement)(k)?k:k.contextElement||(0,r.default)(n.elements.popper),g,x,f),j=(0,i.default)(n.elements.reference),M=(0,a.default)({reference:j,element:_,strategy:"absolute",placement:m}),S=(0,s.default)(Object.assign({},_,M)),R=E===l.popper?S:j,F={top:O.top-R.top+$.top,bottom:R.bottom-O.bottom+$.bottom,left:O.left-R.left+$.left,right:R.right-O.right+$.right},V=n.modifiersData.offset;if(E===l.popper&&V){var T=V[m];Object.keys(F).forEach((function(n){var t=[l.right,l.bottom].indexOf(n)>=0?1:-1,e=[l.top,l.bottom].indexOf(n)>=0?"y":"x";F[n]+=T[e]*t}))}return F}},"./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":(n,t,e)=>{"use strict";function o(n,t){return t.reduce((function(t,e){return t[e]=n,t}),{})}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/format.js":(n,t,e)=>{"use strict";function o(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return[].concat(e).reduce((function(n,t){return n.replace(/%s/,t)}),n)}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/getAltAxis.js":(n,t,e)=>{"use strict";function o(n){return"x"===n?"y":"x"}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":(n,t,e)=>{"use strict";function o(n){return n.split("-")[0]}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":(n,t,e)=>{"use strict";function o(){return{top:0,right:0,bottom:0,left:0}}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":(n,t,e)=>{"use strict";function o(n){return["top","bottom"].indexOf(n)>=0?"x":"y"}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o={left:"right",right:"left",bottom:"top",top:"bottom"};function r(n){return n.replace(/left|right|bottom|top/g,(function(n){return o[n]}))}},"./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o={start:"end",end:"start"};function r(n){return n.replace(/start|end/g,(function(n){return o[n]}))}},"./node_modules/@popperjs/core/lib/utils/getVariation.js":(n,t,e)=>{"use strict";function o(n){return n.split("-")[1]}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/math.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{max:()=>o,min:()=>r,round:()=>i});var o=Math.max,r=Math.min,i=Math.round},"./node_modules/@popperjs/core/lib/utils/mergeByName.js":(n,t,e)=>{"use strict";function o(n){var t=n.reduce((function(n,t){var e=n[t.name];return n[t.name]=e?Object.assign({},e,t,{options:Object.assign({},e.options,t.options),data:Object.assign({},e.data,t.data)}):t,n}),{});return Object.keys(t).map((function(n){return t[n]}))}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});var o=e("./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");function r(n){return Object.assign({},(0,o.default)(),n)}},"./node_modules/@popperjs/core/lib/utils/orderModifiers.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>i});var o=e("./node_modules/@popperjs/core/lib/enums.js");function r(n){var t=new Map,e=new Set,o=[];function r(n){e.add(n.name),[].concat(n.requires||[],n.requiresIfExists||[]).forEach((function(n){if(!e.has(n)){var o=t.get(n);o&&r(o)}})),o.push(n)}return n.forEach((function(n){t.set(n.name,n)})),n.forEach((function(n){e.has(n.name)||r(n)})),o}function i(n){var t=r(n);return o.modifierPhases.reduce((function(n,e){return n.concat(t.filter((function(n){return n.phase===e})))}),[])}},"./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":(n,t,e)=>{"use strict";function o(n){return Object.assign({},n,{left:n.x,top:n.y,right:n.x+n.width,bottom:n.y+n.height})}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/uniqueBy.js":(n,t,e)=>{"use strict";function o(n,t){var e=new Set;return n.filter((function(n){var o=t(n);if(!e.has(o))return e.add(o),!0}))}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/userAgent.js":(n,t,e)=>{"use strict";function o(){var n=navigator.userAgentData;return null!=n&&n.brands?n.brands.map((function(n){return n.brand+"/"+n.version})).join(" "):navigator.userAgent}e.r(t),e.d(t,{default:()=>o})},"./node_modules/@popperjs/core/lib/utils/validateModifiers.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var o=e("./node_modules/@popperjs/core/lib/utils/format.js"),r=e("./node_modules/@popperjs/core/lib/enums.js"),i='Popper: modifier "%s" provided an invalid %s property, expected %s but got %s',a=["name","enabled","phase","fn","effect","requires","options"];function s(n){n.forEach((function(t){[].concat(Object.keys(t),a).filter((function(n,t,e){return e.indexOf(n)===t})).forEach((function(e){switch(e){case"name":"string"!=typeof t.name&&console.error((0,o.default)(i,String(t.name),'"name"','"string"','"'+String(t.name)+'"'));break;case"enabled":"boolean"!=typeof t.enabled&&console.error((0,o.default)(i,t.name,'"enabled"','"boolean"','"'+String(t.enabled)+'"'));break;case"phase":r.modifierPhases.indexOf(t.phase)<0&&console.error((0,o.default)(i,t.name,'"phase"',"either "+r.modifierPhases.join(", "),'"'+String(t.phase)+'"'));break;case"fn":"function"!=typeof t.fn&&console.error((0,o.default)(i,t.name,'"fn"','"function"','"'+String(t.fn)+'"'));break;case"effect":null!=t.effect&&"function"!=typeof t.effect&&console.error((0,o.default)(i,t.name,'"effect"','"function"','"'+String(t.fn)+'"'));break;case"requires":null==t.requires||Array.isArray(t.requires)||console.error((0,o.default)(i,t.name,'"requires"','"array"','"'+String(t.requires)+'"'));break;case"requiresIfExists":Array.isArray(t.requiresIfExists)||console.error((0,o.default)(i,t.name,'"requiresIfExists"','"array"','"'+String(t.requiresIfExists)+'"'));break;case"options":case"data":break;default:console.error('PopperJS: an invalid property has been provided to the "'+t.name+'" modifier, valid properties are '+a.map((function(n){return'"'+n+'"'})).join(", ")+'; but "'+e+'" was provided.')}t.requires&&t.requires.forEach((function(e){null==n.find((function(n){return n.name===e}))&&console.error((0,o.default)('Popper: modifier "%s" requires "%s", but "%s" modifier is not available',String(t.name),e,e))}))}))}))}},"./node_modules/@popperjs/core/lib/utils/within.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{within:()=>r,withinMaxClamp:()=>i});var o=e("./node_modules/@popperjs/core/lib/utils/math.js");function r(n,t,e){return(0,o.max)(n,(0,o.min)(t,e))}function i(n,t,e){var o=r(n,t,e);return o>e?e:o}},"./node_modules/@shin-chan/kypes/src/index.js":n=>{n.exports={}},"./node_modules/axios/index.js":(n,t,e)=>{n.exports=e("./node_modules/axios/lib/axios.js")},"./node_modules/axios/lib/adapters/xhr.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/core/settle.js"),i=e("./node_modules/axios/lib/helpers/cookies.js"),a=e("./node_modules/axios/lib/helpers/buildURL.js"),s=e("./node_modules/axios/lib/core/buildFullPath.js"),l=e("./node_modules/axios/lib/helpers/parseHeaders.js"),d=e("./node_modules/axios/lib/helpers/isURLSameOrigin.js"),c=e("./node_modules/axios/lib/core/createError.js"),p=e("./node_modules/axios/lib/defaults/transitional.js"),A=e("./node_modules/axios/lib/cancel/Cancel.js");n.exports=function(n){return new Promise((function(t,e){var m,u=n.data,f=n.headers,b=n.responseType;function g(){n.cancelToken&&n.cancelToken.unsubscribe(m),n.signal&&n.signal.removeEventListener("abort",m)}o.isFormData(u)&&delete f["Content-Type"];var h=new XMLHttpRequest;if(n.auth){var x=n.auth.username||"",v=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";f.Authorization="Basic "+btoa(x+":"+v)}var E=s(n.baseURL,n.url);function B(){if(h){var o="getAllResponseHeaders"in h?l(h.getAllResponseHeaders()):null,i={data:b&&"text"!==b&&"json"!==b?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:o,config:n,request:h};r((function(n){t(n),g()}),(function(n){e(n),g()}),i),h=null}}if(h.open(n.method.toUpperCase(),a(E,n.params,n.paramsSerializer),!0),h.timeout=n.timeout,"onloadend"in h?h.onloadend=B:h.onreadystatechange=function(){h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))&&setTimeout(B)},h.onabort=function(){h&&(e(c("Request aborted",n,"ECONNABORTED",h)),h=null)},h.onerror=function(){e(c("Network Error",n,null,h)),h=null},h.ontimeout=function(){var t=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded",o=n.transitional||p;n.timeoutErrorMessage&&(t=n.timeoutErrorMessage),e(c(t,n,o.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",h)),h=null},o.isStandardBrowserEnv()){var y=(n.withCredentials||d(E))&&n.xsrfCookieName?i.read(n.xsrfCookieName):void 0;y&&(f[n.xsrfHeaderName]=y)}"setRequestHeader"in h&&o.forEach(f,(function(n,t){void 0===u&&"content-type"===t.toLowerCase()?delete f[t]:h.setRequestHeader(t,n)})),o.isUndefined(n.withCredentials)||(h.withCredentials=!!n.withCredentials),b&&"json"!==b&&(h.responseType=n.responseType),"function"==typeof n.onDownloadProgress&&h.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&h.upload&&h.upload.addEventListener("progress",n.onUploadProgress),(n.cancelToken||n.signal)&&(m=function(n){h&&(e(!n||n&&n.type?new A("canceled"):n),h.abort(),h=null)},n.cancelToken&&n.cancelToken.subscribe(m),n.signal&&(n.signal.aborted?m():n.signal.addEventListener("abort",m))),u||(u=null),h.send(u)}))}},"./node_modules/axios/lib/axios.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/helpers/bind.js"),i=e("./node_modules/axios/lib/core/Axios.js"),a=e("./node_modules/axios/lib/core/mergeConfig.js");var s=function n(t){var e=new i(t),s=r(i.prototype.request,e);return o.extend(s,i.prototype,e),o.extend(s,e),s.create=function(e){return n(a(t,e))},s}(e("./node_modules/axios/lib/defaults/index.js"));s.Axios=i,s.Cancel=e("./node_modules/axios/lib/cancel/Cancel.js"),s.CancelToken=e("./node_modules/axios/lib/cancel/CancelToken.js"),s.isCancel=e("./node_modules/axios/lib/cancel/isCancel.js"),s.VERSION=e("./node_modules/axios/lib/env/data.js").version,s.all=function(n){return Promise.all(n)},s.spread=e("./node_modules/axios/lib/helpers/spread.js"),s.isAxiosError=e("./node_modules/axios/lib/helpers/isAxiosError.js"),n.exports=s,n.exports.default=s},"./node_modules/axios/lib/cancel/Cancel.js":n=>{"use strict";function t(n){this.message=n}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,n.exports=t},"./node_modules/axios/lib/cancel/CancelToken.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/cancel/Cancel.js");function r(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(n){t=n}));var e=this;this.promise.then((function(n){if(e._listeners){var t,o=e._listeners.length;for(t=0;t<o;t++)e._listeners[t](n);e._listeners=null}})),this.promise.then=function(n){var t,o=new Promise((function(n){e.subscribe(n),t=n})).then(n);return o.cancel=function(){e.unsubscribe(t)},o},n((function(n){e.reason||(e.reason=new o(n),t(e.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.prototype.subscribe=function(n){this.reason?n(this.reason):this._listeners?this._listeners.push(n):this._listeners=[n]},r.prototype.unsubscribe=function(n){if(this._listeners){var t=this._listeners.indexOf(n);-1!==t&&this._listeners.splice(t,1)}},r.source=function(){var n;return{token:new r((function(t){n=t})),cancel:n}},n.exports=r},"./node_modules/axios/lib/cancel/isCancel.js":n=>{"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},"./node_modules/axios/lib/core/Axios.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/helpers/buildURL.js"),i=e("./node_modules/axios/lib/core/InterceptorManager.js"),a=e("./node_modules/axios/lib/core/dispatchRequest.js"),s=e("./node_modules/axios/lib/core/mergeConfig.js"),l=e("./node_modules/axios/lib/helpers/validator.js"),d=l.validators;function c(n){this.defaults=n,this.interceptors={request:new i,response:new i}}c.prototype.request=function(n,t){"string"==typeof n?(t=t||{}).url=n:t=n||{},(t=s(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=t.transitional;void 0!==e&&l.assertOptions(e,{silentJSONParsing:d.transitional(d.boolean),forcedJSONParsing:d.transitional(d.boolean),clarifyTimeoutError:d.transitional(d.boolean)},!1);var o=[],r=!0;this.interceptors.request.forEach((function(n){"function"==typeof n.runWhen&&!1===n.runWhen(t)||(r=r&&n.synchronous,o.unshift(n.fulfilled,n.rejected))}));var i,c=[];if(this.interceptors.response.forEach((function(n){c.push(n.fulfilled,n.rejected)})),!r){var p=[a,void 0];for(Array.prototype.unshift.apply(p,o),p=p.concat(c),i=Promise.resolve(t);p.length;)i=i.then(p.shift(),p.shift());return i}for(var A=t;o.length;){var m=o.shift(),u=o.shift();try{A=m(A)}catch(n){u(n);break}}try{i=a(A)}catch(n){return Promise.reject(n)}for(;c.length;)i=i.then(c.shift(),c.shift());return i},c.prototype.getUri=function(n){return n=s(this.defaults,n),r(n.url,n.params,n.paramsSerializer).replace(/^\?/,"")},o.forEach(["delete","get","head","options"],(function(n){c.prototype[n]=function(t,e){return this.request(s(e||{},{method:n,url:t,data:(e||{}).data}))}})),o.forEach(["post","put","patch"],(function(n){c.prototype[n]=function(t,e,o){return this.request(s(o||{},{method:n,url:t,data:e}))}})),n.exports=c},"./node_modules/axios/lib/core/InterceptorManager.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");function r(){this.handlers=[]}r.prototype.use=function(n,t,e){return this.handlers.push({fulfilled:n,rejected:t,synchronous:!!e&&e.synchronous,runWhen:e?e.runWhen:null}),this.handlers.length-1},r.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},r.prototype.forEach=function(n){o.forEach(this.handlers,(function(t){null!==t&&n(t)}))},n.exports=r},"./node_modules/axios/lib/core/buildFullPath.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/helpers/isAbsoluteURL.js"),r=e("./node_modules/axios/lib/helpers/combineURLs.js");n.exports=function(n,t){return n&&!o(t)?r(n,t):t}},"./node_modules/axios/lib/core/createError.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/core/enhanceError.js");n.exports=function(n,t,e,r,i){var a=new Error(n);return o(a,t,e,r,i)}},"./node_modules/axios/lib/core/dispatchRequest.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/core/transformData.js"),i=e("./node_modules/axios/lib/cancel/isCancel.js"),a=e("./node_modules/axios/lib/defaults/index.js"),s=e("./node_modules/axios/lib/cancel/Cancel.js");function l(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new s("canceled")}n.exports=function(n){return l(n),n.headers=n.headers||{},n.data=r.call(n,n.data,n.headers,n.transformRequest),n.headers=o.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),o.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete n.headers[t]})),(n.adapter||a.adapter)(n).then((function(t){return l(n),t.data=r.call(n,t.data,t.headers,n.transformResponse),t}),(function(t){return i(t)||(l(n),t&&t.response&&(t.response.data=r.call(n,t.response.data,t.response.headers,n.transformResponse))),Promise.reject(t)}))}},"./node_modules/axios/lib/core/enhanceError.js":n=>{"use strict";n.exports=function(n,t,e,o,r){return n.config=t,e&&(n.code=e),n.request=o,n.response=r,n.isAxiosError=!0,n.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},n}},"./node_modules/axios/lib/core/mergeConfig.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");n.exports=function(n,t){t=t||{};var e={};function r(n,t){return o.isPlainObject(n)&&o.isPlainObject(t)?o.merge(n,t):o.isPlainObject(t)?o.merge({},t):o.isArray(t)?t.slice():t}function i(e){return o.isUndefined(t[e])?o.isUndefined(n[e])?void 0:r(void 0,n[e]):r(n[e],t[e])}function a(n){if(!o.isUndefined(t[n]))return r(void 0,t[n])}function s(e){return o.isUndefined(t[e])?o.isUndefined(n[e])?void 0:r(void 0,n[e]):r(void 0,t[e])}function l(e){return e in t?r(n[e],t[e]):e in n?r(void 0,n[e]):void 0}var d={url:a,method:a,data:a,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:l};return o.forEach(Object.keys(n).concat(Object.keys(t)),(function(n){var t=d[n]||i,r=t(n);o.isUndefined(r)&&t!==l||(e[n]=r)})),e}},"./node_modules/axios/lib/core/settle.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/core/createError.js");n.exports=function(n,t,e){var r=e.config.validateStatus;e.status&&r&&!r(e.status)?t(o("Request failed with status code "+e.status,e.config,null,e.request,e)):n(e)}},"./node_modules/axios/lib/core/transformData.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/defaults/index.js");n.exports=function(n,t,e){var i=this||r;return o.forEach(e,(function(e){n=e.call(i,n,t)})),n}},"./node_modules/axios/lib/defaults/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=e("./node_modules/axios/lib/helpers/normalizeHeaderName.js"),i=e("./node_modules/axios/lib/core/enhanceError.js"),a=e("./node_modules/axios/lib/defaults/transitional.js"),s={"Content-Type":"application/x-www-form-urlencoded"};function l(n,t){!o.isUndefined(n)&&o.isUndefined(n["Content-Type"])&&(n["Content-Type"]=t)}var d,c={transitional:a,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(d=e("./node_modules/axios/lib/adapters/xhr.js")),d),transformRequest:[function(n,t){return r(t,"Accept"),r(t,"Content-Type"),o.isFormData(n)||o.isArrayBuffer(n)||o.isBuffer(n)||o.isStream(n)||o.isFile(n)||o.isBlob(n)?n:o.isArrayBufferView(n)?n.buffer:o.isURLSearchParams(n)?(l(t,"application/x-www-form-urlencoded;charset=utf-8"),n.toString()):o.isObject(n)||t&&"application/json"===t["Content-Type"]?(l(t,"application/json"),function(n,t,e){if(o.isString(n))try{return(t||JSON.parse)(n),o.trim(n)}catch(n){if("SyntaxError"!==n.name)throw n}return(e||JSON.stringify)(n)}(n)):n}],transformResponse:[function(n){var t=this.transitional||c.transitional,e=t&&t.silentJSONParsing,r=t&&t.forcedJSONParsing,a=!e&&"json"===this.responseType;if(a||r&&o.isString(n)&&n.length)try{return JSON.parse(n)}catch(n){if(a){if("SyntaxError"===n.name)throw i(n,this,"E_JSON_PARSE");throw n}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(n){return n>=200&&n<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};o.forEach(["delete","get","head"],(function(n){c.headers[n]={}})),o.forEach(["post","put","patch"],(function(n){c.headers[n]=o.merge(s)})),n.exports=c},"./node_modules/axios/lib/defaults/transitional.js":n=>{"use strict";n.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},"./node_modules/axios/lib/env/data.js":n=>{n.exports={version:"0.26.1"}},"./node_modules/axios/lib/helpers/bind.js":n=>{"use strict";n.exports=function(n,t){return function(){for(var e=new Array(arguments.length),o=0;o<e.length;o++)e[o]=arguments[o];return n.apply(t,e)}}},"./node_modules/axios/lib/helpers/buildURL.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");function r(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,t,e){if(!t)return n;var i;if(e)i=e(t);else if(o.isURLSearchParams(t))i=t.toString();else{var a=[];o.forEach(t,(function(n,t){null!=n&&(o.isArray(n)?t+="[]":n=[n],o.forEach(n,(function(n){o.isDate(n)?n=n.toISOString():o.isObject(n)&&(n=JSON.stringify(n)),a.push(r(t)+"="+r(n))})))})),i=a.join("&")}if(i){var s=n.indexOf("#");-1!==s&&(n=n.slice(0,s)),n+=(-1===n.indexOf("?")?"?":"&")+i}return n}},"./node_modules/axios/lib/helpers/combineURLs.js":n=>{"use strict";n.exports=function(n,t){return t?n.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):n}},"./node_modules/axios/lib/helpers/cookies.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");n.exports=o.isStandardBrowserEnv()?{write:function(n,t,e,r,i,a){var s=[];s.push(n+"="+encodeURIComponent(t)),o.isNumber(e)&&s.push("expires="+new Date(e).toGMTString()),o.isString(r)&&s.push("path="+r),o.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(n){var t=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},"./node_modules/axios/lib/helpers/isAbsoluteURL.js":n=>{"use strict";n.exports=function(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}},"./node_modules/axios/lib/helpers/isAxiosError.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");n.exports=function(n){return o.isObject(n)&&!0===n.isAxiosError}},"./node_modules/axios/lib/helpers/isURLSameOrigin.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");n.exports=o.isStandardBrowserEnv()?function(){var n,t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a");function r(n){var o=n;return t&&(e.setAttribute("href",o),o=e.href),e.setAttribute("href",o),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\?/,""):"",hash:e.hash?e.hash.replace(/^#/,""):"",hostname:e.hostname,port:e.port,pathname:"/"===e.pathname.charAt(0)?e.pathname:"/"+e.pathname}}return n=r(window.location.href),function(t){var e=o.isString(t)?r(t):t;return e.protocol===n.protocol&&e.host===n.host}}():function(){return!0}},"./node_modules/axios/lib/helpers/normalizeHeaderName.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js");n.exports=function(n,t){o.forEach(n,(function(e,o){o!==t&&o.toUpperCase()===t.toUpperCase()&&(n[t]=e,delete n[o])}))}},"./node_modules/axios/lib/helpers/parseHeaders.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/utils.js"),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var t,e,i,a={};return n?(o.forEach(n.split("\n"),(function(n){if(i=n.indexOf(":"),t=o.trim(n.substr(0,i)).toLowerCase(),e=o.trim(n.substr(i+1)),t){if(a[t]&&r.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([e]):a[t]?a[t]+", "+e:e}})),a):a}},"./node_modules/axios/lib/helpers/spread.js":n=>{"use strict";n.exports=function(n){return function(t){return n.apply(null,t)}}},"./node_modules/axios/lib/helpers/validator.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/env/data.js").version,r={};["object","boolean","number","function","string","symbol"].forEach((function(n,t){r[n]=function(e){return typeof e===n||"a"+(t<1?"n ":" ")+n}}));var i={};r.transitional=function(n,t,e){function r(n,t){return"[Axios v"+o+"] Transitional option '"+n+"'"+t+(e?". "+e:"")}return function(e,o,a){if(!1===n)throw new Error(r(o," has been removed"+(t?" in "+t:"")));return t&&!i[o]&&(i[o]=!0,console.warn(r(o," has been deprecated since v"+t+" and will be removed in the near future"))),!n||n(e,o,a)}},n.exports={assertOptions:function(n,t,e){if("object"!=typeof n)throw new TypeError("options must be an object");for(var o=Object.keys(n),r=o.length;r-- >0;){var i=o[r],a=t[i];if(a){var s=n[i],l=void 0===s||a(s,i,n);if(!0!==l)throw new TypeError("option "+i+" must be "+l)}else if(!0!==e)throw Error("Unknown option "+i)}},validators:r}},"./node_modules/axios/lib/utils.js":(n,t,e)=>{"use strict";var o=e("./node_modules/axios/lib/helpers/bind.js"),r=Object.prototype.toString;function i(n){return Array.isArray(n)}function a(n){return void 0===n}function s(n){return"[object ArrayBuffer]"===r.call(n)}function l(n){return null!==n&&"object"==typeof n}function d(n){if("[object Object]"!==r.call(n))return!1;var t=Object.getPrototypeOf(n);return null===t||t===Object.prototype}function c(n){return"[object Function]"===r.call(n)}function p(n,t){if(null!=n)if("object"!=typeof n&&(n=[n]),i(n))for(var e=0,o=n.length;e<o;e++)t.call(null,n[e],e,n);else for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.call(null,n[r],r,n)}n.exports={isArray:i,isArrayBuffer:s,isBuffer:function(n){return null!==n&&!a(n)&&null!==n.constructor&&!a(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){return"[object FormData]"===r.call(n)},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&s(n.buffer)},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:l,isPlainObject:d,isUndefined:a,isDate:function(n){return"[object Date]"===r.call(n)},isFile:function(n){return"[object File]"===r.call(n)},isBlob:function(n){return"[object Blob]"===r.call(n)},isFunction:c,isStream:function(n){return l(n)&&c(n.pipe)},isURLSearchParams:function(n){return"[object URLSearchParams]"===r.call(n)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:p,merge:function n(){var t={};function e(e,o){d(t[o])&&d(e)?t[o]=n(t[o],e):d(e)?t[o]=n({},e):i(e)?t[o]=e.slice():t[o]=e}for(var o=0,r=arguments.length;o<r;o++)p(arguments[o],e);return t},extend:function(n,t,e){return p(t,(function(t,r){n[r]=e&&"function"==typeof t?o(t,e):t})),n},trim:function(n){return n.trim?n.trim():n.replace(/^\s+|\s+$/g,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n}}},"./src/ts/config/settings.ts":(n,t,e)=>{"use strict";e.r(t),e.d(t,{Settings:()=>a});var o=e("../lib/KintoneConfigBuilder.ts/dist/index.js"),r=e("./src/ts/constants.ts");function i(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}class a{}i(a,"preference",{title:"ChatGPT連携プラグインの設定",description:""}),i(a,"input",[{label:"OpenAI APIの設定",desc:"API呼び出しに必要な項目を指定します。",type:o.FieldType.Label},{label:"API key",desc:"API keyを指定してください。インデキシングにもここで指定したAPI Keyを利用します。",code:r.CONSTANTS.API_KEY,type:o.FieldType.Text,required:!0,secret:!0,URL:["https://api.openai.com/v1/chat/completions","https://api.openai.com/v1/embeddings"],method:"POST",header:"Authorization Bearer"},{label:"ChatGPTの利用モデル",desc:'利用モデル名を入力してください。デフォルトは "gpt-3.5-turbo" です。',code:r.CONSTANTS.MODEL_ID,type:o.FieldType.Text,default:"gpt-3.5-turbo",required:!0},{label:"MAX Tokens",desc:"レスポンスの最大トークン長を指定してください。",code:r.CONSTANTS.NUMBER_MAX_TOKENS,type:o.FieldType.Number,default:"1024",required:!0},{label:"役割プロンプト(system)",desc:"ChatGPTの役割を与えます。あなたはカウンセラーです。のような役割をプロンプトしてください。",code:r.CONSTANTS.SYSTEM_PROMPT,type:o.FieldType.MultilineText,rows:3,cols:50,required:!1},{label:"対話例プロンプト(user / assistant)",desc:"会話の例をChatGPTに教えます。この項目が長くなる場合はMAX Tokensの値を増やしてください。",code:r.CONSTANTS.TABLE_FEWSHOTS_PROMPT,type:o.FieldType.IncrementalTable,required:!1,table_cols:[{header:r.CONSTANTS.TABLE_FEWSHOTS.role,type:o.FieldType.Dropdown,accept:["user","assistant"]},{header:r.CONSTANTS.TABLE_FEWSHOTS.content,type:o.FieldType.MultilineText}]},{label:"",desc:"==============================================",type:o.FieldType.Separator},{label:"kintoneのフィールド設定",desc:"ChatGPTに問い合わせる入力フィールドと、回答を出力する出力フィールド、実行ボタン配置用のスペースIDを設定します。",type:o.FieldType.Label},{label:"入力フィールド選択",desc:"入力として使用するフィールドを選択してください",code:r.CONSTANTS.INPUT_FIELD,type:o.FieldType.Dropdown_FieldSelect,accept:["SINGLE_LINE_TEXT","MULTI_LINE_TEXT"],required:!0},{label:"出力フィールド選択",desc:"ChatGPTの返答を入力するフィールドを選択してください。",code:r.CONSTANTS.OUTPUT_FIELD,type:o.FieldType.Dropdown_FieldSelect,accept:["MULTI_LINE_TEXT"],required:!0},{label:"実行ボタン配置スペース選択",desc:"API呼び出しボタンを配置するスペースを選択してください。スペースにIDを指定していない場合、リストに出てこないのでご注意ください。",code:r.CONSTANTS.BTN_SPACE_FIELD,type:o.FieldType.Dropdown_FieldSelect,accept:["SPACER"],required:!0},{label:"",desc:"==============================================",type:o.FieldType.Separator},{label:"embedding設定",desc:"embedding機能を利用する際の設定項目です。通常は設定不要です。利用方法については、キン担ラボまでお問い合わせください。",type:o.FieldType.Label},{label:"インデキシングアプリID",desc:"ベクトル情報を格納しているアプリのIDを指定してください。",code:r.CONSTANTS.APPID_INDEXING,type:o.FieldType.Number,required:!1},{label:"インデキシングモデル指定",desc:'インデキシングに利用するモデル名を入力してください。デフォルトは "text-embedding-ada-002" です。',code:r.CONSTANTS.INDEXING_MODEL_ID,type:o.FieldType.Text,default:"text-embedding-ada-002",required:!1},{label:"ベクトル情報格納フィールドの指定",desc:"インデキシングアプリの中でベクトル情報を格納している複数行テキストをフィールドコードで指定してください。",code:r.CONSTANTS.FIELDCODE_VECTORIZED,type:o.FieldType.Text,required:!1}])},"./src/ts/constants.ts":(n,t,e)=>{"use strict";e.r(t),e.d(t,{CONSTANTS:()=>o});const o={PLUGIN_NAME:"ChatGPT連携プラグイン",EMPTY_LABEL:"----",API_KEY:"api_key",MODEL_ID:"model_id",STATIC_PROMPT:"static_prompt",UNIQUE_PROMPT:"unique_prompt",INPUT_FIELD:"input_field",OUTPUT_FIELD:"output_field",BTN_SPACE_FIELD:"btn_space_field",NUMBER_MAX_TOKENS:"NUMBER_MAX_TOKENS",SYSTEM_PROMPT:"system_prompt",TABLE_FEWSHOTS_PROMPT:"table_fewshot_prompt",TABLE_FEWSHOTS:{role:"役割",content:"プロンプト"},APPID_INDEXING:"appid_indexing",EMBEDDING_API_KEY:"embedding_api_key",INDEXING_MODEL_ID:"indexigin_model_id",FIELDCODE_VECTORIZED:"fieldcode_vectorized"}},"./src/ts/desktop/chatgpt_connector.ts":(n,t,e)=>{"use strict";e.r(t),e.d(t,{ChatGPTConnector:()=>l});var o=e("./src/ts/constants.ts"),r=(e("./node_modules/bootstrap/dist/js/bootstrap.esm.js"),e("./src/scss/style.scss"),e("./node_modules/kintoneplugin-commonutils/dist/index.js")),i=e("./node_modules/@kintone/rest-api-client/lib/index.browser.js"),a=(e("./node_modules/@shin-chan/kypes/src/index.js"),e("./src/ts/desktop/embedding_controller.ts"));function s(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}class l{constructor(n){s(this,"BUTTON_LABEL","ChatGPTに聞く"),s(this,"conf",void 0),s(this,"plugin_id",void 0),s(this,"static_prompt",void 0),s(this,"fc_unique_prompt",void 0),s(this,"fc_input_field",void 0),s(this,"fc_output_field",void 0),s(this,"space_btn_field",void 0),s(this,"model_id",void 0),s(this,"api_endpoint",void 0),s(this,"flag_record_modifier",void 0),s(this,"max_tokens","256"),s(this,"system_prompt",void 0),s(this,"messages",void 0),s(this,"appid_indexing",void 0),s(this,"indexing_model_id",void 0),s(this,"fieldcode_vectorized",void 0),s(this,"run",(async()=>{if(console.log("call chatGPT!"),this.showSpinner(),null==this.fc_input_field)return void console.error("必須設定に undefined が残っています。/ fc_input_field: ".concat(this.fc_input_field));const n=(n=>{if(this.flag_record_modifier){const n=kintone.app.record.get();return console.log("---- mode: record modifier"),JSON.stringify(n)}return this.getFieldContent(this.fc_input_field)})();this.request(n).then((n=>{if(console.log({response:n}),null!=this.fc_output_field)if(this.flag_record_modifier){if(console.log({response:n}),null==n)throw new Error("ChatGPTConnector.run(): response is empty!");const t=JSON.parse(n[0]);kintone.app.record.set(t)}else{const t=JSON.parse(n[0]);let e;e="choices"in t&&t.choices.length>0&&"message"in t.choices[0]?t.choices[0].message.content:n[0],this.setFieldContent(this.fc_output_field,e.replace(/^\n+/,""))}})).finally((()=>{this.hideSpinner()}))})),this.flag_record_modifier=!1,this.conf=void 0,this.loadConfig(n),this.api_endpoint="https://api.openai.com/v1"}setup(n){this.setButton(this.space_btn_field),this.plugin_id=n}loadConfig(n){console.log(n),this.conf=n,this.static_prompt=n[o.CONSTANTS.STATIC_PROMPT],this.fc_unique_prompt=n[o.CONSTANTS.UNIQUE_PROMPT],this.fc_input_field=n[o.CONSTANTS.INPUT_FIELD],this.fc_output_field=n[o.CONSTANTS.OUTPUT_FIELD],this.space_btn_field=n[o.CONSTANTS.BTN_SPACE_FIELD],this.max_tokens=null==n[o.CONSTANTS.NUMBER_MAX_TOKENS]?"256":n[o.CONSTANTS.NUMBER_MAX_TOKENS],this.model_id=n[o.CONSTANTS.MODEL_ID],this.system_prompt=n[o.CONSTANTS.SYSTEM_PROMPT],this.messages=n[o.CONSTANTS.TABLE_FEWSHOTS_PROMPT],this.appid_indexing=n[o.CONSTANTS.APPID_INDEXING],console.log(this.appid_indexing),this.indexing_model_id=n[o.CONSTANTS.INDEXING_MODEL_ID],this.fieldcode_vectorized=n[o.CONSTANTS.FIELDCODE_VECTORIZED]}setButton(n){if(null==n)return;const t=kintone.app.record.getSpaceElement(n),e=r.Utils.buildElement({tagName:"button",className:"btn btn-primary",attrs:{id:"button_request",type:"button"},textContent:this.BUTTON_LABEL});e.addEventListener("click",this.run),null==t||t.appendChild(e)}getFieldContent(n){const t=kintone.app.record.get();if(null==t)throw new Error("レコード情報が取得できません。");console.log({record:t});const e=t.record[n].value;return console.log({text:e}),e}setFieldContent(n,t){const e=kintone.app.record.get();e.record[n].value=t,kintone.app.record.set(e)}request(n){if(console.log({prompt:n}),null==this.plugin_id)throw new Error("プラグインIDが未定です");const t=this.plugin_id,e=this.api_endpoint+"/chat/completions",o={"Content-Type":"application/json"};if(null==this.model_id||""==this.model_id)throw new Error("指定されたChatGPTのモデル名[".concat(this.model_id,"]が不適切です。"));return this.getEmbeddings(this.appid_indexing,this.indexing_model_id,this.fieldcode_vectorized,n).then((n=>{const r=this.composeMessages(this.system_prompt,this.messages,n),i={model:this.model_id,messages:r};return console.log({data:i}),kintone.plugin.app.proxy(t,e,"POST",o,i)}))}getEmbeddings(n,t,e){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";if(null==n||null==t)return console.warn("getEmbeddings(): embedせずに実行します。(appid:".concat(n,", model:").concat(t,")")),Promise.resolve(o);if(null==e)throw new Error("getEmbeddings(): ベクトル格納フィールドが未指定です。");const r=this.getEmbeddedPrompt(n,o,3);return Promise.resolve(r)}async getEmbeddedPrompt(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3;console.log({appid:n}),console.log({query_vector:t}),console.log({embed_count:e});return[await this.getAllRecords(n).then((o=>{if(console.log(o),null==this.plugin_id)throw new Error("getKnowledgesFromIndexingApp(): プラグインIDが未定義のままProxyを呼び出そうとしました。");const r=new a.EmbeddingController(null);r.setProxyInfo(this.plugin_id);const i=o.map((o=>{if(null!=this.fieldcode_vectorized&&this.fieldcode_vectorized in o){const n=JSON.parse(o[this.fieldcode_vectorized].value);return console.log({vectors:n}),r.pickupEmbeddings(t,n,e)}throw new Error("指定したフィールド[".concat(this.fieldcode_vectorized,"]が指定したアプリ[").concat(n,"]に存在しませんでした。設定を見直してください。"))}));return Promise.all(i)})).then((n=>{const t=n.map((n=>n.join("\n"))).join("\n\n====\n\n");return Promise.resolve(t)})),t].join("\n\n====\n\n")}async getAllRecords(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"500";const o=new i.KintoneRestAPIClient,r=[];let a=!0,s="0";for(;a;){const i={app:n,query:((n,t)=>t?"".concat(t," and $id > ").concat(n," order by $id asc limit ").concat(e):"$id > ".concat(n," order by $id asc limit ").concat(e))(s,t),totalCount:!0},l=await o.record.getRecords(i),{records:d,totalCount:c}=l;if(console.log({records:d}),console.log({totalCount:c}),null==c)throw new Error("getAllRecords(): totalCount に null が返りました。");if(r.push(...d),0==parseInt(c)){a=!1;continue}s=d[d.length-1].$id.value}return r}composeMessages(n,t,e){null==n&&(n=""),null==t&&(t=[]);return[{role:"system",content:n},...t.map((n=>({role:n[o.CONSTANTS.TABLE_FEWSHOTS.role],content:n[o.CONSTANTS.TABLE_FEWSHOTS.content]}))),{role:"user",content:e}]}showSpinner(){if(console.log("show spinner"),0===document.getElementsByClassName("kintone-spinner").length){const n=r.Utils.buildElement({tagName:"div",className:"spinner-grow text-primary kintone-spinner",attrs:{role:"status",id:"spinner_in_button","aria-hidden":"true",style:"position: fixed; top: 50%; left: 50%; z-index: 510;"}}),t=r.Utils.buildElement({tagName:"div",className:"kintone-spinner",attrs:{id:"kintone-spin-bg",style:"position: fixed; top: 0px; left: 0px; z-index: 500; width: 100%; height: 200%; background-color: #000; opacity: 0.5; filter: alpha(opacity=50); -ms-filter: alpha(opacity=50)"}});document.getElementsByTagName("body")[0].append(n,t)}const n=document.getElementsByClassName("kintone-spinner");Array.from(n).forEach((n=>{n.style.display="block"}))}hideSpinner(){console.log("hide spinner");const n=document.getElementsByClassName("kintone-spinner");Array.from(n).forEach((n=>{n.style.display="none"}))}}},"./src/ts/desktop/embedding_controller.ts":(n,t,e)=>{"use strict";e.r(t),e.d(t,{EmbeddingController:()=>i});var o=e("./node_modules/openai/dist/index.js");function r(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}class i{constructor(n){r(this,"knowledges",void 0),r(this,"openai",void 0),r(this,"configuration",void 0),r(this,"model_vectorize","text-embedding-ada-002"),r(this,"pluginId",void 0),r(this,"endpoint","https://api.openai.com/v1/embeddings"),null!=n&&(this.configuration=new o.Configuration({apiKey:n}),this.openai=new o.OpenAIApi(this.configuration))}setProxyInfo(n){this.pluginId=n}async setSentences(n){if(null==n)throw new Error("センテンスにundefinedが渡されました。");this.knowledges=await this.createVector(n)}setKnowledges(n){if(null==n)throw new Error("知識にundefinedが渡されました");this.knowledges=n}appendKnowledges(n){if(null==n)throw new Error("知識にundefinedが渡されました");null==this.knowledges?this.knowledges=n:this.knowledges.push(...n)}async vectorize(n){return null!=this.openai?this.vectorizeByOpenAI(n):this.vectorizeByRestAPI(n)}vectorizeByRestAPI(n){if(console.log({searchquery:n}),null==this.pluginId)throw new Error("vectorizeByRestAPI(): プラグインIDが未定です");const t=this.pluginId,e=this.endpoint;if(null==this.model_vectorize||""==this.model_vectorize)throw new Error("指定されたChatGPTのモデル名[".concat(this.model_vectorize,"]が不適切です。"));const o={model:this.model_vectorize,input:n};return console.log({data:o}),kintone.plugin.app.proxy(t,e,"POST",{"Content-Type":"application/json"},o).then((n=>{console.log({response:n});const t=JSON.parse(n[0]);console.log({result:t});const e=t.data[0].embedding;return Promise.resolve(e)}))}async vectorizeByOpenAI(n){if(null==this.openai)throw new Error("OpenAI APIが初期化されていません。");try{const t=await this.openai.createEmbedding({model:this.model_vectorize,input:n});return Promise.resolve(t.data.data[0].embedding)}catch(n){throw console.error(n),n}}async createVector(n){const t=n.map((async n=>({text:n,vector:await this.vectorize(n)})));return await Promise.all(t)}async search(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3;const o=await this.vectorize(n);if(null==t)throw new Error("知識ベクトルが未構築です。");return t.map((n=>{return{knowledge:n,similarity:(t=o,e=n.vector,t.map(((n,o)=>t[o]*e[o])).reduce(((n,t)=>n+t)))};var t,e})).sort(((n,t)=>t.similarity-n.similarity)).slice(0,e).map((n=>n.knowledge.text))}async pickupEmbeddings(n,t,e){return await this.search(n,t.records,e).then((n=>{console.log(n);const e=t.headers.text;return n.unshift(e),Promise.resolve(n)}))}}},"../lib/KintoneConfigBuilder.ts/dist/common.js":(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isSecretItem=t.FieldType=void 0,function(n){n[n.Dropdown=0]="Dropdown",n[n.Dropdown_FieldSelect=1]="Dropdown_FieldSelect",n[n.Radio=2]="Radio",n[n.Text=3]="Text",n[n.Number=4]="Number",n[n.MultilineText=5]="MultilineText",n[n.Checkbox=6]="Checkbox",n[n.IncrementalTable=7]="IncrementalTable",n[n.Label=8]="Label",n[n.Separator=9]="Separator"}(t.FieldType||(t.FieldType={})),t.isSecretItem=function(n){return"secret"in n}},"../lib/KintoneConfigBuilder.ts/dist/config-builder.js":(n,t,e)=>{"use strict";function o(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigBuilder=void 0,e("../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js");const r=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js"),i=e("../lib/KintoneConfigBuilder.ts/dist/config-utilities.js"),a=e("../lib/KintoneConfigBuilder.ts/dist/common.js"),s=e("../lib/KintoneConfigBuilder.ts/dist/field-builder.js"),l=e("../lib/KintoneConfigBuilder.ts/dist/incremental-table-builder.js");class d{constructor(n,t){o(this,"props",void 0),o(this,"layout",void 0),o(this,"config",void 0),o(this,"field_builder",void 0),this.props=n,this.config=t,this.field_builder=new s.FieldBuilder(n)}static is_layout_info(n){return!!d.LAYOUT_PARTS.includes(n)}static is_includes_layout_info(n){return n.reduce(((n,t)=>(d.is_layout_info(t)&&(n=!0),n)),!1)}build_incremental_table(n,t){console.log({input_field:n}),console.log({saved_rows:t});const e=new l.IncrementalTableBuilder(n,t,this.field_builder).build(),o=n.table_cols.map((n=>{const t=r.Utils.createElement("span","title");t.textContent=n.header;return r.Utils.createElement("th","kintoneplugin-table-th",[t])}));o.push(r.Utils.createElement("th","kintoneplugin-table-th-blankspace"));const i=r.Utils.createElement("tr","",o),a=r.Utils.createElement("thead","",[i]),s=r.Utils.createElement("tbody","",e);return r.Utils.createElement("table","kintoneplugin-table ms-0",[a,s],"",{id:"table-".concat(n.code)})}static get_grand_tr(n){if(null==n)throw"ERROR: nullが渡されたため祖父要素を取得できません";const t=n,e=null==t?void 0:t.parentNode;return null==e?void 0:e.parentNode}static get_formparts(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const e={};for(const o in n){if(!n.hasOwnProperty(o))continue;const r=n[o],i=r.label,a=r.code,s=r.type;t.includes(s)&&(e[a]={code:a,label:i,option:s})}const o=Object.keys(e).map((n=>({key:n,value:e[n]}))).sort(((n,t)=>n.value.label.toString().toLowerCase()<t.value.label.toString().toLowerCase()?-1:n>t?1:0));return Object.assign({},...o.map((n=>({[n.key]:n.value}))))}static addOnChangeEvent(n){for(const t of n)t.addEventListener("change",(n=>{const t=n.target;if(null==t)return;const e=t[t.selectedIndex];let o=e.getAttribute("option");null==o&&(o="");let r=e.getAttribute("code");null==r&&(r="");const i=t.closest("tr");if(console.log(i),null==i)return;const a=i.getElementsByTagName("input");a[0].value=o,a[1].value=r}))}build_fields_dropdown(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=r.Utils.createElement("select","select-kintone-field");if(s.id=o,null!=i){const n=r.Utils.createElement("option");n.label=i,s.appendChild(n)}const l=d.get_formparts(n,t);return this.field_builder.compose_fielditems(l,e,a).forEach((n=>{s.appendChild(n)})),r.Utils.createElement("div","",[r.Utils.createElement("div","kintoneplugin-select-outer",[r.Utils.createElement("div","kintoneplugin-select",[s])])])}async build_fields_dropdown_other_app(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;if(null==n||n==i.ConfigUtilities.DEFAULT_OPTION){const n=r.Utils.createElement("select","select-kintone-field");if(n.id=o,null!=a){const t=r.Utils.createElement("option");t.label=a,n.appendChild(t)}return r.Utils.createElement("div","",[r.Utils.createElement("div","kintoneplugin-select-outer",[r.Utils.createElement("div","kintoneplugin-select",[n])])])}const s=await kintone.api("/k/v1/app/form/fields","GET",{app:parseInt(n)});return this.build_fields_dropdown(s.properties,t,e,o,a)}static make_parts_block(n,t,e){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];console.log("make_parts_block()");const s=r.Utils.buildElement({tagName:"div",className:"mb-3",innerHTML:e}),l=r.Utils.buildElement({tagName:"div",className:"h4 mb-2",textContent:t});if(i){const n=r.Utils.buildElement({tagName:"span",className:"text-danger",textContent:"*"});l.appendChild(n)}if(a){const n=r.Utils.buildElement({tagName:"span",className:"badge bg-secondary rounded-pill ms-2",textContent:"secret"});l.appendChild(n)}return r.Utils.buildElement({tagName:"div",className:o+" ms-4 mt-4",childElements:[l,s,n]})}static addFieldSelectEvent(n,t,e){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;kintone.api("/k/v1/app/form/fields","GET",{app:e}).then((e=>{var i,a;const s=Object.keys(e.properties).map((n=>e.properties[n])).filter((n=>"SINGLE_LINE_TEXT"==n.type)).map((n=>({code:n.code,label:n.label,option:n.type}))).map((n=>{const t=r.Utils.createElement("option","");return t.label=n.label,t.setAttribute("code",n.code),t.setAttribute("option",n.option),n.code==o&&t.setAttribute("selected",""),t})),l=r.Utils.createElement("select","select-kintone-field",s);l.addEventListener("change",(n=>{var e;console.log({event:n});const o=n.target;if(null==o)return;const r=o[o.selectedIndex],i=d(r);null===(e=t.firstChild)||void 0===e||e.remove(),t.appendChild(i)}));const d=n=>{let t;n?(t=n.getAttribute("code"),null==t&&(t="")):t="";const e=r.Utils.createElement("input","kintoneplugin-input-text",[]);e.setAttribute("value",t),e.setAttribute("disabled","");return r.Utils.createElement("td","kintoneplugin-table-td-control",[r.Utils.createElement("div","kintoneplugin-table-td-control-value",[r.Utils.createElement("div","kintoneplugin-input-outer",[e])])])},c=r.Utils.createElement("div","kintoneplugin-table-td-control-value",[r.Utils.createElement("div","kintoneplugin-select-outer",[r.Utils.createElement("div","kintoneplugin-select",[l])])]);null===(i=n.firstChild)||void 0===i||i.remove(),n.appendChild(c),null===(a=t.firstChild)||void 0===a||a.remove();const p=l.item(l.selectedIndex),A=d(p);t.appendChild(A)}))}static set_switch_event(n,t,e){n.querySelectorAll('input[type="radio"]').forEach((n=>{n.addEventListener(t,e)}))}make_string_block(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"text";if(null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");const e=n.code,o=this.get_saved_value(this.config,n);console.log({saved_value:o});const i="".concat(t,"-").concat(e),s=r.Utils.createElement("div","kintoneplugin-input-outer",[r.Utils.ce("input","kintoneplugin-input-text",[],"",{type:t,id:i,value:o})]),l="required"in(c=n)&&1==c.required;var c;const p=(n=>!!(0,a.isSecretItem)(n)&&("secret"in n&&1==n.secret))(n);return d.make_parts_block(s,n.label,n.desc,"",l,p)}get_saved_value(n,t){if((0,a.isSecretItem)(t)){console.log({input_field:t});const n=kintone.plugin.app.getProxyConfig(t.URL[0],t.method);if(console.log({proxy_config:n}),null==n)return"";let e=t.header;"Authorization Bearer"==e&&(e="Authorization");const o=t.data;if(null!=e){const t=n.headers[e];if(t.startsWith("Bearer")){return t.split(/ /)[1]}return t}if(null!=o)return n.data[o];throw new Error("get_saved_value(): 秘匿情報フィールドとして格納されている情報が不正です。(".concat(n,")"))}let e=n[t.code];return null==e&&(e=null!=t.default?t.default:""),e}make_multiline_block(n){if(null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");const t=n.code;let e=this.config[t];null==e&&(e=null!=n.default?n.default:""),console.log({saved_value:e});const o="multiline-".concat(t),i=n.cols?n.cols.toString():"60",a=n.rows?n.rows.toString():"10",s=r.Utils.createElement("div","kintoneplugin-input-outer",[r.Utils.ce("textarea","",[],e,{id:o,rows:a,cols:i})]),l="required"in(c=n)&&1==c.required;var c;return d.make_parts_block(s,n.label,n.desc,"",l)}make_checkbox_block(n){if(null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");if(null==n||null==n.accept)throw new Error("ConfigBuidler.make_checkbox_block(): 必要なプロパティ accept が未定義です。設定を見直してください。");const t=n.code;let e=this.config[t];null==e&&(e=[]),console.log({saved_value:e});const o="".concat(t),i=n.accept.map((n=>{const t="".concat(o,"-").concat(n);console.log({saved_value:e}),console.log({box_value:n});const i={type:"checkbox",name:"checkbox",value:n,id:t};return e.includes(n)&&(i.checked="checked"),r.Utils.createElement("div","kintoneplugin-input-checkbox",[r.Utils.ce("span","kintoneplugin-input-checkbox-item",[r.Utils.ce("input","kintoneplugin-input-checkbox-item",[],"",i),r.Utils.ce("label","",[],n,{for:t})])])})),a="required"in(s=n)&&1==s.required;var s;return d.make_parts_block(r.Utils.ce("div","",i,"",{id:o}),n.label,n.desc,"",a)}make_radio_block(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");const e=n.code;let o=this.config[e];if(console.log({saved_string:o}),null==o&&null!=n.default&&(o=n.default),null==n||null==n.accept)throw new Error("ConfigBuidler.make_dropdown_fieldselect_block(): 必要なプロパティ accept が未定義です。設定を見直してください。");const i=n.accept.map((n=>{const t="radio-".concat(e,"-").concat(n),i="radio-".concat(e),a=r.Utils.createElement("input");a.setAttribute("type","radio"),a.setAttribute("name",i),a.setAttribute("value",n),a.setAttribute("id",t),n==o&&a.setAttribute("checked","checked");const s=r.Utils.createElement("label","",[],n);return s.setAttribute("for",t),r.Utils.createElement("span","kintoneplugin-input-radio-item",[a,s])})),a=r.Utils.createElement("div","kintoneplugin-input-radio",i);a.id=e;const s="required"in(l=n)&&1==l.required;var l;return d.make_parts_block(a,n.label,n.desc,t,s)}make_dropdown_fieldselect_block(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const e=[],o=[];if(null==n.accept)throw new Error("ConfigBuidler.make_dropdown_fieldselect_block(): 必要なプロパティ accept が未定義です。設定を見直してください。");if(n.accept.forEach((n=>{d.is_layout_info(n)?o.push(n):e.push(n)})),null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");if(o.length>0&&null==this.layout)throw new Error("レイアウト情報をロードしていません。load_layout_info() を事前に呼び出してください。");if(o.length>0&&e.length>0)throw new Error("フォーム情報のフィールドとレイアウト情報のフィールドとが混在したドロップダウンは構築できません。");const r=n.code,i=this.config[r];let a;const s=!!n.verbose&&n.verbose;if(e.length>0)a=this.build_fields_dropdown(this.props,e,i,r,n.default,s);else{if(!(o.length>0))throw new Error("[".concat(n.label,"] フォーム情報またはレイアウト情報が空欄で呼び出されました"));a=this.build_fields_dropdown(this.layout,o,i,r,n.default,s)}const l="required"in(c=n)&&1==c.required;var c;return d.make_parts_block(a,n.label,n.desc,t,l)}make_incremental_table_block(n){if(null==this.config||null==this.props)throw new Error("インスタンスが初期化されていません");const t=n.code,e=this.config[t];console.log(e);const o=this.build_incremental_table(n,e);return d.make_parts_block(o,n.label,n.desc)}make_subtitle_block(n){const t=r.Utils.ce("div","display-6 mb-3",[],n.label),e=r.Utils.ce("div","ms-4 mt-2 mb-5",[],n.desc);return r.Utils.createElement("div","",[t,e])}async load_layout_info(){const n=await kintone.api("/k/v1/preview/app/form/layout","GET",{app:kintone.app.getId()});console.log(n);const t=n.layout.reduce(((n,t)=>{if("GROUP"==t.type){console.log("curr: ".concat(t.type));const e=t.layout.reduce(((n,t)=>{const e=t.fields.filter((n=>(console.log(n.type),"SPACER"==n.type)));return n=n.concat(e),console.log("row_prev: ".concat(n)),n}),[]);n.concat(e)}else n=n.concat(t.fields.filter((n=>"SPACER"==n.type)));return n}),[]);this.layout=t.reduce(((n,t)=>(t.code=t.elementId,t.label=t.elementId,n[t.code]=t,n)),{}),console.log(this.layout)}}o(d,"LAYOUT_PARTS",["SPACER"]),t.ConfigBuilder=d},"../lib/KintoneConfigBuilder.ts/dist/config-manager.js":(n,t,e)=>{"use strict";function o(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigManager=void 0,e("../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js");const r=e("../lib/KintoneConfigBuilder.ts/dist/config-utilities.js"),i=e("../lib/KintoneConfigBuilder.ts/dist/config-builder.js"),a=e("../lib/KintoneConfigBuilder.ts/dist/common.js"),s=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js");t.ConfigManager=class{constructor(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;o(this,"KEY_CONFIG","config"),o(this,"setting_input",void 0),o(this,"config",{}),o(this,"hooks",{});const r=kintone.plugin.app.getConfig(n);this.set_config(r),console.log(this.config),this.setting_input=t,e&&this.set_preference(e)}set_preference(n){const t=document.getElementById("plugin_title");t&&(t.textContent=n.title);const e=document.getElementById("plugin_description");e&&(e.textContent=n.description)}build(){kintone.api("/k/v1/preview/app/form/fields","GET",{app:kintone.app.getId()}).then((async n=>{const t=this.make_setting_fields(n.properties),e=this.make_button_submit(),o=this.make_button_cancel(),r=(async()=>{const n=s.Utils.createElement("form","",await t);return n.id="form_settings",n})(),i=document.getElementById("config_body");null==i||i.appendChild(await r);const a=s.Utils.createElement("div","mt-5",[o,e]);null==i||i.appendChild(a)})).then((n=>{this.call_target_event("load")})).catch((n=>{throw n}))}async call_target_event(n){const t=this.hooks[n];if(null!=t)for(const n of t)null!=n&&(console.log({func:n}),await n());else console.info("イベント[".concat(n,"]は未登録です。"))}layout_inputs(n,t){return t.map((t=>this.make_paragraph(n,t)))}make_paragraph(n,t){switch(t.type){case a.FieldType.Text:return n.make_string_block(t);case a.FieldType.MultilineText:return n.make_multiline_block(t);case a.FieldType.Radio:return n.make_radio_block(t);case a.FieldType.Number:return n.make_string_block(t,"number");case a.FieldType.Checkbox:return n.make_checkbox_block(t);case a.FieldType.IncrementalTable:return n.make_incremental_table_block(t);case a.FieldType.Label:return n.make_subtitle_block(t);case a.FieldType.Separator:return s.Utils.createElement("div","mt-5 bg-info");case a.FieldType.Dropdown_FieldSelect:if(!("accept"in t))throw new Error("プロパティ accept が必要です。config/settings.ts の設定を見直してください。");return n.make_dropdown_fieldselect_block(t);default:throw new Error("未実装のFieldTypeを要求しています。".concat(t.type," を実装してください。"))}}set_config(n){const t=s.Utils.get_from(n,this.KEY_CONFIG,"");""==t?console.info("設定値がありません。初期値で開始します。"):this.config=JSON.parse(t)}get_config(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(null==n)return this.config;if(n in this.config)return this.config[n];throw new Error("未定義または未設定の設定キーが指定されました: [".concat(n,"]"))}async make_setting_fields(n){const t=new i.ConfigBuilder(n,this.config);return await t.load_layout_info(),this.layout_inputs(t,this.setting_input)}isSecretItem(n){return"secret"in n}secret_parameters(n){const t=this.setting_input.filter((n=>(0,a.isSecretItem)(n)));return this.make_proxy_params(t,n)}make_proxy_params(n,t){const e=n.reduce(((n,t)=>{const e=t.method+":"+t.URL;return null==n[e]&&(n[e]=[]),n[e].push(t),n}),{}),o=Object.keys(e).reduce(((n,o)=>{const r=e[o];console.log({secrets:r});const i=n=>{const e=t.get_text_value(n.code);if("required"in n||(n.required=!1),1==n.required&&(null==e||null==e||""==e))throw new Error("必須の項目[".concat(n.label,"]が未記入です。"));return null==e||null==e?"":e},a=r.filter((n=>"header"in n)).reduce(((n,t)=>{const e=i(t);if(null==t.header)throw new Error("秘匿設定のheader要素が未定義です。");return"Authorization Bearer"==t.header?n.Authorization="Bearer "+e:n[t.header]=e,n}),{}),s=r.filter((n=>"data"in n)).reduce(((n,t)=>{const e=i(t);if(null==t.data)throw new Error("秘匿設定のdata要素が未定義です");return n[t.data]=e,n}),{});return console.log({params:n}),r[0].URL.reduce(((n,t)=>{const e={URL:t,method:r[0].method,headers:a,data:s};return n.push(e),n}),n),console.log({params:n}),n}),[]);return o}store_parameters(n){const t={};return this.setting_input.forEach((e=>{if(e.type==a.FieldType.Label||e.type==a.FieldType.Separator)return;if("secret"in e&&1==e.secret)return;const o=e.code,r=e.required;console.log({code:o});const i=n.get_selected(o,e.type);if(i)t[o]=i;else{if(r){const n="必須の設定項目 [".concat(e.label,"] が未設定です(").concat(o,")");throw console.error(n),new Error(n)}t[o]=""}})),console.log(t),t}make_button_submit(){const n=s.Utils.createElement("button","kintoneplugin-button-dialog-ok");return n.setAttribute("type","button"),n.textContent="適用",n.addEventListener("keydown",(n=>{if(n.isComposing||"Enter"==n.code)return console.info("適用ボタンのenterを無効化しました。"),!1})),n.addEventListener("click",(async n=>{n.preventDefault();const t=document.getElementById("form_settings");if(null==t)throw"ERROR: フォーム要素を取得できませんでした。";await this.call_target_event("submit").catch((n=>{const t="⛔ 設定の保存でエラーが発生しました。（".concat(n,"）");throw console.log(t),alert(t),new Error(t)}));const e=new r.ConfigUtilities(t);let o,i;try{o=this.secret_parameters(e),console.log({proxy_params:o})}catch(t){const e="⛔ 設定値の保存でエラーが発生しました。設定値を見直してください。（".concat(t,"）");return alert(e),n}o.forEach((async n=>{console.log({param:n});const t=kintone.plugin.app.setProxyConfig(n.URL,n.method,n.headers,n.data,(()=>{setTimeout((()=>{console.log({result:t})}),200)}))}));try{i=this.store_parameters(e),setTimeout((()=>{const n=JSON.stringify(i);console.log(n);const t={};t[this.KEY_CONFIG]=n,kintone.plugin.app.setConfig(t)}),300)}catch(t){return alert("⛔ 設定値の保存でエラーが発生しました。設定値を見直してください。（".concat(t,"）")),n}})),console.log("call 8"),n}make_button_cancel(){const n=s.Utils.createElement("button","js-cancel-button kintoneplugin-button-dialog-cancel");return n.textContent="キャンセル",n.addEventListener("click",(function(n){console.log(n),window.location.href="../../"+kintone.app.getId()+"/plugin/"})),n}add_hook(n,t){var e;null==this.hooks[n]&&(this.hooks[n]=[]),null===(e=this.hooks[n])||void 0===e||e.push(t)}}},"../lib/KintoneConfigBuilder.ts/dist/config-utilities.js":(n,t,e)=>{"use strict";function o(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigUtilities=void 0;const r=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js"),i=e("../lib/KintoneConfigBuilder.ts/dist/common.js");class a{constructor(n){o(this,"config_form",void 0),o(this,"whole_selected_field_codes",void 0),o(this,"add_selected_field_codes",(n=>{this.whole_selected_field_codes.push(n)})),o(this,"get_selected_fieldcode",(n=>{console.log("[ConfigTinker] get_selected_fieldcode(): ".concat(n));const t=document.getElementById(n);if(-1==t.selectedIndex)return"";if(t.options[t.selectedIndex].label==a.DEFAULT_OPTION)return"";const e=t.selectedOptions[0].getAttribute("fieldcode");if(null==e)throw new Error("ノード[ ".concat(n," ]はフィールド選択ではありません。"));return e})),o(this,"get_selected_label",(n=>{console.log("[ConfigTinker] get_selected_label(): ".concat(n));const t=document.getElementById(n);if(null==t)throw new Error("ConfigUtilities.get_selected_label(): 指定のID'".concat(n,"'が null でした。"));return-1==t.selectedIndex?"":t.selectedOptions[0].label})),o(this,"get_checked_boxes",(n=>{console.log("[ConfigTinker] get_checked_boxes(): ".concat(n));const t=document.querySelectorAll('[id^="'.concat(n,'-"]'));if(0==t.length)throw new Error("ConfigUtilities.get_checked_boxes(): 指定のID'".concat(n,"-'から始まるチェックボックスが見つかりませんでした。"));const e=Array.from(t).reduce(((n,t)=>(t.checked&&n.push(t.value),n)),[]);return console.log({checked_labels:e}),e})),this.config_form=n,this.whole_selected_field_codes=[]}is_overlapped(n){return r.Utils.is_overlapped(this.overlapped(n))}overlapped(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return null!=n&&this.whole_selected_field_codes.concat(n),r.Utils.overlapped(this.whole_selected_field_codes)}clear_selected_field_labels(){this.whole_selected_field_codes=[]}get_selected_radio(n){const t="radio-".concat(n);console.log("[ConfigTinker] get_selected_radio(): ".concat(t));const e=document.getElementsByName(t),o=e.length;for(let n=0;n<o;n++){const t=e[n];if(1==t.checked)return t.value}return""}get_text_value(n){const t="text-".concat(n);console.log("[ConfigTinker] get_text_value(): ".concat(t));return document.getElementById(t).value}get_multilinetext_value(n){const t="multiline-".concat(n);console.log("[ConfigTinker] get_multiline_value(): ".concat(t));return document.getElementById(t).value}get_number_value(n){const t="number-".concat(n);console.log("[ConfigTinker] get_number_value(): ".concat(t));return document.getElementById(t).value}get_incremental_table_values(n){const t="table-".concat(n),e=document.getElementById(t);if(console.log(t),console.log(e),null==e)throw new Error("指定したテーブルが見つかりません。(id: ".concat(t,")"));return this.abstruct_from_incremental_table(e)}abstruct_from_incremental_table(n){const t=Array.from(n.rows).filter((n=>{var t;return"TH"==(null===(t=n.firstChild)||void 0===t?void 0:t.nodeName)})).map((n=>{const t=Array.from(n.cells).filter((n=>""!=n.innerText)).map((n=>n.innerText));return console.log(t),t})),e=Array.from(n.rows).filter((n=>{var t;return"TH"!=(null===(t=n.firstChild)||void 0===t?void 0:t.nodeName)})).map((n=>Array.from(n.cells).filter((n=>{const t=n.getElementsByClassName("kintoneplugin-input-text")[0],e=n.getElementsByClassName("select-kintone-field")[0],o=n.getElementsByClassName("kintoneplugin-input-checkbox-item"),r=n.getElementsByClassName("kintoneplugin-multiline-text-inner")[0];return void 0!==t||void 0!==e||void 0!==o||null!=r})).map((t=>{const e=t.getElementsByClassName("kintoneplugin-input-text")[0];if(console.log({input_element:e}),null!=e)return e.value;const o=t.getElementsByClassName("kintoneplugin-multiline-text-inner")[0];if(console.log({multiline_element:o}),null!=o)return o.value;const r=t.getElementsByClassName("select-kintone-field")[0];if(console.log({selected_element:r}),null!=r){const n=r.selectedIndex;console.log({index:n});const t=r[n];if("fieldcode"in r[n].attributes){console.log("selected_element fieldcode: ".concat(t.getAttribute("fieldcode")));const n=t.getAttribute("fieldcode");if(null!=n)return n}return r[n].label}console.log({cell:t});const i=t.getElementsByClassName("kintoneplugin-input-checkbox");if(console.log({checkbox_items:i}),null!=i)return Array.from(i).filter((n=>n.childNodes[0].childNodes[0].checked)).map((n=>{if(console.log({item:n}),null==n.textContent)throw new Error("ラベルのないチェックボックスが定義されています。");return n.textContent}));throw new Error("未対応のテーブルセル ".concat(n," が渡されました。"))})).filter((n=>!(Array.isArray(n)&&0==n.length)))));console.log({values:e});const o=e.filter((n=>n.length>0)).filter((n=>n.filter((n=>(null!=n?n.length:0)>0)).length>0));if(console.log(o),0==o.length)return null;const r=t[0];console.log({headers:r});const i=e.map((n=>n.reduce(((n,t,e)=>{const o=null==t?"":t;return n[r[e]]=o,n}),{})));return console.log({table_values:i}),i}get_selected(n,t){switch(t){case i.FieldType.Dropdown:return this.get_selected_label(n);case i.FieldType.Checkbox:return this.get_checked_boxes(n);case i.FieldType.Radio:return this.get_selected_radio(n);case i.FieldType.Dropdown_FieldSelect:return this.get_selected_fieldcode(n);case i.FieldType.Text:return this.get_text_value(n);case i.FieldType.Number:return this.get_number_value(n);case i.FieldType.MultilineText:return this.get_multilinetext_value(n);case i.FieldType.IncrementalTable:return this.get_incremental_table_values(n)}throw new Error("get_selected(): 不明なフィールドタイプが渡されました (field_type: ".concat(t,")"))}}o(a,"DEFAULT_OPTION","----"),t.ConfigUtilities=a},"../lib/KintoneConfigBuilder.ts/dist/field-builder.js":(n,t,e)=>{"use strict";function o(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}Object.defineProperty(t,"__esModule",{value:!0}),t.FieldBuilder=void 0;const r=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js"),i=e("../lib/KintoneConfigBuilder.ts/dist/common.js"),a=e("../lib/KintoneConfigBuilder.ts/dist/config-builder.js"),s=e("../lib/KintoneConfigBuilder.ts/dist/config-utilities.js");t.FieldBuilder=class{constructor(n){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s.ConfigUtilities.DEFAULT_OPTION;o(this,"props",void 0),o(this,"empty_label",void 0),o(this,"build_textcell",(n=>(n=void 0===n?"":n,r.Utils.createElement("div","kintoneplugin-input-outer",[r.Utils.createElement("input","kintoneplugin-input-text",[],void 0,{type:"text",value:n,size:"4"})])))),o(this,"build_checkbox_cell",((n,t,e,o)=>{const i=t.accept.map((t=>{const i="".concat(e,"-").concat(o,"-").concat(t);n=void 0===n?[]:n,console.log({box_value:t}),console.log({preset:n});const a=n.includes(t)?"checked":"",s=r.Utils.ce("input","",[],"",{type:"checkbox",name:"checkbox",value:t,id:i});return""!=a&&s.setAttribute("checked",a),r.Utils.ce("div","kintoneplugin-input-checkbox",[r.Utils.createElement("span","kintoneplugin-input-checkbox-item",[s,r.Utils.ce("label","",[],t,{for:i})])])}));return r.Utils.createElement("div","",i)})),o(this,"build_dropdown_cell",((n,t)=>{if(null==t||!("accept"in t))throw new Error("選択肢情報としてundefinedが渡されました。");n=void 0===n?"":n;const e=r.Utils.createElement("select","select-kintone-field");if(null!=t.empty_label){const n=r.Utils.createElement("option");n.label=t.empty_label,e.appendChild(n)}return t.accept.forEach((t=>{const o=r.Utils.createElement("option");o.label=t,t==n&&o.setAttribute("selected",""),e.appendChild(o)})),r.Utils.createElement("div","",[r.Utils.createElement("div","kintoneplugin-select-outer",[r.Utils.createElement("div","kintoneplugin-select",[e])])])})),o(this,"build_dropdown_fieldselect_cell",((n,t)=>{if(null==t||!("accept"in t))throw new Error("選択肢情報としてundefinedが渡されました。");const e=r.Utils.createElement("select","select-kintone-field");e.id=void 0===n?"":n;const o=r.Utils.createElement("option");o.label=this.empty_label,e.appendChild(o);const i=a.ConfigBuilder.get_formparts(this.props,t.accept),s=!!t.verbose&&t.verbose;return this.compose_fielditems(i,n,s).forEach((n=>{e.appendChild(n)})),r.Utils.createElement("div","",[r.Utils.createElement("div","kintoneplugin-select-outer",[r.Utils.createElement("div","kintoneplugin-select",[e])])])})),o(this,"build_multilinetext_cell",(n=>(n=void 0===n?"":n,r.Utils.createElement("div","kintoneplugin-input-outer",[r.Utils.ce("textarea","kintoneplugin-multiline-text-inner",[],n,{rows:"3",cols:"40"})])))),this.props=n,this.empty_label=t}build_table_cell(n,t,e,o){if("accept"in t)switch(t.type){case i.FieldType.Checkbox:return this.build_checkbox_cell(e,t,n,o);case i.FieldType.Dropdown:return this.build_dropdown_cell(e,t);case i.FieldType.Dropdown_FieldSelect:return this.build_dropdown_fieldselect_cell(e,t)}else switch(t.type){case i.FieldType.Text:return this.build_textcell(e);case i.FieldType.MultilineText:return this.build_multilinetext_cell(e,t)}throw new Error("未定義のFieldTypeが渡されました。FieldTypeに".concat(t.type," を実装してください。"))}compose_fielditems(n,t,e){const o=[];for(const i in n){const a=r.Utils.createElement("option"),s=n[i];a.setAttribute("fieldcode",i),a.label=e?s.label+" [".concat(i,"]"):s.label,i==t&&a.setAttribute("selected",""),o.push(a)}return o}}},"../lib/KintoneConfigBuilder.ts/dist/incremental-table-builder.js":(n,t,e)=>{"use strict";function o(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:String(t)}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}Object.defineProperty(t,"__esModule",{value:!0}),t.IncrementalTableBuilder=void 0;const r=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js"),i=e("../lib/KintoneConfigBuilder.ts/dist/config-builder.js");t.IncrementalTableBuilder=class{constructor(n,t,e){o(this,"table_conf",void 0),o(this,"saved_rows",void 0),o(this,"table_rows",void 0),o(this,"field_builder",void 0),o(this,"rows_count",void 0),this.table_conf=n,this.saved_rows=t,this.field_builder=e,this.table_rows=[],this.rows_count=0}build(){const n=this.table_conf.table_cols,t=n.length-3;return null==this.saved_rows||0==Object.keys(this.saved_rows).length?this.table_rows.push(this.build_table_row(0,n,void 0,t)):this.saved_rows.forEach(((e,o)=>{const r=this.build_table_row(o,n,e,t);this.table_rows.push(r)})),this.table_rows}build_table_row(n,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;console.log({table_cols:t}),console.log({saved_data:e});const i=[];for(let o=0;o<t.length;o++){const a=t[o],s=null==e?void 0:e[a.header];console.log({value:s});const l=this.field_builder.build_table_cell(this.table_conf.code,a,s,n);i.push(r.Utils.ce("td","",[r.Utils.ce("div","kintoneplugin-table-td-control",[r.Utils.ce("div","kintoneplugin-table-td-control-value",[l])])]))}const a=this.create_button_row_add(t),s=this.create_button_row_remove();console.log({spacer_cols:o}),o=o<0?0:o;const l=[...Array(o)].map((()=>r.Utils.createElement("td","td_spacer"))),d=[...i,...l,r.Utils.createElement("td","kintoneplugin-table-td-operation",[a,s])];this.rows_count=i.length;return r.Utils.createElement("tr","",d)}get_table_rows_count(){const n="table-".concat(this.table_conf.code),t=document.getElementById(n);if(t)return t.getElementsByTagName("tr").length;throw new Error("指定したテーブルID ".concat(n," が存在しません。"))}create_button_row_add(n){const t=document.createElement("button");return t.className="kintoneplugin-button-add-row-image",t.setAttribute("type","button"),t.setAttribute("title","Add row"),t.addEventListener("click",(t=>{console.log("テーブルを一行追加する".concat(t));const e=i.ConfigBuilder.get_grand_tr(t.target),o=null==e?void 0:e.parentNode;if(null==e||null==o)throw"ERROR: 祖先のtbodyを取得できませんでした。";if(null==(null==t?void 0:t.target))return;const r=e.children.length-1-n.length,a=this.get_table_rows_count()+1,s=this.build_table_row(a,n,void 0,r);o.insertBefore(s,e.nextElementSibling)})),t}create_button_row_remove(){const n=document.createElement("button");return n.className="kintoneplugin-button-remove-row-image",n.setAttribute("type","button"),n.setAttribute("title","Delete this row"),n.addEventListener("click",(n=>{var t,e;const o=i.ConfigBuilder.get_grand_tr(n.target);1!=(null===(t=o.parentNode)||void 0===t?void 0:t.childNodes.length)&&(null===(e=o.parentNode)||void 0===e||e.removeChild(o),console.log("テーブルを一行削除する".concat(n)))})),n}}},"../lib/KintoneConfigBuilder.ts/dist/index.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e),Object.defineProperty(n,o,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e("../lib/KintoneConfigBuilder.ts/dist/config-builder.js"),t),r(e("../lib/KintoneConfigBuilder.ts/dist/config-manager.js"),t),r(e("../lib/KintoneConfigBuilder.ts/dist/config-utilities.js"),t),r(e("../lib/KintoneConfigBuilder.ts/dist/field-builder.js"),t),r(e("../lib/KintoneConfigBuilder.ts/dist/incremental-table-builder.js"),t),r(e("../lib/KintoneConfigBuilder.ts/dist/common.js"),t)},"./node_modules/bootstrap/dist/js/bootstrap.esm.js":(n,t,e)=>{"use strict";e.r(t),e.d(t,{Alert:()=>Y,Button:()=>nn,Carousel:()=>Rn,Collapse:()=>Hn,Dropdown:()=>xt,Modal:()=>ne,Offcanvas:()=>he,Popover:()=>De,ScrollSpy:()=>Ye,Tab:()=>xo,Toast:()=>Ro,Tooltip:()=>Pe});var o=e("./node_modules/@popperjs/core/lib/index.js"),r=e("./node_modules/@popperjs/core/lib/popper.js");const i="transitionend",a=n=>{let t=n.getAttribute("data-bs-target");if(!t||"#"===t){let e=n.getAttribute("href");if(!e||!e.includes("#")&&!e.startsWith("."))return null;e.includes("#")&&!e.startsWith("#")&&(e=`#${e.split("#")[1]}`),t=e&&"#"!==e?e.trim():null}return t},s=n=>{const t=a(n);return t&&document.querySelector(t)?t:null},l=n=>{const t=a(n);return t?document.querySelector(t):null},d=n=>{n.dispatchEvent(new Event(i))},c=n=>!(!n||"object"!=typeof n)&&(void 0!==n.jquery&&(n=n[0]),void 0!==n.nodeType),p=n=>c(n)?n.jquery?n[0]:n:"string"==typeof n&&n.length>0?document.querySelector(n):null,A=n=>{if(!c(n)||0===n.getClientRects().length)return!1;const t="visible"===getComputedStyle(n).getPropertyValue("visibility"),e=n.closest("details:not([open])");if(!e)return t;if(e!==n){const t=n.closest("summary");if(t&&t.parentNode!==e)return!1;if(null===t)return!1}return t},m=n=>!n||n.nodeType!==Node.ELEMENT_NODE||(!!n.classList.contains("disabled")||(void 0!==n.disabled?n.disabled:n.hasAttribute("disabled")&&"false"!==n.getAttribute("disabled"))),u=n=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof n.getRootNode){const t=n.getRootNode();return t instanceof ShadowRoot?t:null}return n instanceof ShadowRoot?n:n.parentNode?u(n.parentNode):null},f=()=>{},b=n=>{n.offsetHeight},g=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,h=[],x=()=>"rtl"===document.documentElement.dir,v=n=>{var t;t=()=>{const t=g();if(t){const e=n.NAME,o=t.fn[e];t.fn[e]=n.jQueryInterface,t.fn[e].Constructor=n,t.fn[e].noConflict=()=>(t.fn[e]=o,n.jQueryInterface)}},"loading"===document.readyState?(h.length||document.addEventListener("DOMContentLoaded",(()=>{for(const n of h)n()})),h.push(t)):t()},E=n=>{"function"==typeof n&&n()},B=(n,t,e=!0)=>{if(!e)return void E(n);const o=(n=>{if(!n)return 0;let{transitionDuration:t,transitionDelay:e}=window.getComputedStyle(n);const o=Number.parseFloat(t),r=Number.parseFloat(e);return o||r?(t=t.split(",")[0],e=e.split(",")[0],1e3*(Number.parseFloat(t)+Number.parseFloat(e))):0})(t)+5;let r=!1;const a=({target:e})=>{e===t&&(r=!0,t.removeEventListener(i,a),E(n))};t.addEventListener(i,a),setTimeout((()=>{r||d(t)}),o)},y=(n,t,e,o)=>{const r=n.length;let i=n.indexOf(t);return-1===i?!e&&o?n[r-1]:n[0]:(i+=e?1:-1,o&&(i=(i+r)%r),n[Math.max(0,Math.min(i,r-1))])},w=/[^.]*(?=\..*)\.|.*/,I=/\..*/,$=/::\d+$/,C={};let _=1;const k={mouseenter:"mouseover",mouseleave:"mouseout"},O=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function j(n,t){return t&&`${t}::${_++}`||n.uidEvent||_++}function M(n){const t=j(n);return n.uidEvent=t,C[t]=C[t]||{},C[t]}function S(n,t,e=null){return Object.values(n).find((n=>n.callable===t&&n.delegationSelector===e))}function R(n,t,e){const o="string"==typeof t,r=o?e:t||e;let i=P(n);return O.has(i)||(i=n),[o,r,i]}function F(n,t,e,o,r){if("string"!=typeof t||!n)return;let[i,a,s]=R(t,e,o);if(t in k){const n=n=>function(t){if(!t.relatedTarget||t.relatedTarget!==t.delegateTarget&&!t.delegateTarget.contains(t.relatedTarget))return n.call(this,t)};a=n(a)}const l=M(n),d=l[s]||(l[s]={}),c=S(d,a,i?e:null);if(c)return void(c.oneOff=c.oneOff&&r);const p=j(a,t.replace(w,"")),A=i?function(n,t,e){return function o(r){const i=n.querySelectorAll(t);for(let{target:a}=r;a&&a!==this;a=a.parentNode)for(const s of i)if(s===a)return L(r,{delegateTarget:a}),o.oneOff&&N.off(n,r.type,t,e),e.apply(a,[r])}}(n,e,a):function(n,t){return function e(o){return L(o,{delegateTarget:n}),e.oneOff&&N.off(n,o.type,t),t.apply(n,[o])}}(n,a);A.delegationSelector=i?e:null,A.callable=a,A.oneOff=r,A.uidEvent=p,d[p]=A,n.addEventListener(s,A,i)}function V(n,t,e,o,r){const i=S(t[e],o,r);i&&(n.removeEventListener(e,i,Boolean(r)),delete t[e][i.uidEvent])}function T(n,t,e,o){const r=t[e]||{};for(const i of Object.keys(r))if(i.includes(o)){const o=r[i];V(n,t,e,o.callable,o.delegationSelector)}}function P(n){return n=n.replace(I,""),k[n]||n}const N={on(n,t,e,o){F(n,t,e,o,!1)},one(n,t,e,o){F(n,t,e,o,!0)},off(n,t,e,o){if("string"!=typeof t||!n)return;const[r,i,a]=R(t,e,o),s=a!==t,l=M(n),d=l[a]||{},c=t.startsWith(".");if(void 0===i){if(c)for(const e of Object.keys(l))T(n,l,e,t.slice(1));for(const e of Object.keys(d)){const o=e.replace($,"");if(!s||t.includes(o)){const t=d[e];V(n,l,a,t.callable,t.delegationSelector)}}}else{if(!Object.keys(d).length)return;V(n,l,a,i,r?e:null)}},trigger(n,t,e){if("string"!=typeof t||!n)return null;const o=g();let r=null,i=!0,a=!0,s=!1;t!==P(t)&&o&&(r=o.Event(t,e),o(n).trigger(r),i=!r.isPropagationStopped(),a=!r.isImmediatePropagationStopped(),s=r.isDefaultPrevented());let l=new Event(t,{bubbles:i,cancelable:!0});return l=L(l,e),s&&l.preventDefault(),a&&n.dispatchEvent(l),l.defaultPrevented&&r&&r.preventDefault(),l}};function L(n,t){for(const[e,o]of Object.entries(t||{}))try{n[e]=o}catch(t){Object.defineProperty(n,e,{configurable:!0,get:()=>o})}return n}const D=new Map,Q={set(n,t,e){D.has(n)||D.set(n,new Map);const o=D.get(n);o.has(t)||0===o.size?o.set(t,e):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(o.keys())[0]}.`)},get:(n,t)=>D.has(n)&&D.get(n).get(t)||null,remove(n,t){if(!D.has(n))return;const e=D.get(n);e.delete(t),0===e.size&&D.delete(n)}};function z(n){if("true"===n)return!0;if("false"===n)return!1;if(n===Number(n).toString())return Number(n);if(""===n||"null"===n)return null;if("string"!=typeof n)return n;try{return JSON.parse(decodeURIComponent(n))}catch(t){return n}}function q(n){return n.replace(/[A-Z]/g,(n=>`-${n.toLowerCase()}`))}const U={setDataAttribute(n,t,e){n.setAttribute(`data-bs-${q(t)}`,e)},removeDataAttribute(n,t){n.removeAttribute(`data-bs-${q(t)}`)},getDataAttributes(n){if(!n)return{};const t={},e=Object.keys(n.dataset).filter((n=>n.startsWith("bs")&&!n.startsWith("bsConfig")));for(const o of e){let e=o.replace(/^bs/,"");e=e.charAt(0).toLowerCase()+e.slice(1,e.length),t[e]=z(n.dataset[o])}return t},getDataAttribute:(n,t)=>z(n.getAttribute(`data-bs-${q(t)}`))};class G{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(n){return n=this._mergeConfigObj(n),n=this._configAfterMerge(n),this._typeCheckConfig(n),n}_configAfterMerge(n){return n}_mergeConfigObj(n,t){const e=c(t)?U.getDataAttribute(t,"config"):{};return{...this.constructor.Default,..."object"==typeof e?e:{},...c(t)?U.getDataAttributes(t):{},..."object"==typeof n?n:{}}}_typeCheckConfig(n,t=this.constructor.DefaultType){for(const o of Object.keys(t)){const r=t[o],i=n[o],a=c(i)?"element":null==(e=i)?`${e}`:Object.prototype.toString.call(e).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(r).test(a))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${o}" provided type "${a}" but expected type "${r}".`)}var e}}class J extends G{constructor(n,t){super(),(n=p(n))&&(this._element=n,this._config=this._getConfig(t),Q.set(this._element,this.constructor.DATA_KEY,this))}dispose(){Q.remove(this._element,this.constructor.DATA_KEY),N.off(this._element,this.constructor.EVENT_KEY);for(const n of Object.getOwnPropertyNames(this))this[n]=null}_queueCallback(n,t,e=!0){B(n,t,e)}_getConfig(n){return n=this._mergeConfigObj(n,this._element),n=this._configAfterMerge(n),this._typeCheckConfig(n),n}static getInstance(n){return Q.get(p(n),this.DATA_KEY)}static getOrCreateInstance(n,t={}){return this.getInstance(n)||new this(n,"object"==typeof t?t:null)}static get VERSION(){return"5.2.3"}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(n){return`${n}${this.EVENT_KEY}`}}const H=(n,t="hide")=>{const e=`click.dismiss${n.EVENT_KEY}`,o=n.NAME;N.on(document,e,`[data-bs-dismiss="${o}"]`,(function(e){if(["A","AREA"].includes(this.tagName)&&e.preventDefault(),m(this))return;const r=l(this)||this.closest(`.${o}`);n.getOrCreateInstance(r)[t]()}))},K=".bs.alert",W=`close${K}`,Z=`closed${K}`;class Y extends J{static get NAME(){return"alert"}close(){if(N.trigger(this._element,W).defaultPrevented)return;this._element.classList.remove("show");const n=this._element.classList.contains("fade");this._queueCallback((()=>this._destroyElement()),this._element,n)}_destroyElement(){this._element.remove(),N.trigger(this._element,Z),this.dispose()}static jQueryInterface(n){return this.each((function(){const t=Y.getOrCreateInstance(this);if("string"==typeof n){if(void 0===t[n]||n.startsWith("_")||"constructor"===n)throw new TypeError(`No method named "${n}"`);t[n](this)}}))}}H(Y,"close"),v(Y);const X='[data-bs-toggle="button"]';class nn extends J{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(n){return this.each((function(){const t=nn.getOrCreateInstance(this);"toggle"===n&&t[n]()}))}}N.on(document,"click.bs.button.data-api",X,(n=>{n.preventDefault();const t=n.target.closest(X);nn.getOrCreateInstance(t).toggle()})),v(nn);const tn={find:(n,t=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(t,n)),findOne:(n,t=document.documentElement)=>Element.prototype.querySelector.call(t,n),children:(n,t)=>[].concat(...n.children).filter((n=>n.matches(t))),parents(n,t){const e=[];let o=n.parentNode.closest(t);for(;o;)e.push(o),o=o.parentNode.closest(t);return e},prev(n,t){let e=n.previousElementSibling;for(;e;){if(e.matches(t))return[e];e=e.previousElementSibling}return[]},next(n,t){let e=n.nextElementSibling;for(;e;){if(e.matches(t))return[e];e=e.nextElementSibling}return[]},focusableChildren(n){const t=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map((n=>`${n}:not([tabindex^="-"])`)).join(",");return this.find(t,n).filter((n=>!m(n)&&A(n)))}},en=".bs.swipe",on=`touchstart${en}`,rn=`touchmove${en}`,an=`touchend${en}`,sn=`pointerdown${en}`,ln=`pointerup${en}`,dn={endCallback:null,leftCallback:null,rightCallback:null},cn={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class pn extends G{constructor(n,t){super(),this._element=n,n&&pn.isSupported()&&(this._config=this._getConfig(t),this._deltaX=0,this._supportPointerEvents=Boolean(window.PointerEvent),this._initEvents())}static get Default(){return dn}static get DefaultType(){return cn}static get NAME(){return"swipe"}dispose(){N.off(this._element,en)}_start(n){this._supportPointerEvents?this._eventIsPointerPenTouch(n)&&(this._deltaX=n.clientX):this._deltaX=n.touches[0].clientX}_end(n){this._eventIsPointerPenTouch(n)&&(this._deltaX=n.clientX-this._deltaX),this._handleSwipe(),E(this._config.endCallback)}_move(n){this._deltaX=n.touches&&n.touches.length>1?0:n.touches[0].clientX-this._deltaX}_handleSwipe(){const n=Math.abs(this._deltaX);if(n<=40)return;const t=n/this._deltaX;this._deltaX=0,t&&E(t>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(N.on(this._element,sn,(n=>this._start(n))),N.on(this._element,ln,(n=>this._end(n))),this._element.classList.add("pointer-event")):(N.on(this._element,on,(n=>this._start(n))),N.on(this._element,rn,(n=>this._move(n))),N.on(this._element,an,(n=>this._end(n))))}_eventIsPointerPenTouch(n){return this._supportPointerEvents&&("pen"===n.pointerType||"touch"===n.pointerType)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const An=".bs.carousel",mn=".data-api",un="next",fn="prev",bn="left",gn="right",hn=`slide${An}`,xn=`slid${An}`,vn=`keydown${An}`,En=`mouseenter${An}`,Bn=`mouseleave${An}`,yn=`dragstart${An}`,wn=`load${An}${mn}`,In=`click${An}${mn}`,$n="carousel",Cn="active",_n=".active",kn=".carousel-item",On=_n+kn,jn={ArrowLeft:gn,ArrowRight:bn},Mn={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},Sn={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class Rn extends J{constructor(n,t){super(n,t),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=tn.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===$n&&this.cycle()}static get Default(){return Mn}static get DefaultType(){return Sn}static get NAME(){return"carousel"}next(){this._slide(un)}nextWhenVisible(){!document.hidden&&A(this._element)&&this.next()}prev(){this._slide(fn)}pause(){this._isSliding&&d(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval((()=>this.nextWhenVisible()),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?N.one(this._element,xn,(()=>this.cycle())):this.cycle())}to(n){const t=this._getItems();if(n>t.length-1||n<0)return;if(this._isSliding)return void N.one(this._element,xn,(()=>this.to(n)));const e=this._getItemIndex(this._getActive());if(e===n)return;const o=n>e?un:fn;this._slide(o,t[n])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(n){return n.defaultInterval=n.interval,n}_addEventListeners(){this._config.keyboard&&N.on(this._element,vn,(n=>this._keydown(n))),"hover"===this._config.pause&&(N.on(this._element,En,(()=>this.pause())),N.on(this._element,Bn,(()=>this._maybeEnableCycle()))),this._config.touch&&pn.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const n of tn.find(".carousel-item img",this._element))N.on(n,yn,(n=>n.preventDefault()));const n={leftCallback:()=>this._slide(this._directionToOrder(bn)),rightCallback:()=>this._slide(this._directionToOrder(gn)),endCallback:()=>{"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout((()=>this._maybeEnableCycle()),500+this._config.interval))}};this._swipeHelper=new pn(this._element,n)}_keydown(n){if(/input|textarea/i.test(n.target.tagName))return;const t=jn[n.key];t&&(n.preventDefault(),this._slide(this._directionToOrder(t)))}_getItemIndex(n){return this._getItems().indexOf(n)}_setActiveIndicatorElement(n){if(!this._indicatorsElement)return;const t=tn.findOne(_n,this._indicatorsElement);t.classList.remove(Cn),t.removeAttribute("aria-current");const e=tn.findOne(`[data-bs-slide-to="${n}"]`,this._indicatorsElement);e&&(e.classList.add(Cn),e.setAttribute("aria-current","true"))}_updateInterval(){const n=this._activeElement||this._getActive();if(!n)return;const t=Number.parseInt(n.getAttribute("data-bs-interval"),10);this._config.interval=t||this._config.defaultInterval}_slide(n,t=null){if(this._isSliding)return;const e=this._getActive(),o=n===un,r=t||y(this._getItems(),e,o,this._config.wrap);if(r===e)return;const i=this._getItemIndex(r),a=t=>N.trigger(this._element,t,{relatedTarget:r,direction:this._orderToDirection(n),from:this._getItemIndex(e),to:i});if(a(hn).defaultPrevented)return;if(!e||!r)return;const s=Boolean(this._interval);this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(i),this._activeElement=r;const l=o?"carousel-item-start":"carousel-item-end",d=o?"carousel-item-next":"carousel-item-prev";r.classList.add(d),b(r),e.classList.add(l),r.classList.add(l);this._queueCallback((()=>{r.classList.remove(l,d),r.classList.add(Cn),e.classList.remove(Cn,d,l),this._isSliding=!1,a(xn)}),e,this._isAnimated()),s&&this.cycle()}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return tn.findOne(On,this._element)}_getItems(){return tn.find(kn,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(n){return x()?n===bn?fn:un:n===bn?un:fn}_orderToDirection(n){return x()?n===fn?bn:gn:n===fn?gn:bn}static jQueryInterface(n){return this.each((function(){const t=Rn.getOrCreateInstance(this,n);if("number"!=typeof n){if("string"==typeof n){if(void 0===t[n]||n.startsWith("_")||"constructor"===n)throw new TypeError(`No method named "${n}"`);t[n]()}}else t.to(n)}))}}N.on(document,In,"[data-bs-slide], [data-bs-slide-to]",(function(n){const t=l(this);if(!t||!t.classList.contains($n))return;n.preventDefault();const e=Rn.getOrCreateInstance(t),o=this.getAttribute("data-bs-slide-to");return o?(e.to(o),void e._maybeEnableCycle()):"next"===U.getDataAttribute(this,"slide")?(e.next(),void e._maybeEnableCycle()):(e.prev(),void e._maybeEnableCycle())})),N.on(window,wn,(()=>{const n=tn.find('[data-bs-ride="carousel"]');for(const t of n)Rn.getOrCreateInstance(t)})),v(Rn);const Fn=".bs.collapse",Vn=`show${Fn}`,Tn=`shown${Fn}`,Pn=`hide${Fn}`,Nn=`hidden${Fn}`,Ln=`click${Fn}.data-api`,Dn="show",Qn="collapse",zn="collapsing",qn=`:scope .${Qn} .${Qn}`,Un='[data-bs-toggle="collapse"]',Gn={parent:null,toggle:!0},Jn={parent:"(null|element)",toggle:"boolean"};class Hn extends J{constructor(n,t){super(n,t),this._isTransitioning=!1,this._triggerArray=[];const e=tn.find(Un);for(const n of e){const t=s(n),e=tn.find(t).filter((n=>n===this._element));null!==t&&e.length&&this._triggerArray.push(n)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return Gn}static get DefaultType(){return Jn}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let n=[];if(this._config.parent&&(n=this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter((n=>n!==this._element)).map((n=>Hn.getOrCreateInstance(n,{toggle:!1})))),n.length&&n[0]._isTransitioning)return;if(N.trigger(this._element,Vn).defaultPrevented)return;for(const t of n)t.hide();const t=this._getDimension();this._element.classList.remove(Qn),this._element.classList.add(zn),this._element.style[t]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const e=`scroll${t[0].toUpperCase()+t.slice(1)}`;this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(zn),this._element.classList.add(Qn,Dn),this._element.style[t]="",N.trigger(this._element,Tn)}),this._element,!0),this._element.style[t]=`${this._element[e]}px`}hide(){if(this._isTransitioning||!this._isShown())return;if(N.trigger(this._element,Pn).defaultPrevented)return;const n=this._getDimension();this._element.style[n]=`${this._element.getBoundingClientRect()[n]}px`,b(this._element),this._element.classList.add(zn),this._element.classList.remove(Qn,Dn);for(const n of this._triggerArray){const t=l(n);t&&!this._isShown(t)&&this._addAriaAndCollapsedClass([n],!1)}this._isTransitioning=!0;this._element.style[n]="",this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(zn),this._element.classList.add(Qn),N.trigger(this._element,Nn)}),this._element,!0)}_isShown(n=this._element){return n.classList.contains(Dn)}_configAfterMerge(n){return n.toggle=Boolean(n.toggle),n.parent=p(n.parent),n}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const n=this._getFirstLevelChildren(Un);for(const t of n){const n=l(t);n&&this._addAriaAndCollapsedClass([t],this._isShown(n))}}_getFirstLevelChildren(n){const t=tn.find(qn,this._config.parent);return tn.find(n,this._config.parent).filter((n=>!t.includes(n)))}_addAriaAndCollapsedClass(n,t){if(n.length)for(const e of n)e.classList.toggle("collapsed",!t),e.setAttribute("aria-expanded",t)}static jQueryInterface(n){const t={};return"string"==typeof n&&/show|hide/.test(n)&&(t.toggle=!1),this.each((function(){const e=Hn.getOrCreateInstance(this,t);if("string"==typeof n){if(void 0===e[n])throw new TypeError(`No method named "${n}"`);e[n]()}}))}}N.on(document,Ln,Un,(function(n){("A"===n.target.tagName||n.delegateTarget&&"A"===n.delegateTarget.tagName)&&n.preventDefault();const t=s(this),e=tn.find(t);for(const n of e)Hn.getOrCreateInstance(n,{toggle:!1}).toggle()})),v(Hn);const Kn="dropdown",Wn=".bs.dropdown",Zn=".data-api",Yn="ArrowUp",Xn="ArrowDown",nt=`hide${Wn}`,tt=`hidden${Wn}`,et=`show${Wn}`,ot=`shown${Wn}`,rt=`click${Wn}${Zn}`,it=`keydown${Wn}${Zn}`,at=`keyup${Wn}${Zn}`,st="show",lt='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',dt=`${lt}.${st}`,ct=".dropdown-menu",pt=x()?"top-end":"top-start",At=x()?"top-start":"top-end",mt=x()?"bottom-end":"bottom-start",ut=x()?"bottom-start":"bottom-end",ft=x()?"left-start":"right-start",bt=x()?"right-start":"left-start",gt={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},ht={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class xt extends J{constructor(n,t){super(n,t),this._popper=null,this._parent=this._element.parentNode,this._menu=tn.next(this._element,ct)[0]||tn.prev(this._element,ct)[0]||tn.findOne(ct,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return gt}static get DefaultType(){return ht}static get NAME(){return Kn}toggle(){return this._isShown()?this.hide():this.show()}show(){if(m(this._element)||this._isShown())return;const n={relatedTarget:this._element};if(!N.trigger(this._element,et,n).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const n of[].concat(...document.body.children))N.on(n,"mouseover",f);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(st),this._element.classList.add(st),N.trigger(this._element,ot,n)}}hide(){if(m(this._element)||!this._isShown())return;const n={relatedTarget:this._element};this._completeHide(n)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(n){if(!N.trigger(this._element,nt,n).defaultPrevented){if("ontouchstart"in document.documentElement)for(const n of[].concat(...document.body.children))N.off(n,"mouseover",f);this._popper&&this._popper.destroy(),this._menu.classList.remove(st),this._element.classList.remove(st),this._element.setAttribute("aria-expanded","false"),U.removeDataAttribute(this._menu,"popper"),N.trigger(this._element,tt,n)}}_getConfig(n){if("object"==typeof(n=super._getConfig(n)).reference&&!c(n.reference)&&"function"!=typeof n.reference.getBoundingClientRect)throw new TypeError(`${Kn.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return n}_createPopper(){if(void 0===o)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let n=this._element;"parent"===this._config.reference?n=this._parent:c(this._config.reference)?n=p(this._config.reference):"object"==typeof this._config.reference&&(n=this._config.reference);const t=this._getPopperConfig();this._popper=r.createPopper(n,this._menu,t)}_isShown(){return this._menu.classList.contains(st)}_getPlacement(){const n=this._parent;if(n.classList.contains("dropend"))return ft;if(n.classList.contains("dropstart"))return bt;if(n.classList.contains("dropup-center"))return"top";if(n.classList.contains("dropdown-center"))return"bottom";const t="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return n.classList.contains("dropup")?t?At:pt:t?ut:mt}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:n}=this._config;return"string"==typeof n?n.split(",").map((n=>Number.parseInt(n,10))):"function"==typeof n?t=>n(t,this._element):n}_getPopperConfig(){const n={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||"static"===this._config.display)&&(U.setDataAttribute(this._menu,"popper","static"),n.modifiers=[{name:"applyStyles",enabled:!1}]),{...n,..."function"==typeof this._config.popperConfig?this._config.popperConfig(n):this._config.popperConfig}}_selectMenuItem({key:n,target:t}){const e=tn.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter((n=>A(n)));e.length&&y(e,t,n===Xn,!e.includes(t)).focus()}static jQueryInterface(n){return this.each((function(){const t=xt.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n])throw new TypeError(`No method named "${n}"`);t[n]()}}))}static clearMenus(n){if(2===n.button||"keyup"===n.type&&"Tab"!==n.key)return;const t=tn.find(dt);for(const e of t){const t=xt.getInstance(e);if(!t||!1===t._config.autoClose)continue;const o=n.composedPath(),r=o.includes(t._menu);if(o.includes(t._element)||"inside"===t._config.autoClose&&!r||"outside"===t._config.autoClose&&r)continue;if(t._menu.contains(n.target)&&("keyup"===n.type&&"Tab"===n.key||/input|select|option|textarea|form/i.test(n.target.tagName)))continue;const i={relatedTarget:t._element};"click"===n.type&&(i.clickEvent=n),t._completeHide(i)}}static dataApiKeydownHandler(n){const t=/input|textarea/i.test(n.target.tagName),e="Escape"===n.key,o=[Yn,Xn].includes(n.key);if(!o&&!e)return;if(t&&!e)return;n.preventDefault();const r=this.matches(lt)?this:tn.prev(this,lt)[0]||tn.next(this,lt)[0]||tn.findOne(lt,n.delegateTarget.parentNode),i=xt.getOrCreateInstance(r);if(o)return n.stopPropagation(),i.show(),void i._selectMenuItem(n);i._isShown()&&(n.stopPropagation(),i.hide(),r.focus())}}N.on(document,it,lt,xt.dataApiKeydownHandler),N.on(document,it,ct,xt.dataApiKeydownHandler),N.on(document,rt,xt.clearMenus),N.on(document,at,xt.clearMenus),N.on(document,rt,lt,(function(n){n.preventDefault(),xt.getOrCreateInstance(this).toggle()})),v(xt);const vt=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Et=".sticky-top",Bt="padding-right",yt="margin-right";class wt{constructor(){this._element=document.body}getWidth(){const n=document.documentElement.clientWidth;return Math.abs(window.innerWidth-n)}hide(){const n=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,Bt,(t=>t+n)),this._setElementAttributes(vt,Bt,(t=>t+n)),this._setElementAttributes(Et,yt,(t=>t-n))}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,Bt),this._resetElementAttributes(vt,Bt),this._resetElementAttributes(Et,yt)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(n,t,e){const o=this.getWidth();this._applyManipulationCallback(n,(n=>{if(n!==this._element&&window.innerWidth>n.clientWidth+o)return;this._saveInitialAttribute(n,t);const r=window.getComputedStyle(n).getPropertyValue(t);n.style.setProperty(t,`${e(Number.parseFloat(r))}px`)}))}_saveInitialAttribute(n,t){const e=n.style.getPropertyValue(t);e&&U.setDataAttribute(n,t,e)}_resetElementAttributes(n,t){this._applyManipulationCallback(n,(n=>{const e=U.getDataAttribute(n,t);null!==e?(U.removeDataAttribute(n,t),n.style.setProperty(t,e)):n.style.removeProperty(t)}))}_applyManipulationCallback(n,t){if(c(n))t(n);else for(const e of tn.find(n,this._element))t(e)}}const It="backdrop",$t="show",Ct=`mousedown.bs.${It}`,_t={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},kt={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Ot extends G{constructor(n){super(),this._config=this._getConfig(n),this._isAppended=!1,this._element=null}static get Default(){return _t}static get DefaultType(){return kt}static get NAME(){return It}show(n){if(!this._config.isVisible)return void E(n);this._append();const t=this._getElement();this._config.isAnimated&&b(t),t.classList.add($t),this._emulateAnimation((()=>{E(n)}))}hide(n){this._config.isVisible?(this._getElement().classList.remove($t),this._emulateAnimation((()=>{this.dispose(),E(n)}))):E(n)}dispose(){this._isAppended&&(N.off(this._element,Ct),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const n=document.createElement("div");n.className=this._config.className,this._config.isAnimated&&n.classList.add("fade"),this._element=n}return this._element}_configAfterMerge(n){return n.rootElement=p(n.rootElement),n}_append(){if(this._isAppended)return;const n=this._getElement();this._config.rootElement.append(n),N.on(n,Ct,(()=>{E(this._config.clickCallback)})),this._isAppended=!0}_emulateAnimation(n){B(n,this._getElement(),this._config.isAnimated)}}const jt=".bs.focustrap",Mt=`focusin${jt}`,St=`keydown.tab${jt}`,Rt="backward",Ft={autofocus:!0,trapElement:null},Vt={autofocus:"boolean",trapElement:"element"};class Tt extends G{constructor(n){super(),this._config=this._getConfig(n),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Ft}static get DefaultType(){return Vt}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),N.off(document,jt),N.on(document,Mt,(n=>this._handleFocusin(n))),N.on(document,St,(n=>this._handleKeydown(n))),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,N.off(document,jt))}_handleFocusin(n){const{trapElement:t}=this._config;if(n.target===document||n.target===t||t.contains(n.target))return;const e=tn.focusableChildren(t);0===e.length?t.focus():this._lastTabNavDirection===Rt?e[e.length-1].focus():e[0].focus()}_handleKeydown(n){"Tab"===n.key&&(this._lastTabNavDirection=n.shiftKey?Rt:"forward")}}const Pt=".bs.modal",Nt=`hide${Pt}`,Lt=`hidePrevented${Pt}`,Dt=`hidden${Pt}`,Qt=`show${Pt}`,zt=`shown${Pt}`,qt=`resize${Pt}`,Ut=`click.dismiss${Pt}`,Gt=`mousedown.dismiss${Pt}`,Jt=`keydown.dismiss${Pt}`,Ht=`click${Pt}.data-api`,Kt="modal-open",Wt="show",Zt="modal-static",Yt={backdrop:!0,focus:!0,keyboard:!0},Xt={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class ne extends J{constructor(n,t){super(n,t),this._dialog=tn.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new wt,this._addEventListeners()}static get Default(){return Yt}static get DefaultType(){return Xt}static get NAME(){return"modal"}toggle(n){return this._isShown?this.hide():this.show(n)}show(n){if(this._isShown||this._isTransitioning)return;N.trigger(this._element,Qt,{relatedTarget:n}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(Kt),this._adjustDialog(),this._backdrop.show((()=>this._showElement(n))))}hide(){if(!this._isShown||this._isTransitioning)return;N.trigger(this._element,Nt).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(Wt),this._queueCallback((()=>this._hideModal()),this._element,this._isAnimated()))}dispose(){for(const n of[window,this._dialog])N.off(n,Pt);this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Ot({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new Tt({trapElement:this._element})}_showElement(n){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const t=tn.findOne(".modal-body",this._dialog);t&&(t.scrollTop=0),b(this._element),this._element.classList.add(Wt);this._queueCallback((()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,N.trigger(this._element,zt,{relatedTarget:n})}),this._dialog,this._isAnimated())}_addEventListeners(){N.on(this._element,Jt,(n=>{if("Escape"===n.key)return this._config.keyboard?(n.preventDefault(),void this.hide()):void this._triggerBackdropTransition()})),N.on(window,qt,(()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()})),N.on(this._element,Gt,(n=>{N.one(this._element,Ut,(t=>{this._element===n.target&&this._element===t.target&&("static"!==this._config.backdrop?this._config.backdrop&&this.hide():this._triggerBackdropTransition())}))}))}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide((()=>{document.body.classList.remove(Kt),this._resetAdjustments(),this._scrollBar.reset(),N.trigger(this._element,Dt)}))}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(N.trigger(this._element,Lt).defaultPrevented)return;const n=this._element.scrollHeight>document.documentElement.clientHeight,t=this._element.style.overflowY;"hidden"===t||this._element.classList.contains(Zt)||(n||(this._element.style.overflowY="hidden"),this._element.classList.add(Zt),this._queueCallback((()=>{this._element.classList.remove(Zt),this._queueCallback((()=>{this._element.style.overflowY=t}),this._dialog)}),this._dialog),this._element.focus())}_adjustDialog(){const n=this._element.scrollHeight>document.documentElement.clientHeight,t=this._scrollBar.getWidth(),e=t>0;if(e&&!n){const n=x()?"paddingLeft":"paddingRight";this._element.style[n]=`${t}px`}if(!e&&n){const n=x()?"paddingRight":"paddingLeft";this._element.style[n]=`${t}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(n,t){return this.each((function(){const e=ne.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===e[n])throw new TypeError(`No method named "${n}"`);e[n](t)}}))}}N.on(document,Ht,'[data-bs-toggle="modal"]',(function(n){const t=l(this);["A","AREA"].includes(this.tagName)&&n.preventDefault(),N.one(t,Qt,(n=>{n.defaultPrevented||N.one(t,Dt,(()=>{A(this)&&this.focus()}))}));const e=tn.findOne(".modal.show");e&&ne.getInstance(e).hide();ne.getOrCreateInstance(t).toggle(this)})),H(ne),v(ne);const te=".bs.offcanvas",ee=".data-api",oe=`load${te}${ee}`,re="show",ie="showing",ae="hiding",se=".offcanvas.show",le=`show${te}`,de=`shown${te}`,ce=`hide${te}`,pe=`hidePrevented${te}`,Ae=`hidden${te}`,me=`resize${te}`,ue=`click${te}${ee}`,fe=`keydown.dismiss${te}`,be={backdrop:!0,keyboard:!0,scroll:!1},ge={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class he extends J{constructor(n,t){super(n,t),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return be}static get DefaultType(){return ge}static get NAME(){return"offcanvas"}toggle(n){return this._isShown?this.hide():this.show(n)}show(n){if(this._isShown)return;if(N.trigger(this._element,le,{relatedTarget:n}).defaultPrevented)return;this._isShown=!0,this._backdrop.show(),this._config.scroll||(new wt).hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(ie);this._queueCallback((()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add(re),this._element.classList.remove(ie),N.trigger(this._element,de,{relatedTarget:n})}),this._element,!0)}hide(){if(!this._isShown)return;if(N.trigger(this._element,ce).defaultPrevented)return;this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(ae),this._backdrop.hide();this._queueCallback((()=>{this._element.classList.remove(re,ae),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||(new wt).reset(),N.trigger(this._element,Ae)}),this._element,!0)}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const n=Boolean(this._config.backdrop);return new Ot({className:"offcanvas-backdrop",isVisible:n,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:n?()=>{"static"!==this._config.backdrop?this.hide():N.trigger(this._element,pe)}:null})}_initializeFocusTrap(){return new Tt({trapElement:this._element})}_addEventListeners(){N.on(this._element,fe,(n=>{"Escape"===n.key&&(this._config.keyboard?this.hide():N.trigger(this._element,pe))}))}static jQueryInterface(n){return this.each((function(){const t=he.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n]||n.startsWith("_")||"constructor"===n)throw new TypeError(`No method named "${n}"`);t[n](this)}}))}}N.on(document,ue,'[data-bs-toggle="offcanvas"]',(function(n){const t=l(this);if(["A","AREA"].includes(this.tagName)&&n.preventDefault(),m(this))return;N.one(t,Ae,(()=>{A(this)&&this.focus()}));const e=tn.findOne(se);e&&e!==t&&he.getInstance(e).hide();he.getOrCreateInstance(t).toggle(this)})),N.on(window,oe,(()=>{for(const n of tn.find(se))he.getOrCreateInstance(n).show()})),N.on(window,me,(()=>{for(const n of tn.find("[aria-modal][class*=show][class*=offcanvas-]"))"fixed"!==getComputedStyle(n).position&&he.getOrCreateInstance(n).hide()})),H(he),v(he);const xe=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),ve=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,Ee=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,Be=(n,t)=>{const e=n.nodeName.toLowerCase();return t.includes(e)?!xe.has(e)||Boolean(ve.test(n.nodeValue)||Ee.test(n.nodeValue)):t.filter((n=>n instanceof RegExp)).some((n=>n.test(e)))},ye={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]};const we={allowList:ye,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},Ie={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},$e={entry:"(string|element|function|null)",selector:"(string|element)"};class Ce extends G{constructor(n){super(),this._config=this._getConfig(n)}static get Default(){return we}static get DefaultType(){return Ie}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map((n=>this._resolvePossibleFunction(n))).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(n){return this._checkContent(n),this._config.content={...this._config.content,...n},this}toHtml(){const n=document.createElement("div");n.innerHTML=this._maybeSanitize(this._config.template);for(const[t,e]of Object.entries(this._config.content))this._setContent(n,e,t);const t=n.children[0],e=this._resolvePossibleFunction(this._config.extraClass);return e&&t.classList.add(...e.split(" ")),t}_typeCheckConfig(n){super._typeCheckConfig(n),this._checkContent(n.content)}_checkContent(n){for(const[t,e]of Object.entries(n))super._typeCheckConfig({selector:t,entry:e},$e)}_setContent(n,t,e){const o=tn.findOne(e,n);o&&((t=this._resolvePossibleFunction(t))?c(t)?this._putElementInTemplate(p(t),o):this._config.html?o.innerHTML=this._maybeSanitize(t):o.textContent=t:o.remove())}_maybeSanitize(n){return this._config.sanitize?function(n,t,e){if(!n.length)return n;if(e&&"function"==typeof e)return e(n);const o=(new window.DOMParser).parseFromString(n,"text/html"),r=[].concat(...o.body.querySelectorAll("*"));for(const n of r){const e=n.nodeName.toLowerCase();if(!Object.keys(t).includes(e)){n.remove();continue}const o=[].concat(...n.attributes),r=[].concat(t["*"]||[],t[e]||[]);for(const t of o)Be(t,r)||n.removeAttribute(t.nodeName)}return o.body.innerHTML}(n,this._config.allowList,this._config.sanitizeFn):n}_resolvePossibleFunction(n){return"function"==typeof n?n(this):n}_putElementInTemplate(n,t){if(this._config.html)return t.innerHTML="",void t.append(n);t.textContent=n.textContent}}const _e=new Set(["sanitize","allowList","sanitizeFn"]),ke="fade",Oe="show",je=".modal",Me="hide.bs.modal",Se="hover",Re="focus",Fe={AUTO:"auto",TOP:"top",RIGHT:x()?"left":"right",BOTTOM:"bottom",LEFT:x()?"right":"left"},Ve={allowList:ye,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,0],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},Te={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class Pe extends J{constructor(n,t){if(void 0===o)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(n,t),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return Ve}static get DefaultType(){return Te}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){this._isEnabled&&(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()?this._leave():this._enter())}dispose(){clearTimeout(this._timeout),N.off(this._element.closest(je),Me,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(!this._isWithContent()||!this._isEnabled)return;const n=N.trigger(this._element,this.constructor.eventName("show")),t=(u(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(n.defaultPrevented||!t)return;this._disposePopper();const e=this._getTipElement();this._element.setAttribute("aria-describedby",e.getAttribute("id"));const{container:o}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(o.append(e),N.trigger(this._element,this.constructor.eventName("inserted"))),this._popper=this._createPopper(e),e.classList.add(Oe),"ontouchstart"in document.documentElement)for(const n of[].concat(...document.body.children))N.on(n,"mouseover",f);this._queueCallback((()=>{N.trigger(this._element,this.constructor.eventName("shown")),!1===this._isHovered&&this._leave(),this._isHovered=!1}),this.tip,this._isAnimated())}hide(){if(!this._isShown())return;if(N.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented)return;if(this._getTipElement().classList.remove(Oe),"ontouchstart"in document.documentElement)for(const n of[].concat(...document.body.children))N.off(n,"mouseover",f);this._activeTrigger.click=!1,this._activeTrigger[Re]=!1,this._activeTrigger[Se]=!1,this._isHovered=null;this._queueCallback((()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),N.trigger(this._element,this.constructor.eventName("hidden")))}),this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return Boolean(this._getTitle())}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(n){const t=this._getTemplateFactory(n).toHtml();if(!t)return null;t.classList.remove(ke,Oe),t.classList.add(`bs-${this.constructor.NAME}-auto`);const e=(n=>{do{n+=Math.floor(1e6*Math.random())}while(document.getElementById(n));return n})(this.constructor.NAME).toString();return t.setAttribute("id",e),this._isAnimated()&&t.classList.add(ke),t}setContent(n){this._newContent=n,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(n){return this._templateFactory?this._templateFactory.changeContent(n):this._templateFactory=new Ce({...this._config,content:n,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{".tooltip-inner":this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(n){return this.constructor.getOrCreateInstance(n.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(ke)}_isShown(){return this.tip&&this.tip.classList.contains(Oe)}_createPopper(n){const t="function"==typeof this._config.placement?this._config.placement.call(this,n,this._element):this._config.placement,e=Fe[t.toUpperCase()];return r.createPopper(this._element,n,this._getPopperConfig(e))}_getOffset(){const{offset:n}=this._config;return"string"==typeof n?n.split(",").map((n=>Number.parseInt(n,10))):"function"==typeof n?t=>n(t,this._element):n}_resolvePossibleFunction(n){return"function"==typeof n?n.call(this._element):n}_getPopperConfig(n){const t={placement:n,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:n=>{this._getTipElement().setAttribute("data-popper-placement",n.state.placement)}}]};return{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_setListeners(){const n=this._config.trigger.split(" ");for(const t of n)if("click"===t)N.on(this._element,this.constructor.eventName("click"),this._config.selector,(n=>{this._initializeOnDelegatedTarget(n).toggle()}));else if("manual"!==t){const n=t===Se?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),e=t===Se?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");N.on(this._element,n,this._config.selector,(n=>{const t=this._initializeOnDelegatedTarget(n);t._activeTrigger["focusin"===n.type?Re:Se]=!0,t._enter()})),N.on(this._element,e,this._config.selector,(n=>{const t=this._initializeOnDelegatedTarget(n);t._activeTrigger["focusout"===n.type?Re:Se]=t._element.contains(n.relatedTarget),t._leave()}))}this._hideModalHandler=()=>{this._element&&this.hide()},N.on(this._element.closest(je),Me,this._hideModalHandler)}_fixTitle(){const n=this._element.getAttribute("title");n&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",n),this._element.setAttribute("data-bs-original-title",n),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout((()=>{this._isHovered&&this.show()}),this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout((()=>{this._isHovered||this.hide()}),this._config.delay.hide))}_setTimeout(n,t){clearTimeout(this._timeout),this._timeout=setTimeout(n,t)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(n){const t=U.getDataAttributes(this._element);for(const n of Object.keys(t))_e.has(n)&&delete t[n];return n={...t,..."object"==typeof n&&n?n:{}},n=this._mergeConfigObj(n),n=this._configAfterMerge(n),this._typeCheckConfig(n),n}_configAfterMerge(n){return n.container=!1===n.container?document.body:p(n.container),"number"==typeof n.delay&&(n.delay={show:n.delay,hide:n.delay}),"number"==typeof n.title&&(n.title=n.title.toString()),"number"==typeof n.content&&(n.content=n.content.toString()),n}_getDelegateConfig(){const n={};for(const t in this._config)this.constructor.Default[t]!==this._config[t]&&(n[t]=this._config[t]);return n.selector=!1,n.trigger="manual",n}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(n){return this.each((function(){const t=Pe.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n])throw new TypeError(`No method named "${n}"`);t[n]()}}))}}v(Pe);const Ne={...Pe.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},Le={...Pe.DefaultType,content:"(null|string|element|function)"};class De extends Pe{static get Default(){return Ne}static get DefaultType(){return Le}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(n){return this.each((function(){const t=De.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n])throw new TypeError(`No method named "${n}"`);t[n]()}}))}}v(De);const Qe=".bs.scrollspy",ze=`activate${Qe}`,qe=`click${Qe}`,Ue=`load${Qe}.data-api`,Ge="active",Je="[href]",He=".nav-link",Ke=`${He}, .nav-item > ${He}, .list-group-item`,We={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},Ze={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class Ye extends J{constructor(n,t){super(n,t),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return We}static get DefaultType(){return Ze}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const n of this._observableSections.values())this._observer.observe(n)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(n){return n.target=p(n.target)||document.body,n.rootMargin=n.offset?`${n.offset}px 0px -30%`:n.rootMargin,"string"==typeof n.threshold&&(n.threshold=n.threshold.split(",").map((n=>Number.parseFloat(n)))),n}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(N.off(this._config.target,qe),N.on(this._config.target,qe,Je,(n=>{const t=this._observableSections.get(n.target.hash);if(t){n.preventDefault();const e=this._rootElement||window,o=t.offsetTop-this._element.offsetTop;if(e.scrollTo)return void e.scrollTo({top:o,behavior:"smooth"});e.scrollTop=o}})))}_getNewObserver(){const n={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver((n=>this._observerCallback(n)),n)}_observerCallback(n){const t=n=>this._targetLinks.get(`#${n.target.id}`),e=n=>{this._previousScrollData.visibleEntryTop=n.target.offsetTop,this._process(t(n))},o=(this._rootElement||document.documentElement).scrollTop,r=o>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=o;for(const i of n){if(!i.isIntersecting){this._activeTarget=null,this._clearActiveClass(t(i));continue}const n=i.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(r&&n){if(e(i),!o)return}else r||n||e(i)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const n=tn.find(Je,this._config.target);for(const t of n){if(!t.hash||m(t))continue;const n=tn.findOne(t.hash,this._element);A(n)&&(this._targetLinks.set(t.hash,t),this._observableSections.set(t.hash,n))}}_process(n){this._activeTarget!==n&&(this._clearActiveClass(this._config.target),this._activeTarget=n,n.classList.add(Ge),this._activateParents(n),N.trigger(this._element,ze,{relatedTarget:n}))}_activateParents(n){if(n.classList.contains("dropdown-item"))tn.findOne(".dropdown-toggle",n.closest(".dropdown")).classList.add(Ge);else for(const t of tn.parents(n,".nav, .list-group"))for(const n of tn.prev(t,Ke))n.classList.add(Ge)}_clearActiveClass(n){n.classList.remove(Ge);const t=tn.find(`${Je}.${Ge}`,n);for(const n of t)n.classList.remove(Ge)}static jQueryInterface(n){return this.each((function(){const t=Ye.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n]||n.startsWith("_")||"constructor"===n)throw new TypeError(`No method named "${n}"`);t[n]()}}))}}N.on(window,Ue,(()=>{for(const n of tn.find('[data-bs-spy="scroll"]'))Ye.getOrCreateInstance(n)})),v(Ye);const Xe=".bs.tab",no=`hide${Xe}`,to=`hidden${Xe}`,eo=`show${Xe}`,oo=`shown${Xe}`,ro=`click${Xe}`,io=`keydown${Xe}`,ao=`load${Xe}`,so="ArrowLeft",lo="ArrowRight",co="ArrowUp",po="ArrowDown",Ao="active",mo="fade",uo="show",fo=":not(.dropdown-toggle)",bo='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',go=`${`.nav-link${fo}, .list-group-item${fo}, [role="tab"]${fo}`}, ${bo}`,ho=`.${Ao}[data-bs-toggle="tab"], .${Ao}[data-bs-toggle="pill"], .${Ao}[data-bs-toggle="list"]`;class xo extends J{constructor(n){super(n),this._parent=this._element.closest('.list-group, .nav, [role="tablist"]'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),N.on(this._element,io,(n=>this._keydown(n))))}static get NAME(){return"tab"}show(){const n=this._element;if(this._elemIsActive(n))return;const t=this._getActiveElem(),e=t?N.trigger(t,no,{relatedTarget:n}):null;N.trigger(n,eo,{relatedTarget:t}).defaultPrevented||e&&e.defaultPrevented||(this._deactivate(t,n),this._activate(n,t))}_activate(n,t){if(!n)return;n.classList.add(Ao),this._activate(l(n));this._queueCallback((()=>{"tab"===n.getAttribute("role")?(n.removeAttribute("tabindex"),n.setAttribute("aria-selected",!0),this._toggleDropDown(n,!0),N.trigger(n,oo,{relatedTarget:t})):n.classList.add(uo)}),n,n.classList.contains(mo))}_deactivate(n,t){if(!n)return;n.classList.remove(Ao),n.blur(),this._deactivate(l(n));this._queueCallback((()=>{"tab"===n.getAttribute("role")?(n.setAttribute("aria-selected",!1),n.setAttribute("tabindex","-1"),this._toggleDropDown(n,!1),N.trigger(n,to,{relatedTarget:t})):n.classList.remove(uo)}),n,n.classList.contains(mo))}_keydown(n){if(![so,lo,co,po].includes(n.key))return;n.stopPropagation(),n.preventDefault();const t=[lo,po].includes(n.key),e=y(this._getChildren().filter((n=>!m(n))),n.target,t,!0);e&&(e.focus({preventScroll:!0}),xo.getOrCreateInstance(e).show())}_getChildren(){return tn.find(go,this._parent)}_getActiveElem(){return this._getChildren().find((n=>this._elemIsActive(n)))||null}_setInitialAttributes(n,t){this._setAttributeIfNotExists(n,"role","tablist");for(const n of t)this._setInitialAttributesOnChild(n)}_setInitialAttributesOnChild(n){n=this._getInnerElement(n);const t=this._elemIsActive(n),e=this._getOuterElement(n);n.setAttribute("aria-selected",t),e!==n&&this._setAttributeIfNotExists(e,"role","presentation"),t||n.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(n,"role","tab"),this._setInitialAttributesOnTargetPanel(n)}_setInitialAttributesOnTargetPanel(n){const t=l(n);t&&(this._setAttributeIfNotExists(t,"role","tabpanel"),n.id&&this._setAttributeIfNotExists(t,"aria-labelledby",`#${n.id}`))}_toggleDropDown(n,t){const e=this._getOuterElement(n);if(!e.classList.contains("dropdown"))return;const o=(n,o)=>{const r=tn.findOne(n,e);r&&r.classList.toggle(o,t)};o(".dropdown-toggle",Ao),o(".dropdown-menu",uo),e.setAttribute("aria-expanded",t)}_setAttributeIfNotExists(n,t,e){n.hasAttribute(t)||n.setAttribute(t,e)}_elemIsActive(n){return n.classList.contains(Ao)}_getInnerElement(n){return n.matches(go)?n:tn.findOne(go,n)}_getOuterElement(n){return n.closest(".nav-item, .list-group-item")||n}static jQueryInterface(n){return this.each((function(){const t=xo.getOrCreateInstance(this);if("string"==typeof n){if(void 0===t[n]||n.startsWith("_")||"constructor"===n)throw new TypeError(`No method named "${n}"`);t[n]()}}))}}N.on(document,ro,bo,(function(n){["A","AREA"].includes(this.tagName)&&n.preventDefault(),m(this)||xo.getOrCreateInstance(this).show()})),N.on(window,ao,(()=>{for(const n of tn.find(ho))xo.getOrCreateInstance(n)})),v(xo);const vo=".bs.toast",Eo=`mouseover${vo}`,Bo=`mouseout${vo}`,yo=`focusin${vo}`,wo=`focusout${vo}`,Io=`hide${vo}`,$o=`hidden${vo}`,Co=`show${vo}`,_o=`shown${vo}`,ko="hide",Oo="show",jo="showing",Mo={animation:"boolean",autohide:"boolean",delay:"number"},So={animation:!0,autohide:!0,delay:5e3};class Ro extends J{constructor(n,t){super(n,t),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return So}static get DefaultType(){return Mo}static get NAME(){return"toast"}show(){if(N.trigger(this._element,Co).defaultPrevented)return;this._clearTimeout(),this._config.animation&&this._element.classList.add("fade");this._element.classList.remove(ko),b(this._element),this._element.classList.add(Oo,jo),this._queueCallback((()=>{this._element.classList.remove(jo),N.trigger(this._element,_o),this._maybeScheduleHide()}),this._element,this._config.animation)}hide(){if(!this.isShown())return;if(N.trigger(this._element,Io).defaultPrevented)return;this._element.classList.add(jo),this._queueCallback((()=>{this._element.classList.add(ko),this._element.classList.remove(jo,Oo),N.trigger(this._element,$o)}),this._element,this._config.animation)}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(Oo),super.dispose()}isShown(){return this._element.classList.contains(Oo)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout((()=>{this.hide()}),this._config.delay)))}_onInteraction(n,t){switch(n.type){case"mouseover":case"mouseout":this._hasMouseInteraction=t;break;case"focusin":case"focusout":this._hasKeyboardInteraction=t}if(t)return void this._clearTimeout();const e=n.relatedTarget;this._element===e||this._element.contains(e)||this._maybeScheduleHide()}_setListeners(){N.on(this._element,Eo,(n=>this._onInteraction(n,!0))),N.on(this._element,Bo,(n=>this._onInteraction(n,!1))),N.on(this._element,yo,(n=>this._onInteraction(n,!0))),N.on(this._element,wo,(n=>this._onInteraction(n,!1)))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(n){return this.each((function(){const t=Ro.getOrCreateInstance(this,n);if("string"==typeof n){if(void 0===t[n])throw new TypeError(`No method named "${n}"`);t[n](this)}}))}}H(Ro),v(Ro)},"./node_modules/call-bind/callBound.js":(n,t,e)=>{"use strict";var o=e("./node_modules/get-intrinsic/index.js"),r=e("./node_modules/call-bind/index.js"),i=r(o("String.prototype.indexOf"));n.exports=function(n,t){var e=o(n,!!t);return"function"==typeof e&&i(n,".prototype.")>-1?r(e):e}},"./node_modules/call-bind/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/function-bind/index.js"),r=e("./node_modules/get-intrinsic/index.js"),i=r("%Function.prototype.apply%"),a=r("%Function.prototype.call%"),s=r("%Reflect.apply%",!0)||o.call(a,i),l=r("%Object.getOwnPropertyDescriptor%",!0),d=r("%Object.defineProperty%",!0),c=r("%Math.max%");if(d)try{d({},"a",{value:1})}catch(n){d=null}n.exports=function(n){var t=s(o,a,arguments);if(l&&d){var e=l(t,"length");e.configurable&&d(t,"length",{value:1+c(0,n.length-(arguments.length-1))})}return t};var p=function(){return s(o,i,arguments)};d?d(n.exports,"apply",{value:p}):n.exports.apply=p},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/scss/style.scss":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/css-loader/dist/runtime/sourceMaps.js"),r=e.n(o),i=e("./node_modules/css-loader/dist/runtime/api.js"),a=e.n(i)()(r());a.push([n.id,':root {\n  --bs-blue: #0d6efd;\n  --bs-indigo: #6610f2;\n  --bs-purple: #6f42c1;\n  --bs-pink: #d63384;\n  --bs-red: #dc3545;\n  --bs-orange: #fd7e14;\n  --bs-yellow: #ffc107;\n  --bs-green: #198754;\n  --bs-teal: #20c997;\n  --bs-cyan: #0dcaf0;\n  --bs-black: #000;\n  --bs-white: #fff;\n  --bs-gray: #6c757d;\n  --bs-gray-dark: #343a40;\n  --bs-gray-100: #f8f9fa;\n  --bs-gray-200: #e9ecef;\n  --bs-gray-300: #dee2e6;\n  --bs-gray-400: #ced4da;\n  --bs-gray-500: #adb5bd;\n  --bs-gray-600: #6c757d;\n  --bs-gray-700: #495057;\n  --bs-gray-800: #343a40;\n  --bs-gray-900: #212529;\n  --bs-primary: #0d6efd;\n  --bs-secondary: #6c757d;\n  --bs-success: #198754;\n  --bs-info: #0dcaf0;\n  --bs-warning: #ffc107;\n  --bs-danger: #dc3545;\n  --bs-light: #f8f9fa;\n  --bs-dark: #212529;\n  --bs-primary-rgb: 13, 110, 253;\n  --bs-secondary-rgb: 108, 117, 125;\n  --bs-success-rgb: 25, 135, 84;\n  --bs-info-rgb: 13, 202, 240;\n  --bs-warning-rgb: 255, 193, 7;\n  --bs-danger-rgb: 220, 53, 69;\n  --bs-light-rgb: 248, 249, 250;\n  --bs-dark-rgb: 33, 37, 41;\n  --bs-white-rgb: 255, 255, 255;\n  --bs-black-rgb: 0, 0, 0;\n  --bs-body-color-rgb: 33, 37, 41;\n  --bs-body-bg-rgb: 255, 255, 255;\n  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\n  --bs-body-font-family: var(--bs-font-sans-serif);\n  --bs-body-font-size: 1rem;\n  --bs-body-font-weight: 400;\n  --bs-body-line-height: 1.5;\n  --bs-body-color: #212529;\n  --bs-body-bg: #fff;\n  --bs-border-width: 1px;\n  --bs-border-style: solid;\n  --bs-border-color: #dee2e6;\n  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);\n  --bs-border-radius: 0.375rem;\n  --bs-border-radius-sm: 0.25rem;\n  --bs-border-radius-lg: 0.5rem;\n  --bs-border-radius-xl: 1rem;\n  --bs-border-radius-2xl: 2rem;\n  --bs-border-radius-pill: 50rem;\n  --bs-link-color: #0d6efd;\n  --bs-link-hover-color: #0a58ca;\n  --bs-code-color: #d63384;\n  --bs-highlight-bg: #fff3cd;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  :root {\n    scroll-behavior: smooth;\n  }\n}\n\nbody {\n  margin: 0;\n  font-family: var(--bs-body-font-family);\n  font-size: var(--bs-body-font-size);\n  font-weight: var(--bs-body-font-weight);\n  line-height: var(--bs-body-line-height);\n  color: var(--bs-body-color);\n  text-align: var(--bs-body-text-align);\n  background-color: var(--bs-body-bg);\n  -webkit-text-size-adjust: 100%;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nhr {\n  margin: 1rem 0;\n  color: inherit;\n  border: 0;\n  border-top: 1px solid;\n  opacity: 0.25;\n}\n\nh6, h5, h4, h3, h2, h1 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.2;\n}\n\nh1 {\n  font-size: calc(1.375rem + 1.5vw);\n}\n@media (min-width: 1200px) {\n  h1 {\n    font-size: 2.5rem;\n  }\n}\n\nh2 {\n  font-size: calc(1.325rem + 0.9vw);\n}\n@media (min-width: 1200px) {\n  h2 {\n    font-size: 2rem;\n  }\n}\n\nh3 {\n  font-size: calc(1.3rem + 0.6vw);\n}\n@media (min-width: 1200px) {\n  h3 {\n    font-size: 1.75rem;\n  }\n}\n\nh4 {\n  font-size: calc(1.275rem + 0.3vw);\n}\n@media (min-width: 1200px) {\n  h4 {\n    font-size: 1.5rem;\n  }\n}\n\nh5 {\n  font-size: 1.25rem;\n}\n\nh6 {\n  font-size: 1rem;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nabbr[title] {\n  text-decoration: underline dotted;\n  cursor: help;\n  text-decoration-skip-ink: none;\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin-bottom: 0.5rem;\n  margin-left: 0;\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\nsmall {\n  font-size: 0.875em;\n}\n\nmark {\n  padding: 0.1875em;\n  background-color: var(--bs-highlight-bg);\n}\n\nsub,\nsup {\n  position: relative;\n  font-size: 0.75em;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\na {\n  color: var(--bs-link-color);\n  text-decoration: underline;\n}\na:hover {\n  color: var(--bs-link-hover-color);\n}\n\na:not([href]):not([class]), a:not([href]):not([class]):hover {\n  color: inherit;\n  text-decoration: none;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: var(--bs-font-monospace);\n  font-size: 1em;\n}\n\npre {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  font-size: 0.875em;\n}\npre code {\n  font-size: inherit;\n  color: inherit;\n  word-break: normal;\n}\n\ncode {\n  font-size: 0.875em;\n  color: var(--bs-code-color);\n  word-wrap: break-word;\n}\na > code {\n  color: inherit;\n}\n\nkbd {\n  padding: 0.1875rem 0.375rem;\n  font-size: 0.875em;\n  color: var(--bs-body-bg);\n  background-color: var(--bs-body-color);\n  border-radius: 0.25rem;\n}\nkbd kbd {\n  padding: 0;\n  font-size: 1em;\n}\n\nfigure {\n  margin: 0 0 1rem;\n}\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  color: #6c757d;\n  text-align: left;\n}\n\nth {\n  text-align: inherit;\n  text-align: -webkit-match-parent;\n}\n\nthead,\ntbody,\ntfoot,\ntr,\ntd,\nth {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\nlabel {\n  display: inline-block;\n}\n\nbutton {\n  border-radius: 0;\n}\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[role=button] {\n  cursor: pointer;\n}\n\nselect {\n  word-wrap: normal;\n}\nselect:disabled {\n  opacity: 1;\n}\n\n[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\nbutton:not(:disabled),\n[type=button]:not(:disabled),\n[type=reset]:not(:disabled),\n[type=submit]:not(:disabled) {\n  cursor: pointer;\n}\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\nlegend {\n  float: left;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: calc(1.275rem + 0.3vw);\n  line-height: inherit;\n}\n@media (min-width: 1200px) {\n  legend {\n    font-size: 1.5rem;\n  }\n}\nlegend + * {\n  clear: left;\n}\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  outline-offset: -2px;\n  -webkit-appearance: textfield;\n}\n\n/* rtl:raw:\n[type="tel"],\n[type="url"],\n[type="email"],\n[type="number"] {\n  direction: ltr;\n}\n*/\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n::file-selector-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\noutput {\n  display: inline-block;\n}\n\niframe {\n  border: 0;\n}\n\nsummary {\n  display: list-item;\n  cursor: pointer;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n[hidden] {\n  display: none !important;\n}\n\n.container,\n.container-fluid,\n.container-xxl,\n.container-xl,\n.container-lg,\n.container-md,\n.container-sm {\n  --bs-gutter-x: 1.5rem;\n  --bs-gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--bs-gutter-x) * 0.5);\n  padding-left: calc(var(--bs-gutter-x) * 0.5);\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@media (min-width: 576px) {\n  .container-sm, .container {\n    max-width: 540px;\n  }\n}\n@media (min-width: 768px) {\n  .container-md, .container-sm, .container {\n    max-width: 720px;\n  }\n}\n@media (min-width: 992px) {\n  .container-lg, .container-md, .container-sm, .container {\n    max-width: 960px;\n  }\n}\n@media (min-width: 1200px) {\n  .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1140px;\n  }\n}\n@media (min-width: 1400px) {\n  .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1320px;\n  }\n}\n.row {\n  --bs-gutter-x: 1.5rem;\n  --bs-gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * var(--bs-gutter-y));\n  margin-right: calc(-0.5 * var(--bs-gutter-x));\n  margin-left: calc(-0.5 * var(--bs-gutter-x));\n}\n.row > * {\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%;\n  padding-right: calc(var(--bs-gutter-x) * 0.5);\n  padding-left: calc(var(--bs-gutter-x) * 0.5);\n  margin-top: var(--bs-gutter-y);\n}\n\n.col {\n  flex: 1 0 0%;\n}\n\n.row-cols-auto > * {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.row-cols-1 > * {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.row-cols-2 > * {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.row-cols-3 > * {\n  flex: 0 0 auto;\n  width: 33.3333333333%;\n}\n\n.row-cols-4 > * {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.row-cols-5 > * {\n  flex: 0 0 auto;\n  width: 20%;\n}\n\n.row-cols-6 > * {\n  flex: 0 0 auto;\n  width: 16.6666666667%;\n}\n\n.col-auto {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.col-1 {\n  flex: 0 0 auto;\n  width: 8.33333333%;\n}\n\n.col-2 {\n  flex: 0 0 auto;\n  width: 16.66666667%;\n}\n\n.col-3 {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.col-4 {\n  flex: 0 0 auto;\n  width: 33.33333333%;\n}\n\n.col-5 {\n  flex: 0 0 auto;\n  width: 41.66666667%;\n}\n\n.col-6 {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.col-7 {\n  flex: 0 0 auto;\n  width: 58.33333333%;\n}\n\n.col-8 {\n  flex: 0 0 auto;\n  width: 66.66666667%;\n}\n\n.col-9 {\n  flex: 0 0 auto;\n  width: 75%;\n}\n\n.col-10 {\n  flex: 0 0 auto;\n  width: 83.33333333%;\n}\n\n.col-11 {\n  flex: 0 0 auto;\n  width: 91.66666667%;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.offset-1 {\n  margin-left: 8.33333333%;\n}\n\n.offset-2 {\n  margin-left: 16.66666667%;\n}\n\n.offset-3 {\n  margin-left: 25%;\n}\n\n.offset-4 {\n  margin-left: 33.33333333%;\n}\n\n.offset-5 {\n  margin-left: 41.66666667%;\n}\n\n.offset-6 {\n  margin-left: 50%;\n}\n\n.offset-7 {\n  margin-left: 58.33333333%;\n}\n\n.offset-8 {\n  margin-left: 66.66666667%;\n}\n\n.offset-9 {\n  margin-left: 75%;\n}\n\n.offset-10 {\n  margin-left: 83.33333333%;\n}\n\n.offset-11 {\n  margin-left: 91.66666667%;\n}\n\n.g-0,\n.gx-0 {\n  --bs-gutter-x: 0;\n}\n\n.g-0,\n.gy-0 {\n  --bs-gutter-y: 0;\n}\n\n.g-1,\n.gx-1 {\n  --bs-gutter-x: 0.25rem;\n}\n\n.g-1,\n.gy-1 {\n  --bs-gutter-y: 0.25rem;\n}\n\n.g-2,\n.gx-2 {\n  --bs-gutter-x: 0.5rem;\n}\n\n.g-2,\n.gy-2 {\n  --bs-gutter-y: 0.5rem;\n}\n\n.g-3,\n.gx-3 {\n  --bs-gutter-x: 1rem;\n}\n\n.g-3,\n.gy-3 {\n  --bs-gutter-y: 1rem;\n}\n\n.g-4,\n.gx-4 {\n  --bs-gutter-x: 1.5rem;\n}\n\n.g-4,\n.gy-4 {\n  --bs-gutter-y: 1.5rem;\n}\n\n.g-5,\n.gx-5 {\n  --bs-gutter-x: 3rem;\n}\n\n.g-5,\n.gy-5 {\n  --bs-gutter-y: 3rem;\n}\n\n@media (min-width: 576px) {\n  .col-sm {\n    flex: 1 0 0%;\n  }\n  .row-cols-sm-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-sm-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-sm-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-sm-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-sm-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-sm-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-sm-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-sm-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-sm-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-sm-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-sm-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-sm-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-sm-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-sm-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-sm-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-sm-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-sm-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-sm-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-sm-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-sm-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-sm-0 {\n    margin-left: 0;\n  }\n  .offset-sm-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-sm-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-sm-3 {\n    margin-left: 25%;\n  }\n  .offset-sm-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-sm-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-sm-6 {\n    margin-left: 50%;\n  }\n  .offset-sm-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-sm-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-sm-9 {\n    margin-left: 75%;\n  }\n  .offset-sm-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-sm-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-sm-0,\n  .gx-sm-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-sm-0,\n  .gy-sm-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-sm-1,\n  .gx-sm-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-sm-1,\n  .gy-sm-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-sm-2,\n  .gx-sm-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-sm-2,\n  .gy-sm-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-sm-3,\n  .gx-sm-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-sm-3,\n  .gy-sm-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-sm-4,\n  .gx-sm-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-sm-4,\n  .gy-sm-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-sm-5,\n  .gx-sm-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-sm-5,\n  .gy-sm-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 768px) {\n  .col-md {\n    flex: 1 0 0%;\n  }\n  .row-cols-md-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-md-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-md-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-md-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-md-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-md-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-md-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-md-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-md-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-md-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-md-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-md-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-md-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-md-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-md-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-md-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-md-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-md-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-md-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-md-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-md-0 {\n    margin-left: 0;\n  }\n  .offset-md-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-md-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-md-3 {\n    margin-left: 25%;\n  }\n  .offset-md-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-md-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-md-6 {\n    margin-left: 50%;\n  }\n  .offset-md-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-md-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-md-9 {\n    margin-left: 75%;\n  }\n  .offset-md-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-md-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-md-0,\n  .gx-md-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-md-0,\n  .gy-md-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-md-1,\n  .gx-md-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-md-1,\n  .gy-md-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-md-2,\n  .gx-md-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-md-2,\n  .gy-md-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-md-3,\n  .gx-md-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-md-3,\n  .gy-md-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-md-4,\n  .gx-md-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-md-4,\n  .gy-md-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-md-5,\n  .gx-md-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-md-5,\n  .gy-md-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg {\n    flex: 1 0 0%;\n  }\n  .row-cols-lg-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-lg-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-lg-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-lg-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-lg-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-lg-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-lg-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-lg-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-lg-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-lg-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-lg-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-lg-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-lg-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-lg-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-lg-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-lg-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-lg-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-lg-0 {\n    margin-left: 0;\n  }\n  .offset-lg-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-lg-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-lg-3 {\n    margin-left: 25%;\n  }\n  .offset-lg-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-lg-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-lg-6 {\n    margin-left: 50%;\n  }\n  .offset-lg-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-lg-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-lg-9 {\n    margin-left: 75%;\n  }\n  .offset-lg-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-lg-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-lg-0,\n  .gx-lg-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-lg-0,\n  .gy-lg-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-lg-1,\n  .gx-lg-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-lg-1,\n  .gy-lg-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-lg-2,\n  .gx-lg-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-lg-2,\n  .gy-lg-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-lg-3,\n  .gx-lg-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-lg-3,\n  .gy-lg-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-lg-4,\n  .gx-lg-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-lg-4,\n  .gy-lg-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-lg-5,\n  .gx-lg-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-lg-5,\n  .gy-lg-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 1200px) {\n  .col-xl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xl-0 {\n    margin-left: 0;\n  }\n  .offset-xl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xl-3 {\n    margin-left: 25%;\n  }\n  .offset-xl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xl-6 {\n    margin-left: 50%;\n  }\n  .offset-xl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xl-9 {\n    margin-left: 75%;\n  }\n  .offset-xl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xl-0,\n  .gx-xl-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-xl-0,\n  .gy-xl-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-xl-1,\n  .gx-xl-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-xl-1,\n  .gy-xl-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-xl-2,\n  .gx-xl-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-xl-2,\n  .gy-xl-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-xl-3,\n  .gx-xl-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-xl-3,\n  .gy-xl-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-xl-4,\n  .gx-xl-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-xl-4,\n  .gy-xl-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-xl-5,\n  .gx-xl-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-xl-5,\n  .gy-xl-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 1400px) {\n  .col-xxl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xxl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xxl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xxl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xxl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xxl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xxl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xxl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xxl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xxl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xxl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xxl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xxl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xxl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xxl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xxl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xxl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xxl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xxl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xxl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xxl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xxl-0 {\n    margin-left: 0;\n  }\n  .offset-xxl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xxl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xxl-3 {\n    margin-left: 25%;\n  }\n  .offset-xxl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xxl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xxl-6 {\n    margin-left: 50%;\n  }\n  .offset-xxl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xxl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xxl-9 {\n    margin-left: 75%;\n  }\n  .offset-xxl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xxl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xxl-0,\n  .gx-xxl-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-xxl-0,\n  .gy-xxl-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-xxl-1,\n  .gx-xxl-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-xxl-1,\n  .gy-xxl-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-xxl-2,\n  .gx-xxl-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-xxl-2,\n  .gy-xxl-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-xxl-3,\n  .gx-xxl-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-xxl-3,\n  .gy-xxl-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-xxl-4,\n  .gx-xxl-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-xxl-4,\n  .gy-xxl-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-xxl-5,\n  .gx-xxl-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-xxl-5,\n  .gy-xxl-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n.table {\n  --bs-table-color: var(--bs-body-color);\n  --bs-table-bg: transparent;\n  --bs-table-border-color: var(--bs-border-color);\n  --bs-table-accent-bg: transparent;\n  --bs-table-striped-color: var(--bs-body-color);\n  --bs-table-striped-bg: rgba(0, 0, 0, 0.05);\n  --bs-table-active-color: var(--bs-body-color);\n  --bs-table-active-bg: rgba(0, 0, 0, 0.1);\n  --bs-table-hover-color: var(--bs-body-color);\n  --bs-table-hover-bg: rgba(0, 0, 0, 0.075);\n  width: 100%;\n  margin-bottom: 1rem;\n  color: var(--bs-table-color);\n  vertical-align: top;\n  border-color: var(--bs-table-border-color);\n}\n.table > :not(caption) > * > * {\n  padding: 0.5rem 0.5rem;\n  background-color: var(--bs-table-bg);\n  border-bottom-width: 1px;\n  box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);\n}\n.table > tbody {\n  vertical-align: inherit;\n}\n.table > thead {\n  vertical-align: bottom;\n}\n\n.table-group-divider {\n  border-top: 2px solid currentcolor;\n}\n\n.caption-top {\n  caption-side: top;\n}\n\n.table-sm > :not(caption) > * > * {\n  padding: 0.25rem 0.25rem;\n}\n\n.table-bordered > :not(caption) > * {\n  border-width: 1px 0;\n}\n.table-bordered > :not(caption) > * > * {\n  border-width: 0 1px;\n}\n\n.table-borderless > :not(caption) > * > * {\n  border-bottom-width: 0;\n}\n.table-borderless > :not(:first-child) {\n  border-top-width: 0;\n}\n\n.table-striped > tbody > tr:nth-of-type(odd) > * {\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\n  color: var(--bs-table-striped-color);\n}\n\n.table-striped-columns > :not(caption) > tr > :nth-child(even) {\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\n  color: var(--bs-table-striped-color);\n}\n\n.table-active {\n  --bs-table-accent-bg: var(--bs-table-active-bg);\n  color: var(--bs-table-active-color);\n}\n\n.table-hover > tbody > tr:hover > * {\n  --bs-table-accent-bg: var(--bs-table-hover-bg);\n  color: var(--bs-table-hover-color);\n}\n\n.table-primary {\n  --bs-table-color: #000;\n  --bs-table-bg: #cfe2ff;\n  --bs-table-border-color: #bacbe6;\n  --bs-table-striped-bg: #c5d7f2;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #bacbe6;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #bfd1ec;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-secondary {\n  --bs-table-color: #000;\n  --bs-table-bg: #e2e3e5;\n  --bs-table-border-color: #cbccce;\n  --bs-table-striped-bg: #d7d8da;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #cbccce;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #d1d2d4;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-success {\n  --bs-table-color: #000;\n  --bs-table-bg: #d1e7dd;\n  --bs-table-border-color: #bcd0c7;\n  --bs-table-striped-bg: #c7dbd2;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #bcd0c7;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #c1d6cc;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-info {\n  --bs-table-color: #000;\n  --bs-table-bg: #cff4fc;\n  --bs-table-border-color: #badce3;\n  --bs-table-striped-bg: #c5e8ef;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #badce3;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #bfe2e9;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-warning {\n  --bs-table-color: #000;\n  --bs-table-bg: #fff3cd;\n  --bs-table-border-color: #e6dbb9;\n  --bs-table-striped-bg: #f2e7c3;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #e6dbb9;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #ece1be;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-danger {\n  --bs-table-color: #000;\n  --bs-table-bg: #f8d7da;\n  --bs-table-border-color: #dfc2c4;\n  --bs-table-striped-bg: #eccccf;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #dfc2c4;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #e5c7ca;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-light {\n  --bs-table-color: #000;\n  --bs-table-bg: #f8f9fa;\n  --bs-table-border-color: #dfe0e1;\n  --bs-table-striped-bg: #ecedee;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #dfe0e1;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #e5e6e7;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-dark {\n  --bs-table-color: #fff;\n  --bs-table-bg: #212529;\n  --bs-table-border-color: #373b3e;\n  --bs-table-striped-bg: #2c3034;\n  --bs-table-striped-color: #fff;\n  --bs-table-active-bg: #373b3e;\n  --bs-table-active-color: #fff;\n  --bs-table-hover-bg: #323539;\n  --bs-table-hover-color: #fff;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-responsive {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 575.98px) {\n  .table-responsive-sm {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 767.98px) {\n  .table-responsive-md {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 991.98px) {\n  .table-responsive-lg {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1199.98px) {\n  .table-responsive-xl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1399.98px) {\n  .table-responsive-xxl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n.btn {\n  --bs-btn-padding-x: 0.75rem;\n  --bs-btn-padding-y: 0.375rem;\n  --bs-btn-font-family: ;\n  --bs-btn-font-size: 1rem;\n  --bs-btn-font-weight: 400;\n  --bs-btn-line-height: 1.5;\n  --bs-btn-color: #212529;\n  --bs-btn-bg: transparent;\n  --bs-btn-border-width: 1px;\n  --bs-btn-border-color: transparent;\n  --bs-btn-border-radius: 0.375rem;\n  --bs-btn-hover-border-color: transparent;\n  --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);\n  --bs-btn-disabled-opacity: 0.65;\n  --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);\n  display: inline-block;\n  padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);\n  font-family: var(--bs-btn-font-family);\n  font-size: var(--bs-btn-font-size);\n  font-weight: var(--bs-btn-font-weight);\n  line-height: var(--bs-btn-line-height);\n  color: var(--bs-btn-color);\n  text-align: center;\n  text-decoration: none;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);\n  border-radius: var(--bs-btn-border-radius);\n  background-color: var(--bs-btn-bg);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .btn {\n    transition: none;\n  }\n}\n.btn:hover {\n  color: var(--bs-btn-hover-color);\n  background-color: var(--bs-btn-hover-bg);\n  border-color: var(--bs-btn-hover-border-color);\n}\n.btn-check + .btn:hover {\n  color: var(--bs-btn-color);\n  background-color: var(--bs-btn-bg);\n  border-color: var(--bs-btn-border-color);\n}\n.btn:focus-visible {\n  color: var(--bs-btn-hover-color);\n  background-color: var(--bs-btn-hover-bg);\n  border-color: var(--bs-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn-check:focus-visible + .btn {\n  border-color: var(--bs-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn-check:checked + .btn, :not(.btn-check) + .btn:active, .btn:first-child:active, .btn.active, .btn.show {\n  color: var(--bs-btn-active-color);\n  background-color: var(--bs-btn-active-bg);\n  border-color: var(--bs-btn-active-border-color);\n}\n.btn-check:checked + .btn:focus-visible, :not(.btn-check) + .btn:active:focus-visible, .btn:first-child:active:focus-visible, .btn.active:focus-visible, .btn.show:focus-visible {\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn:disabled, .btn.disabled, fieldset:disabled .btn {\n  color: var(--bs-btn-disabled-color);\n  pointer-events: none;\n  background-color: var(--bs-btn-disabled-bg);\n  border-color: var(--bs-btn-disabled-border-color);\n  opacity: var(--bs-btn-disabled-opacity);\n}\n\n.btn-primary {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #0d6efd;\n  --bs-btn-border-color: #0d6efd;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #0b5ed7;\n  --bs-btn-hover-border-color: #0a58ca;\n  --bs-btn-focus-shadow-rgb: 49, 132, 253;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #0a58ca;\n  --bs-btn-active-border-color: #0a53be;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #0d6efd;\n  --bs-btn-disabled-border-color: #0d6efd;\n}\n\n.btn-secondary {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #6c757d;\n  --bs-btn-border-color: #6c757d;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #5c636a;\n  --bs-btn-hover-border-color: #565e64;\n  --bs-btn-focus-shadow-rgb: 130, 138, 145;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #565e64;\n  --bs-btn-active-border-color: #51585e;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #6c757d;\n  --bs-btn-disabled-border-color: #6c757d;\n}\n\n.btn-success {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #198754;\n  --bs-btn-border-color: #198754;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #157347;\n  --bs-btn-hover-border-color: #146c43;\n  --bs-btn-focus-shadow-rgb: 60, 153, 110;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #146c43;\n  --bs-btn-active-border-color: #13653f;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #198754;\n  --bs-btn-disabled-border-color: #198754;\n}\n\n.btn-info {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #0dcaf0;\n  --bs-btn-border-color: #0dcaf0;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #31d2f2;\n  --bs-btn-hover-border-color: #25cff2;\n  --bs-btn-focus-shadow-rgb: 11, 172, 204;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #3dd5f3;\n  --bs-btn-active-border-color: #25cff2;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #0dcaf0;\n  --bs-btn-disabled-border-color: #0dcaf0;\n}\n\n.btn-warning {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #ffc107;\n  --bs-btn-border-color: #ffc107;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #ffca2c;\n  --bs-btn-hover-border-color: #ffc720;\n  --bs-btn-focus-shadow-rgb: 217, 164, 6;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #ffcd39;\n  --bs-btn-active-border-color: #ffc720;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #ffc107;\n  --bs-btn-disabled-border-color: #ffc107;\n}\n\n.btn-danger {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #dc3545;\n  --bs-btn-border-color: #dc3545;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #bb2d3b;\n  --bs-btn-hover-border-color: #b02a37;\n  --bs-btn-focus-shadow-rgb: 225, 83, 97;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #b02a37;\n  --bs-btn-active-border-color: #a52834;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #dc3545;\n  --bs-btn-disabled-border-color: #dc3545;\n}\n\n.btn-light {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #f8f9fa;\n  --bs-btn-border-color: #f8f9fa;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #d3d4d5;\n  --bs-btn-hover-border-color: #c6c7c8;\n  --bs-btn-focus-shadow-rgb: 211, 212, 213;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #c6c7c8;\n  --bs-btn-active-border-color: #babbbc;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #f8f9fa;\n  --bs-btn-disabled-border-color: #f8f9fa;\n}\n\n.btn-dark {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #212529;\n  --bs-btn-border-color: #212529;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #424649;\n  --bs-btn-hover-border-color: #373b3e;\n  --bs-btn-focus-shadow-rgb: 66, 70, 73;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #4d5154;\n  --bs-btn-active-border-color: #373b3e;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #212529;\n  --bs-btn-disabled-border-color: #212529;\n}\n\n.btn-outline-primary {\n  --bs-btn-color: #0d6efd;\n  --bs-btn-border-color: #0d6efd;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #0d6efd;\n  --bs-btn-hover-border-color: #0d6efd;\n  --bs-btn-focus-shadow-rgb: 13, 110, 253;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #0d6efd;\n  --bs-btn-active-border-color: #0d6efd;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #0d6efd;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #0d6efd;\n  --bs-gradient: none;\n}\n\n.btn-outline-secondary {\n  --bs-btn-color: #6c757d;\n  --bs-btn-border-color: #6c757d;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #6c757d;\n  --bs-btn-hover-border-color: #6c757d;\n  --bs-btn-focus-shadow-rgb: 108, 117, 125;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #6c757d;\n  --bs-btn-active-border-color: #6c757d;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #6c757d;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #6c757d;\n  --bs-gradient: none;\n}\n\n.btn-outline-success {\n  --bs-btn-color: #198754;\n  --bs-btn-border-color: #198754;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #198754;\n  --bs-btn-hover-border-color: #198754;\n  --bs-btn-focus-shadow-rgb: 25, 135, 84;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #198754;\n  --bs-btn-active-border-color: #198754;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #198754;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #198754;\n  --bs-gradient: none;\n}\n\n.btn-outline-info {\n  --bs-btn-color: #0dcaf0;\n  --bs-btn-border-color: #0dcaf0;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #0dcaf0;\n  --bs-btn-hover-border-color: #0dcaf0;\n  --bs-btn-focus-shadow-rgb: 13, 202, 240;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #0dcaf0;\n  --bs-btn-active-border-color: #0dcaf0;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #0dcaf0;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #0dcaf0;\n  --bs-gradient: none;\n}\n\n.btn-outline-warning {\n  --bs-btn-color: #ffc107;\n  --bs-btn-border-color: #ffc107;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #ffc107;\n  --bs-btn-hover-border-color: #ffc107;\n  --bs-btn-focus-shadow-rgb: 255, 193, 7;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #ffc107;\n  --bs-btn-active-border-color: #ffc107;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #ffc107;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #ffc107;\n  --bs-gradient: none;\n}\n\n.btn-outline-danger {\n  --bs-btn-color: #dc3545;\n  --bs-btn-border-color: #dc3545;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #dc3545;\n  --bs-btn-hover-border-color: #dc3545;\n  --bs-btn-focus-shadow-rgb: 220, 53, 69;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #dc3545;\n  --bs-btn-active-border-color: #dc3545;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #dc3545;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #dc3545;\n  --bs-gradient: none;\n}\n\n.btn-outline-light {\n  --bs-btn-color: #f8f9fa;\n  --bs-btn-border-color: #f8f9fa;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #f8f9fa;\n  --bs-btn-hover-border-color: #f8f9fa;\n  --bs-btn-focus-shadow-rgb: 248, 249, 250;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #f8f9fa;\n  --bs-btn-active-border-color: #f8f9fa;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #f8f9fa;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #f8f9fa;\n  --bs-gradient: none;\n}\n\n.btn-outline-dark {\n  --bs-btn-color: #212529;\n  --bs-btn-border-color: #212529;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #212529;\n  --bs-btn-hover-border-color: #212529;\n  --bs-btn-focus-shadow-rgb: 33, 37, 41;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #212529;\n  --bs-btn-active-border-color: #212529;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #212529;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #212529;\n  --bs-gradient: none;\n}\n\n.btn-link {\n  --bs-btn-font-weight: 400;\n  --bs-btn-color: var(--bs-link-color);\n  --bs-btn-bg: transparent;\n  --bs-btn-border-color: transparent;\n  --bs-btn-hover-color: var(--bs-link-hover-color);\n  --bs-btn-hover-border-color: transparent;\n  --bs-btn-active-color: var(--bs-link-hover-color);\n  --bs-btn-active-border-color: transparent;\n  --bs-btn-disabled-color: #6c757d;\n  --bs-btn-disabled-border-color: transparent;\n  --bs-btn-box-shadow: none;\n  --bs-btn-focus-shadow-rgb: 49, 132, 253;\n  text-decoration: underline;\n}\n.btn-link:focus-visible {\n  color: var(--bs-btn-color);\n}\n.btn-link:hover {\n  color: var(--bs-btn-hover-color);\n}\n\n.btn-lg {\n  --bs-btn-padding-y: 0.5rem;\n  --bs-btn-padding-x: 1rem;\n  --bs-btn-font-size: 1.25rem;\n  --bs-btn-border-radius: 0.5rem;\n}\n\n.btn-sm {\n  --bs-btn-padding-y: 0.25rem;\n  --bs-btn-padding-x: 0.5rem;\n  --bs-btn-font-size: 0.875rem;\n  --bs-btn-border-radius: 0.25rem;\n}\n\n.btn-close {\n  box-sizing: content-box;\n  width: 1em;\n  height: 1em;\n  padding: 0.25em 0.25em;\n  color: #000;\n  background: transparent url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23000\'%3e%3cpath d=\'M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z\'/%3e%3c/svg%3e") center/1em auto no-repeat;\n  border: 0;\n  border-radius: 0.375rem;\n  opacity: 0.5;\n}\n.btn-close:hover {\n  color: #000;\n  text-decoration: none;\n  opacity: 0.75;\n}\n.btn-close:focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n  opacity: 1;\n}\n.btn-close:disabled, .btn-close.disabled {\n  pointer-events: none;\n  user-select: none;\n  opacity: 0.25;\n}\n\n.btn-close-white {\n  filter: invert(1) grayscale(100%) brightness(200%);\n}\n\n.spinner-grow,\n.spinner-border {\n  display: inline-block;\n  width: var(--bs-spinner-width);\n  height: var(--bs-spinner-height);\n  vertical-align: var(--bs-spinner-vertical-align);\n  border-radius: 50%;\n  animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);\n}\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg) /* rtl:ignore */;\n  }\n}\n.spinner-border {\n  --bs-spinner-width: 2rem;\n  --bs-spinner-height: 2rem;\n  --bs-spinner-vertical-align: -0.125em;\n  --bs-spinner-border-width: 0.25em;\n  --bs-spinner-animation-speed: 0.75s;\n  --bs-spinner-animation-name: spinner-border;\n  border: var(--bs-spinner-border-width) solid currentcolor;\n  border-right-color: transparent;\n}\n\n.spinner-border-sm {\n  --bs-spinner-width: 1rem;\n  --bs-spinner-height: 1rem;\n  --bs-spinner-border-width: 0.2em;\n}\n\n@keyframes spinner-grow {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    opacity: 1;\n    transform: none;\n  }\n}\n.spinner-grow {\n  --bs-spinner-width: 2rem;\n  --bs-spinner-height: 2rem;\n  --bs-spinner-vertical-align: -0.125em;\n  --bs-spinner-animation-speed: 0.75s;\n  --bs-spinner-animation-name: spinner-grow;\n  background-color: currentcolor;\n  opacity: 0;\n}\n\n.spinner-grow-sm {\n  --bs-spinner-width: 1rem;\n  --bs-spinner-height: 1rem;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .spinner-border,\n  .spinner-grow {\n    --bs-spinner-animation-speed: 1.5s;\n  }\n}\n.offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {\n  --bs-offcanvas-zindex: 1045;\n  --bs-offcanvas-width: 400px;\n  --bs-offcanvas-height: 30vh;\n  --bs-offcanvas-padding-x: 1rem;\n  --bs-offcanvas-padding-y: 1rem;\n  --bs-offcanvas-color: ;\n  --bs-offcanvas-bg: #fff;\n  --bs-offcanvas-border-width: 1px;\n  --bs-offcanvas-border-color: var(--bs-border-color-translucent);\n  --bs-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n@media (max-width: 575.98px) {\n  .offcanvas-sm {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-sm {\n    transition: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 576px) {\n  .offcanvas-sm {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-sm .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-sm .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 767.98px) {\n  .offcanvas-md {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-md {\n    transition: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 768px) {\n  .offcanvas-md {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-md .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-md .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 991.98px) {\n  .offcanvas-lg {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-lg {\n    transition: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 992px) {\n  .offcanvas-lg {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-lg .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-lg .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1199.98px) {\n  .offcanvas-xl {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xl {\n    transition: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1200px) {\n  .offcanvas-xl {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xxl {\n    transition: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1400px) {\n  .offcanvas-xxl {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xxl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xxl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n.offcanvas {\n  position: fixed;\n  bottom: 0;\n  z-index: var(--bs-offcanvas-zindex);\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  color: var(--bs-offcanvas-color);\n  visibility: hidden;\n  background-color: var(--bs-offcanvas-bg);\n  background-clip: padding-box;\n  outline: 0;\n  transition: transform 0.3s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .offcanvas {\n    transition: none;\n  }\n}\n.offcanvas.offcanvas-start {\n  top: 0;\n  left: 0;\n  width: var(--bs-offcanvas-width);\n  border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateX(-100%);\n}\n.offcanvas.offcanvas-end {\n  top: 0;\n  right: 0;\n  width: var(--bs-offcanvas-width);\n  border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateX(100%);\n}\n.offcanvas.offcanvas-top {\n  top: 0;\n  right: 0;\n  left: 0;\n  height: var(--bs-offcanvas-height);\n  max-height: 100%;\n  border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateY(-100%);\n}\n.offcanvas.offcanvas-bottom {\n  right: 0;\n  left: 0;\n  height: var(--bs-offcanvas-height);\n  max-height: 100%;\n  border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateY(100%);\n}\n.offcanvas.showing, .offcanvas.show:not(.hiding) {\n  transform: none;\n}\n.offcanvas.showing, .offcanvas.hiding, .offcanvas.show {\n  visibility: visible;\n}\n\n.offcanvas-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1040;\n  width: 100vw;\n  height: 100vh;\n  background-color: #000;\n}\n.offcanvas-backdrop.fade {\n  opacity: 0;\n}\n.offcanvas-backdrop.show {\n  opacity: 0.5;\n}\n\n.offcanvas-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);\n}\n.offcanvas-header .btn-close {\n  padding: calc(var(--bs-offcanvas-padding-y) * 0.5) calc(var(--bs-offcanvas-padding-x) * 0.5);\n  margin-top: calc(-0.5 * var(--bs-offcanvas-padding-y));\n  margin-right: calc(-0.5 * var(--bs-offcanvas-padding-x));\n  margin-bottom: calc(-0.5 * var(--bs-offcanvas-padding-y));\n}\n\n.offcanvas-title {\n  margin-bottom: 0;\n  line-height: 1.5;\n}\n\n.offcanvas-body {\n  flex-grow: 1;\n  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);\n  overflow-y: auto;\n}\n\n.clearfix::after {\n  display: block;\n  clear: both;\n  content: "";\n}\n\n.text-bg-primary {\n  color: #fff !important;\n  background-color: RGBA(13, 110, 253, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-secondary {\n  color: #fff !important;\n  background-color: RGBA(108, 117, 125, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-success {\n  color: #fff !important;\n  background-color: RGBA(25, 135, 84, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-info {\n  color: #000 !important;\n  background-color: RGBA(13, 202, 240, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-warning {\n  color: #000 !important;\n  background-color: RGBA(255, 193, 7, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-danger {\n  color: #fff !important;\n  background-color: RGBA(220, 53, 69, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-light {\n  color: #000 !important;\n  background-color: RGBA(248, 249, 250, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-dark {\n  color: #fff !important;\n  background-color: RGBA(33, 37, 41, var(--bs-bg-opacity, 1)) !important;\n}\n\n.link-primary {\n  color: #0d6efd !important;\n}\n.link-primary:hover, .link-primary:focus {\n  color: #0a58ca !important;\n}\n\n.link-secondary {\n  color: #6c757d !important;\n}\n.link-secondary:hover, .link-secondary:focus {\n  color: #565e64 !important;\n}\n\n.link-success {\n  color: #198754 !important;\n}\n.link-success:hover, .link-success:focus {\n  color: #146c43 !important;\n}\n\n.link-info {\n  color: #0dcaf0 !important;\n}\n.link-info:hover, .link-info:focus {\n  color: #3dd5f3 !important;\n}\n\n.link-warning {\n  color: #ffc107 !important;\n}\n.link-warning:hover, .link-warning:focus {\n  color: #ffcd39 !important;\n}\n\n.link-danger {\n  color: #dc3545 !important;\n}\n.link-danger:hover, .link-danger:focus {\n  color: #b02a37 !important;\n}\n\n.link-light {\n  color: #f8f9fa !important;\n}\n.link-light:hover, .link-light:focus {\n  color: #f9fafb !important;\n}\n\n.link-dark {\n  color: #212529 !important;\n}\n.link-dark:hover, .link-dark:focus {\n  color: #1a1e21 !important;\n}\n\n.ratio {\n  position: relative;\n  width: 100%;\n}\n.ratio::before {\n  display: block;\n  padding-top: var(--bs-aspect-ratio);\n  content: "";\n}\n.ratio > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ratio-1x1 {\n  --bs-aspect-ratio: 100%;\n}\n\n.ratio-4x3 {\n  --bs-aspect-ratio: 75%;\n}\n\n.ratio-16x9 {\n  --bs-aspect-ratio: 56.25%;\n}\n\n.ratio-21x9 {\n  --bs-aspect-ratio: 42.8571428571%;\n}\n\n.fixed-top {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.fixed-bottom {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.sticky-top {\n  position: sticky;\n  top: 0;\n  z-index: 1020;\n}\n\n.sticky-bottom {\n  position: sticky;\n  bottom: 0;\n  z-index: 1020;\n}\n\n@media (min-width: 576px) {\n  .sticky-sm-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-sm-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 768px) {\n  .sticky-md-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-md-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 992px) {\n  .sticky-lg-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-lg-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1200px) {\n  .sticky-xl-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xl-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1400px) {\n  .sticky-xxl-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xxl-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n.hstack {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: stretch;\n}\n\n.vstack {\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  align-self: stretch;\n}\n\n.visually-hidden,\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  clip: rect(0, 0, 0, 0) !important;\n  white-space: nowrap !important;\n  border: 0 !important;\n}\n\n.stretched-link::after {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  content: "";\n}\n\n.text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.vr {\n  display: inline-block;\n  align-self: stretch;\n  width: 1px;\n  min-height: 1em;\n  background-color: currentcolor;\n  opacity: 0.25;\n}\n\n.align-baseline {\n  vertical-align: baseline !important;\n}\n\n.align-top {\n  vertical-align: top !important;\n}\n\n.align-middle {\n  vertical-align: middle !important;\n}\n\n.align-bottom {\n  vertical-align: bottom !important;\n}\n\n.align-text-bottom {\n  vertical-align: text-bottom !important;\n}\n\n.align-text-top {\n  vertical-align: text-top !important;\n}\n\n.float-start {\n  float: left !important;\n}\n\n.float-end {\n  float: right !important;\n}\n\n.float-none {\n  float: none !important;\n}\n\n.opacity-0 {\n  opacity: 0 !important;\n}\n\n.opacity-25 {\n  opacity: 0.25 !important;\n}\n\n.opacity-50 {\n  opacity: 0.5 !important;\n}\n\n.opacity-75 {\n  opacity: 0.75 !important;\n}\n\n.opacity-100 {\n  opacity: 1 !important;\n}\n\n.overflow-auto {\n  overflow: auto !important;\n}\n\n.overflow-hidden {\n  overflow: hidden !important;\n}\n\n.overflow-visible {\n  overflow: visible !important;\n}\n\n.overflow-scroll {\n  overflow: scroll !important;\n}\n\n.d-inline {\n  display: inline !important;\n}\n\n.d-inline-block {\n  display: inline-block !important;\n}\n\n.d-block {\n  display: block !important;\n}\n\n.d-grid {\n  display: grid !important;\n}\n\n.d-table {\n  display: table !important;\n}\n\n.d-table-row {\n  display: table-row !important;\n}\n\n.d-table-cell {\n  display: table-cell !important;\n}\n\n.d-flex {\n  display: flex !important;\n}\n\n.d-inline-flex {\n  display: inline-flex !important;\n}\n\n.d-none {\n  display: none !important;\n}\n\n.shadow {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.shadow-sm {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n\n.shadow-lg {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n}\n\n.shadow-none {\n  box-shadow: none !important;\n}\n\n.position-static {\n  position: static !important;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.position-absolute {\n  position: absolute !important;\n}\n\n.position-fixed {\n  position: fixed !important;\n}\n\n.position-sticky {\n  position: sticky !important;\n}\n\n.top-0 {\n  top: 0 !important;\n}\n\n.top-50 {\n  top: 50% !important;\n}\n\n.top-100 {\n  top: 100% !important;\n}\n\n.bottom-0 {\n  bottom: 0 !important;\n}\n\n.bottom-50 {\n  bottom: 50% !important;\n}\n\n.bottom-100 {\n  bottom: 100% !important;\n}\n\n.start-0 {\n  left: 0 !important;\n}\n\n.start-50 {\n  left: 50% !important;\n}\n\n.start-100 {\n  left: 100% !important;\n}\n\n.end-0 {\n  right: 0 !important;\n}\n\n.end-50 {\n  right: 50% !important;\n}\n\n.end-100 {\n  right: 100% !important;\n}\n\n.translate-middle {\n  transform: translate(-50%, -50%) !important;\n}\n\n.translate-middle-x {\n  transform: translateX(-50%) !important;\n}\n\n.translate-middle-y {\n  transform: translateY(-50%) !important;\n}\n\n.border {\n  border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-0 {\n  border: 0 !important;\n}\n\n.border-top {\n  border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-top-0 {\n  border-top: 0 !important;\n}\n\n.border-end {\n  border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-end-0 {\n  border-right: 0 !important;\n}\n\n.border-bottom {\n  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-bottom-0 {\n  border-bottom: 0 !important;\n}\n\n.border-start {\n  border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-start-0 {\n  border-left: 0 !important;\n}\n\n.border-primary {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-primary-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-secondary {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-success {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-info {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-info-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-warning {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-warning-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-danger {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-danger-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-light {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-light-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-dark {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-dark-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-white {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-white-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-1 {\n  --bs-border-width: 1px;\n}\n\n.border-2 {\n  --bs-border-width: 2px;\n}\n\n.border-3 {\n  --bs-border-width: 3px;\n}\n\n.border-4 {\n  --bs-border-width: 4px;\n}\n\n.border-5 {\n  --bs-border-width: 5px;\n}\n\n.border-opacity-10 {\n  --bs-border-opacity: 0.1;\n}\n\n.border-opacity-25 {\n  --bs-border-opacity: 0.25;\n}\n\n.border-opacity-50 {\n  --bs-border-opacity: 0.5;\n}\n\n.border-opacity-75 {\n  --bs-border-opacity: 0.75;\n}\n\n.border-opacity-100 {\n  --bs-border-opacity: 1;\n}\n\n.w-25 {\n  width: 25% !important;\n}\n\n.w-50 {\n  width: 50% !important;\n}\n\n.w-75 {\n  width: 75% !important;\n}\n\n.w-100 {\n  width: 100% !important;\n}\n\n.w-auto {\n  width: auto !important;\n}\n\n.mw-100 {\n  max-width: 100% !important;\n}\n\n.vw-100 {\n  width: 100vw !important;\n}\n\n.min-vw-100 {\n  min-width: 100vw !important;\n}\n\n.h-25 {\n  height: 25% !important;\n}\n\n.h-50 {\n  height: 50% !important;\n}\n\n.h-75 {\n  height: 75% !important;\n}\n\n.h-100 {\n  height: 100% !important;\n}\n\n.h-auto {\n  height: auto !important;\n}\n\n.mh-100 {\n  max-height: 100% !important;\n}\n\n.vh-100 {\n  height: 100vh !important;\n}\n\n.min-vh-100 {\n  min-height: 100vh !important;\n}\n\n.flex-fill {\n  flex: 1 1 auto !important;\n}\n\n.flex-row {\n  flex-direction: row !important;\n}\n\n.flex-column {\n  flex-direction: column !important;\n}\n\n.flex-row-reverse {\n  flex-direction: row-reverse !important;\n}\n\n.flex-column-reverse {\n  flex-direction: column-reverse !important;\n}\n\n.flex-grow-0 {\n  flex-grow: 0 !important;\n}\n\n.flex-grow-1 {\n  flex-grow: 1 !important;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0 !important;\n}\n\n.flex-shrink-1 {\n  flex-shrink: 1 !important;\n}\n\n.flex-wrap {\n  flex-wrap: wrap !important;\n}\n\n.flex-nowrap {\n  flex-wrap: nowrap !important;\n}\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse !important;\n}\n\n.justify-content-start {\n  justify-content: flex-start !important;\n}\n\n.justify-content-end {\n  justify-content: flex-end !important;\n}\n\n.justify-content-center {\n  justify-content: center !important;\n}\n\n.justify-content-between {\n  justify-content: space-between !important;\n}\n\n.justify-content-around {\n  justify-content: space-around !important;\n}\n\n.justify-content-evenly {\n  justify-content: space-evenly !important;\n}\n\n.align-items-start {\n  align-items: flex-start !important;\n}\n\n.align-items-end {\n  align-items: flex-end !important;\n}\n\n.align-items-center {\n  align-items: center !important;\n}\n\n.align-items-baseline {\n  align-items: baseline !important;\n}\n\n.align-items-stretch {\n  align-items: stretch !important;\n}\n\n.align-content-start {\n  align-content: flex-start !important;\n}\n\n.align-content-end {\n  align-content: flex-end !important;\n}\n\n.align-content-center {\n  align-content: center !important;\n}\n\n.align-content-between {\n  align-content: space-between !important;\n}\n\n.align-content-around {\n  align-content: space-around !important;\n}\n\n.align-content-stretch {\n  align-content: stretch !important;\n}\n\n.align-self-auto {\n  align-self: auto !important;\n}\n\n.align-self-start {\n  align-self: flex-start !important;\n}\n\n.align-self-end {\n  align-self: flex-end !important;\n}\n\n.align-self-center {\n  align-self: center !important;\n}\n\n.align-self-baseline {\n  align-self: baseline !important;\n}\n\n.align-self-stretch {\n  align-self: stretch !important;\n}\n\n.order-first {\n  order: -1 !important;\n}\n\n.order-0 {\n  order: 0 !important;\n}\n\n.order-1 {\n  order: 1 !important;\n}\n\n.order-2 {\n  order: 2 !important;\n}\n\n.order-3 {\n  order: 3 !important;\n}\n\n.order-4 {\n  order: 4 !important;\n}\n\n.order-5 {\n  order: 5 !important;\n}\n\n.order-last {\n  order: 6 !important;\n}\n\n.m-0 {\n  margin: 0 !important;\n}\n\n.m-1 {\n  margin: 0.25rem !important;\n}\n\n.m-2 {\n  margin: 0.5rem !important;\n}\n\n.m-3 {\n  margin: 1rem !important;\n}\n\n.m-4 {\n  margin: 1.5rem !important;\n}\n\n.m-5 {\n  margin: 3rem !important;\n}\n\n.m-auto {\n  margin: auto !important;\n}\n\n.mx-0 {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n}\n\n.mx-1 {\n  margin-right: 0.25rem !important;\n  margin-left: 0.25rem !important;\n}\n\n.mx-2 {\n  margin-right: 0.5rem !important;\n  margin-left: 0.5rem !important;\n}\n\n.mx-3 {\n  margin-right: 1rem !important;\n  margin-left: 1rem !important;\n}\n\n.mx-4 {\n  margin-right: 1.5rem !important;\n  margin-left: 1.5rem !important;\n}\n\n.mx-5 {\n  margin-right: 3rem !important;\n  margin-left: 3rem !important;\n}\n\n.mx-auto {\n  margin-right: auto !important;\n  margin-left: auto !important;\n}\n\n.my-0 {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n.my-1 {\n  margin-top: 0.25rem !important;\n  margin-bottom: 0.25rem !important;\n}\n\n.my-2 {\n  margin-top: 0.5rem !important;\n  margin-bottom: 0.5rem !important;\n}\n\n.my-3 {\n  margin-top: 1rem !important;\n  margin-bottom: 1rem !important;\n}\n\n.my-4 {\n  margin-top: 1.5rem !important;\n  margin-bottom: 1.5rem !important;\n}\n\n.my-5 {\n  margin-top: 3rem !important;\n  margin-bottom: 3rem !important;\n}\n\n.my-auto {\n  margin-top: auto !important;\n  margin-bottom: auto !important;\n}\n\n.mt-0 {\n  margin-top: 0 !important;\n}\n\n.mt-1 {\n  margin-top: 0.25rem !important;\n}\n\n.mt-2 {\n  margin-top: 0.5rem !important;\n}\n\n.mt-3 {\n  margin-top: 1rem !important;\n}\n\n.mt-4 {\n  margin-top: 1.5rem !important;\n}\n\n.mt-5 {\n  margin-top: 3rem !important;\n}\n\n.mt-auto {\n  margin-top: auto !important;\n}\n\n.me-0 {\n  margin-right: 0 !important;\n}\n\n.me-1 {\n  margin-right: 0.25rem !important;\n}\n\n.me-2 {\n  margin-right: 0.5rem !important;\n}\n\n.me-3 {\n  margin-right: 1rem !important;\n}\n\n.me-4 {\n  margin-right: 1.5rem !important;\n}\n\n.me-5 {\n  margin-right: 3rem !important;\n}\n\n.me-auto {\n  margin-right: auto !important;\n}\n\n.mb-0 {\n  margin-bottom: 0 !important;\n}\n\n.mb-1 {\n  margin-bottom: 0.25rem !important;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem !important;\n}\n\n.mb-3 {\n  margin-bottom: 1rem !important;\n}\n\n.mb-4 {\n  margin-bottom: 1.5rem !important;\n}\n\n.mb-5 {\n  margin-bottom: 3rem !important;\n}\n\n.mb-auto {\n  margin-bottom: auto !important;\n}\n\n.ms-0 {\n  margin-left: 0 !important;\n}\n\n.ms-1 {\n  margin-left: 0.25rem !important;\n}\n\n.ms-2 {\n  margin-left: 0.5rem !important;\n}\n\n.ms-3 {\n  margin-left: 1rem !important;\n}\n\n.ms-4 {\n  margin-left: 1.5rem !important;\n}\n\n.ms-5 {\n  margin-left: 3rem !important;\n}\n\n.ms-auto {\n  margin-left: auto !important;\n}\n\n.p-0 {\n  padding: 0 !important;\n}\n\n.p-1 {\n  padding: 0.25rem !important;\n}\n\n.p-2 {\n  padding: 0.5rem !important;\n}\n\n.p-3 {\n  padding: 1rem !important;\n}\n\n.p-4 {\n  padding: 1.5rem !important;\n}\n\n.p-5 {\n  padding: 3rem !important;\n}\n\n.px-0 {\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n}\n\n.px-1 {\n  padding-right: 0.25rem !important;\n  padding-left: 0.25rem !important;\n}\n\n.px-2 {\n  padding-right: 0.5rem !important;\n  padding-left: 0.5rem !important;\n}\n\n.px-3 {\n  padding-right: 1rem !important;\n  padding-left: 1rem !important;\n}\n\n.px-4 {\n  padding-right: 1.5rem !important;\n  padding-left: 1.5rem !important;\n}\n\n.px-5 {\n  padding-right: 3rem !important;\n  padding-left: 3rem !important;\n}\n\n.py-0 {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important;\n}\n\n.py-1 {\n  padding-top: 0.25rem !important;\n  padding-bottom: 0.25rem !important;\n}\n\n.py-2 {\n  padding-top: 0.5rem !important;\n  padding-bottom: 0.5rem !important;\n}\n\n.py-3 {\n  padding-top: 1rem !important;\n  padding-bottom: 1rem !important;\n}\n\n.py-4 {\n  padding-top: 1.5rem !important;\n  padding-bottom: 1.5rem !important;\n}\n\n.py-5 {\n  padding-top: 3rem !important;\n  padding-bottom: 3rem !important;\n}\n\n.pt-0 {\n  padding-top: 0 !important;\n}\n\n.pt-1 {\n  padding-top: 0.25rem !important;\n}\n\n.pt-2 {\n  padding-top: 0.5rem !important;\n}\n\n.pt-3 {\n  padding-top: 1rem !important;\n}\n\n.pt-4 {\n  padding-top: 1.5rem !important;\n}\n\n.pt-5 {\n  padding-top: 3rem !important;\n}\n\n.pe-0 {\n  padding-right: 0 !important;\n}\n\n.pe-1 {\n  padding-right: 0.25rem !important;\n}\n\n.pe-2 {\n  padding-right: 0.5rem !important;\n}\n\n.pe-3 {\n  padding-right: 1rem !important;\n}\n\n.pe-4 {\n  padding-right: 1.5rem !important;\n}\n\n.pe-5 {\n  padding-right: 3rem !important;\n}\n\n.pb-0 {\n  padding-bottom: 0 !important;\n}\n\n.pb-1 {\n  padding-bottom: 0.25rem !important;\n}\n\n.pb-2 {\n  padding-bottom: 0.5rem !important;\n}\n\n.pb-3 {\n  padding-bottom: 1rem !important;\n}\n\n.pb-4 {\n  padding-bottom: 1.5rem !important;\n}\n\n.pb-5 {\n  padding-bottom: 3rem !important;\n}\n\n.ps-0 {\n  padding-left: 0 !important;\n}\n\n.ps-1 {\n  padding-left: 0.25rem !important;\n}\n\n.ps-2 {\n  padding-left: 0.5rem !important;\n}\n\n.ps-3 {\n  padding-left: 1rem !important;\n}\n\n.ps-4 {\n  padding-left: 1.5rem !important;\n}\n\n.ps-5 {\n  padding-left: 3rem !important;\n}\n\n.gap-0 {\n  gap: 0 !important;\n}\n\n.gap-1 {\n  gap: 0.25rem !important;\n}\n\n.gap-2 {\n  gap: 0.5rem !important;\n}\n\n.gap-3 {\n  gap: 1rem !important;\n}\n\n.gap-4 {\n  gap: 1.5rem !important;\n}\n\n.gap-5 {\n  gap: 3rem !important;\n}\n\n.font-monospace {\n  font-family: var(--bs-font-monospace) !important;\n}\n\n.fs-1 {\n  font-size: calc(1.375rem + 1.5vw) !important;\n}\n\n.fs-2 {\n  font-size: calc(1.325rem + 0.9vw) !important;\n}\n\n.fs-3 {\n  font-size: calc(1.3rem + 0.6vw) !important;\n}\n\n.fs-4 {\n  font-size: calc(1.275rem + 0.3vw) !important;\n}\n\n.fs-5 {\n  font-size: 1.25rem !important;\n}\n\n.fs-6 {\n  font-size: 1rem !important;\n}\n\n.fst-italic {\n  font-style: italic !important;\n}\n\n.fst-normal {\n  font-style: normal !important;\n}\n\n.fw-light {\n  font-weight: 300 !important;\n}\n\n.fw-lighter {\n  font-weight: lighter !important;\n}\n\n.fw-normal {\n  font-weight: 400 !important;\n}\n\n.fw-bold {\n  font-weight: 700 !important;\n}\n\n.fw-semibold {\n  font-weight: 600 !important;\n}\n\n.fw-bolder {\n  font-weight: bolder !important;\n}\n\n.lh-1 {\n  line-height: 1 !important;\n}\n\n.lh-sm {\n  line-height: 1.25 !important;\n}\n\n.lh-base {\n  line-height: 1.5 !important;\n}\n\n.lh-lg {\n  line-height: 2 !important;\n}\n\n.text-start {\n  text-align: left !important;\n}\n\n.text-end {\n  text-align: right !important;\n}\n\n.text-center {\n  text-align: center !important;\n}\n\n.text-decoration-none {\n  text-decoration: none !important;\n}\n\n.text-decoration-underline {\n  text-decoration: underline !important;\n}\n\n.text-decoration-line-through {\n  text-decoration: line-through !important;\n}\n\n.text-lowercase {\n  text-transform: lowercase !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase !important;\n}\n\n.text-capitalize {\n  text-transform: capitalize !important;\n}\n\n.text-wrap {\n  white-space: normal !important;\n}\n\n.text-nowrap {\n  white-space: nowrap !important;\n}\n\n/* rtl:begin:remove */\n.text-break {\n  word-wrap: break-word !important;\n  word-break: break-word !important;\n}\n\n/* rtl:end:remove */\n.text-primary {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-secondary {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-success {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-info {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-warning {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-danger {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-light {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-dark {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-black {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-white {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-body {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-muted {\n  --bs-text-opacity: 1;\n  color: #6c757d !important;\n}\n\n.text-black-50 {\n  --bs-text-opacity: 1;\n  color: rgba(0, 0, 0, 0.5) !important;\n}\n\n.text-white-50 {\n  --bs-text-opacity: 1;\n  color: rgba(255, 255, 255, 0.5) !important;\n}\n\n.text-reset {\n  --bs-text-opacity: 1;\n  color: inherit !important;\n}\n\n.text-opacity-25 {\n  --bs-text-opacity: 0.25;\n}\n\n.text-opacity-50 {\n  --bs-text-opacity: 0.5;\n}\n\n.text-opacity-75 {\n  --bs-text-opacity: 0.75;\n}\n\n.text-opacity-100 {\n  --bs-text-opacity: 1;\n}\n\n.bg-primary {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-secondary {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-success {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-info {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-warning {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-danger {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-light {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-dark {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-black {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-white {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-body {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-transparent {\n  --bs-bg-opacity: 1;\n  background-color: transparent !important;\n}\n\n.bg-opacity-10 {\n  --bs-bg-opacity: 0.1;\n}\n\n.bg-opacity-25 {\n  --bs-bg-opacity: 0.25;\n}\n\n.bg-opacity-50 {\n  --bs-bg-opacity: 0.5;\n}\n\n.bg-opacity-75 {\n  --bs-bg-opacity: 0.75;\n}\n\n.bg-opacity-100 {\n  --bs-bg-opacity: 1;\n}\n\n.bg-gradient {\n  background-image: var(--bs-gradient) !important;\n}\n\n.user-select-all {\n  user-select: all !important;\n}\n\n.user-select-auto {\n  user-select: auto !important;\n}\n\n.user-select-none {\n  user-select: none !important;\n}\n\n.pe-none {\n  pointer-events: none !important;\n}\n\n.pe-auto {\n  pointer-events: auto !important;\n}\n\n.rounded {\n  border-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-0 {\n  border-radius: 0 !important;\n}\n\n.rounded-1 {\n  border-radius: var(--bs-border-radius-sm) !important;\n}\n\n.rounded-2 {\n  border-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-3 {\n  border-radius: var(--bs-border-radius-lg) !important;\n}\n\n.rounded-4 {\n  border-radius: var(--bs-border-radius-xl) !important;\n}\n\n.rounded-5 {\n  border-radius: var(--bs-border-radius-2xl) !important;\n}\n\n.rounded-circle {\n  border-radius: 50% !important;\n}\n\n.rounded-pill {\n  border-radius: var(--bs-border-radius-pill) !important;\n}\n\n.rounded-top {\n  border-top-left-radius: var(--bs-border-radius) !important;\n  border-top-right-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-end {\n  border-top-right-radius: var(--bs-border-radius) !important;\n  border-bottom-right-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-bottom {\n  border-bottom-right-radius: var(--bs-border-radius) !important;\n  border-bottom-left-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-start {\n  border-bottom-left-radius: var(--bs-border-radius) !important;\n  border-top-left-radius: var(--bs-border-radius) !important;\n}\n\n.visible {\n  visibility: visible !important;\n}\n\n.invisible {\n  visibility: hidden !important;\n}\n\n@media (min-width: 576px) {\n  .float-sm-start {\n    float: left !important;\n  }\n  .float-sm-end {\n    float: right !important;\n  }\n  .float-sm-none {\n    float: none !important;\n  }\n  .d-sm-inline {\n    display: inline !important;\n  }\n  .d-sm-inline-block {\n    display: inline-block !important;\n  }\n  .d-sm-block {\n    display: block !important;\n  }\n  .d-sm-grid {\n    display: grid !important;\n  }\n  .d-sm-table {\n    display: table !important;\n  }\n  .d-sm-table-row {\n    display: table-row !important;\n  }\n  .d-sm-table-cell {\n    display: table-cell !important;\n  }\n  .d-sm-flex {\n    display: flex !important;\n  }\n  .d-sm-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-sm-none {\n    display: none !important;\n  }\n  .flex-sm-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-sm-row {\n    flex-direction: row !important;\n  }\n  .flex-sm-column {\n    flex-direction: column !important;\n  }\n  .flex-sm-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-sm-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-sm-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-sm-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-sm-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-sm-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-sm-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-sm-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-sm-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-sm-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-sm-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-sm-center {\n    justify-content: center !important;\n  }\n  .justify-content-sm-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-sm-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-sm-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-sm-start {\n    align-items: flex-start !important;\n  }\n  .align-items-sm-end {\n    align-items: flex-end !important;\n  }\n  .align-items-sm-center {\n    align-items: center !important;\n  }\n  .align-items-sm-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-sm-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-sm-start {\n    align-content: flex-start !important;\n  }\n  .align-content-sm-end {\n    align-content: flex-end !important;\n  }\n  .align-content-sm-center {\n    align-content: center !important;\n  }\n  .align-content-sm-between {\n    align-content: space-between !important;\n  }\n  .align-content-sm-around {\n    align-content: space-around !important;\n  }\n  .align-content-sm-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-sm-auto {\n    align-self: auto !important;\n  }\n  .align-self-sm-start {\n    align-self: flex-start !important;\n  }\n  .align-self-sm-end {\n    align-self: flex-end !important;\n  }\n  .align-self-sm-center {\n    align-self: center !important;\n  }\n  .align-self-sm-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-sm-stretch {\n    align-self: stretch !important;\n  }\n  .order-sm-first {\n    order: -1 !important;\n  }\n  .order-sm-0 {\n    order: 0 !important;\n  }\n  .order-sm-1 {\n    order: 1 !important;\n  }\n  .order-sm-2 {\n    order: 2 !important;\n  }\n  .order-sm-3 {\n    order: 3 !important;\n  }\n  .order-sm-4 {\n    order: 4 !important;\n  }\n  .order-sm-5 {\n    order: 5 !important;\n  }\n  .order-sm-last {\n    order: 6 !important;\n  }\n  .m-sm-0 {\n    margin: 0 !important;\n  }\n  .m-sm-1 {\n    margin: 0.25rem !important;\n  }\n  .m-sm-2 {\n    margin: 0.5rem !important;\n  }\n  .m-sm-3 {\n    margin: 1rem !important;\n  }\n  .m-sm-4 {\n    margin: 1.5rem !important;\n  }\n  .m-sm-5 {\n    margin: 3rem !important;\n  }\n  .m-sm-auto {\n    margin: auto !important;\n  }\n  .mx-sm-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-sm-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-sm-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-sm-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-sm-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-sm-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-sm-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-sm-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-sm-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-sm-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-sm-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-sm-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-sm-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-sm-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-sm-0 {\n    margin-top: 0 !important;\n  }\n  .mt-sm-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-sm-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-sm-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-sm-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-sm-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-sm-auto {\n    margin-top: auto !important;\n  }\n  .me-sm-0 {\n    margin-right: 0 !important;\n  }\n  .me-sm-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-sm-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-sm-3 {\n    margin-right: 1rem !important;\n  }\n  .me-sm-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-sm-5 {\n    margin-right: 3rem !important;\n  }\n  .me-sm-auto {\n    margin-right: auto !important;\n  }\n  .mb-sm-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-sm-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-sm-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-sm-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-sm-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-sm-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-sm-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-sm-0 {\n    margin-left: 0 !important;\n  }\n  .ms-sm-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-sm-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-sm-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-sm-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-sm-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-sm-auto {\n    margin-left: auto !important;\n  }\n  .p-sm-0 {\n    padding: 0 !important;\n  }\n  .p-sm-1 {\n    padding: 0.25rem !important;\n  }\n  .p-sm-2 {\n    padding: 0.5rem !important;\n  }\n  .p-sm-3 {\n    padding: 1rem !important;\n  }\n  .p-sm-4 {\n    padding: 1.5rem !important;\n  }\n  .p-sm-5 {\n    padding: 3rem !important;\n  }\n  .px-sm-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-sm-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-sm-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-sm-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-sm-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-sm-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-sm-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-sm-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-sm-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-sm-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-sm-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-sm-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-sm-0 {\n    padding-top: 0 !important;\n  }\n  .pt-sm-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-sm-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-sm-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-sm-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-sm-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-sm-0 {\n    padding-right: 0 !important;\n  }\n  .pe-sm-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-sm-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-sm-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-sm-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-sm-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-sm-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-sm-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-sm-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-sm-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-sm-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-sm-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-sm-0 {\n    padding-left: 0 !important;\n  }\n  .ps-sm-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-sm-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-sm-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-sm-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-sm-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-sm-0 {\n    gap: 0 !important;\n  }\n  .gap-sm-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-sm-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-sm-3 {\n    gap: 1rem !important;\n  }\n  .gap-sm-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-sm-5 {\n    gap: 3rem !important;\n  }\n  .text-sm-start {\n    text-align: left !important;\n  }\n  .text-sm-end {\n    text-align: right !important;\n  }\n  .text-sm-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 768px) {\n  .float-md-start {\n    float: left !important;\n  }\n  .float-md-end {\n    float: right !important;\n  }\n  .float-md-none {\n    float: none !important;\n  }\n  .d-md-inline {\n    display: inline !important;\n  }\n  .d-md-inline-block {\n    display: inline-block !important;\n  }\n  .d-md-block {\n    display: block !important;\n  }\n  .d-md-grid {\n    display: grid !important;\n  }\n  .d-md-table {\n    display: table !important;\n  }\n  .d-md-table-row {\n    display: table-row !important;\n  }\n  .d-md-table-cell {\n    display: table-cell !important;\n  }\n  .d-md-flex {\n    display: flex !important;\n  }\n  .d-md-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-md-none {\n    display: none !important;\n  }\n  .flex-md-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-md-row {\n    flex-direction: row !important;\n  }\n  .flex-md-column {\n    flex-direction: column !important;\n  }\n  .flex-md-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-md-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-md-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-md-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-md-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-md-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-md-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-md-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-md-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-md-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-md-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-md-center {\n    justify-content: center !important;\n  }\n  .justify-content-md-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-md-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-md-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-md-start {\n    align-items: flex-start !important;\n  }\n  .align-items-md-end {\n    align-items: flex-end !important;\n  }\n  .align-items-md-center {\n    align-items: center !important;\n  }\n  .align-items-md-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-md-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-md-start {\n    align-content: flex-start !important;\n  }\n  .align-content-md-end {\n    align-content: flex-end !important;\n  }\n  .align-content-md-center {\n    align-content: center !important;\n  }\n  .align-content-md-between {\n    align-content: space-between !important;\n  }\n  .align-content-md-around {\n    align-content: space-around !important;\n  }\n  .align-content-md-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-md-auto {\n    align-self: auto !important;\n  }\n  .align-self-md-start {\n    align-self: flex-start !important;\n  }\n  .align-self-md-end {\n    align-self: flex-end !important;\n  }\n  .align-self-md-center {\n    align-self: center !important;\n  }\n  .align-self-md-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-md-stretch {\n    align-self: stretch !important;\n  }\n  .order-md-first {\n    order: -1 !important;\n  }\n  .order-md-0 {\n    order: 0 !important;\n  }\n  .order-md-1 {\n    order: 1 !important;\n  }\n  .order-md-2 {\n    order: 2 !important;\n  }\n  .order-md-3 {\n    order: 3 !important;\n  }\n  .order-md-4 {\n    order: 4 !important;\n  }\n  .order-md-5 {\n    order: 5 !important;\n  }\n  .order-md-last {\n    order: 6 !important;\n  }\n  .m-md-0 {\n    margin: 0 !important;\n  }\n  .m-md-1 {\n    margin: 0.25rem !important;\n  }\n  .m-md-2 {\n    margin: 0.5rem !important;\n  }\n  .m-md-3 {\n    margin: 1rem !important;\n  }\n  .m-md-4 {\n    margin: 1.5rem !important;\n  }\n  .m-md-5 {\n    margin: 3rem !important;\n  }\n  .m-md-auto {\n    margin: auto !important;\n  }\n  .mx-md-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-md-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-md-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-md-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-md-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-md-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-md-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-md-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-md-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-md-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-md-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-md-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-md-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-md-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-md-0 {\n    margin-top: 0 !important;\n  }\n  .mt-md-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-md-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-md-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-md-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-md-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-md-auto {\n    margin-top: auto !important;\n  }\n  .me-md-0 {\n    margin-right: 0 !important;\n  }\n  .me-md-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-md-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-md-3 {\n    margin-right: 1rem !important;\n  }\n  .me-md-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-md-5 {\n    margin-right: 3rem !important;\n  }\n  .me-md-auto {\n    margin-right: auto !important;\n  }\n  .mb-md-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-md-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-md-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-md-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-md-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-md-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-md-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-md-0 {\n    margin-left: 0 !important;\n  }\n  .ms-md-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-md-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-md-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-md-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-md-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-md-auto {\n    margin-left: auto !important;\n  }\n  .p-md-0 {\n    padding: 0 !important;\n  }\n  .p-md-1 {\n    padding: 0.25rem !important;\n  }\n  .p-md-2 {\n    padding: 0.5rem !important;\n  }\n  .p-md-3 {\n    padding: 1rem !important;\n  }\n  .p-md-4 {\n    padding: 1.5rem !important;\n  }\n  .p-md-5 {\n    padding: 3rem !important;\n  }\n  .px-md-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-md-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-md-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-md-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-md-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-md-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-md-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-md-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-md-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-md-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-md-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-md-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-md-0 {\n    padding-top: 0 !important;\n  }\n  .pt-md-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-md-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-md-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-md-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-md-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-md-0 {\n    padding-right: 0 !important;\n  }\n  .pe-md-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-md-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-md-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-md-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-md-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-md-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-md-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-md-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-md-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-md-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-md-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-md-0 {\n    padding-left: 0 !important;\n  }\n  .ps-md-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-md-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-md-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-md-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-md-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-md-0 {\n    gap: 0 !important;\n  }\n  .gap-md-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-md-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-md-3 {\n    gap: 1rem !important;\n  }\n  .gap-md-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-md-5 {\n    gap: 3rem !important;\n  }\n  .text-md-start {\n    text-align: left !important;\n  }\n  .text-md-end {\n    text-align: right !important;\n  }\n  .text-md-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 992px) {\n  .float-lg-start {\n    float: left !important;\n  }\n  .float-lg-end {\n    float: right !important;\n  }\n  .float-lg-none {\n    float: none !important;\n  }\n  .d-lg-inline {\n    display: inline !important;\n  }\n  .d-lg-inline-block {\n    display: inline-block !important;\n  }\n  .d-lg-block {\n    display: block !important;\n  }\n  .d-lg-grid {\n    display: grid !important;\n  }\n  .d-lg-table {\n    display: table !important;\n  }\n  .d-lg-table-row {\n    display: table-row !important;\n  }\n  .d-lg-table-cell {\n    display: table-cell !important;\n  }\n  .d-lg-flex {\n    display: flex !important;\n  }\n  .d-lg-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-lg-none {\n    display: none !important;\n  }\n  .flex-lg-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-lg-row {\n    flex-direction: row !important;\n  }\n  .flex-lg-column {\n    flex-direction: column !important;\n  }\n  .flex-lg-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-lg-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-lg-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-lg-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-lg-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-lg-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-lg-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-lg-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-lg-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-lg-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-lg-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-lg-center {\n    justify-content: center !important;\n  }\n  .justify-content-lg-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-lg-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-lg-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-lg-start {\n    align-items: flex-start !important;\n  }\n  .align-items-lg-end {\n    align-items: flex-end !important;\n  }\n  .align-items-lg-center {\n    align-items: center !important;\n  }\n  .align-items-lg-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-lg-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-lg-start {\n    align-content: flex-start !important;\n  }\n  .align-content-lg-end {\n    align-content: flex-end !important;\n  }\n  .align-content-lg-center {\n    align-content: center !important;\n  }\n  .align-content-lg-between {\n    align-content: space-between !important;\n  }\n  .align-content-lg-around {\n    align-content: space-around !important;\n  }\n  .align-content-lg-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-lg-auto {\n    align-self: auto !important;\n  }\n  .align-self-lg-start {\n    align-self: flex-start !important;\n  }\n  .align-self-lg-end {\n    align-self: flex-end !important;\n  }\n  .align-self-lg-center {\n    align-self: center !important;\n  }\n  .align-self-lg-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-lg-stretch {\n    align-self: stretch !important;\n  }\n  .order-lg-first {\n    order: -1 !important;\n  }\n  .order-lg-0 {\n    order: 0 !important;\n  }\n  .order-lg-1 {\n    order: 1 !important;\n  }\n  .order-lg-2 {\n    order: 2 !important;\n  }\n  .order-lg-3 {\n    order: 3 !important;\n  }\n  .order-lg-4 {\n    order: 4 !important;\n  }\n  .order-lg-5 {\n    order: 5 !important;\n  }\n  .order-lg-last {\n    order: 6 !important;\n  }\n  .m-lg-0 {\n    margin: 0 !important;\n  }\n  .m-lg-1 {\n    margin: 0.25rem !important;\n  }\n  .m-lg-2 {\n    margin: 0.5rem !important;\n  }\n  .m-lg-3 {\n    margin: 1rem !important;\n  }\n  .m-lg-4 {\n    margin: 1.5rem !important;\n  }\n  .m-lg-5 {\n    margin: 3rem !important;\n  }\n  .m-lg-auto {\n    margin: auto !important;\n  }\n  .mx-lg-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-lg-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-lg-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-lg-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-lg-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-lg-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-lg-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-lg-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-lg-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-lg-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-lg-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-lg-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-lg-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-lg-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-lg-0 {\n    margin-top: 0 !important;\n  }\n  .mt-lg-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-lg-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-lg-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-lg-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-lg-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-lg-auto {\n    margin-top: auto !important;\n  }\n  .me-lg-0 {\n    margin-right: 0 !important;\n  }\n  .me-lg-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-lg-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-lg-3 {\n    margin-right: 1rem !important;\n  }\n  .me-lg-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-lg-5 {\n    margin-right: 3rem !important;\n  }\n  .me-lg-auto {\n    margin-right: auto !important;\n  }\n  .mb-lg-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-lg-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-lg-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-lg-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-lg-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-lg-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-lg-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-lg-0 {\n    margin-left: 0 !important;\n  }\n  .ms-lg-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-lg-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-lg-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-lg-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-lg-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-lg-auto {\n    margin-left: auto !important;\n  }\n  .p-lg-0 {\n    padding: 0 !important;\n  }\n  .p-lg-1 {\n    padding: 0.25rem !important;\n  }\n  .p-lg-2 {\n    padding: 0.5rem !important;\n  }\n  .p-lg-3 {\n    padding: 1rem !important;\n  }\n  .p-lg-4 {\n    padding: 1.5rem !important;\n  }\n  .p-lg-5 {\n    padding: 3rem !important;\n  }\n  .px-lg-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-lg-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-lg-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-lg-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-lg-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-lg-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-lg-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-lg-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-lg-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-lg-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-lg-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-lg-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-lg-0 {\n    padding-top: 0 !important;\n  }\n  .pt-lg-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-lg-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-lg-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-lg-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-lg-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-lg-0 {\n    padding-right: 0 !important;\n  }\n  .pe-lg-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-lg-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-lg-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-lg-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-lg-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-lg-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-lg-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-lg-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-lg-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-lg-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-lg-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-lg-0 {\n    padding-left: 0 !important;\n  }\n  .ps-lg-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-lg-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-lg-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-lg-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-lg-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-lg-0 {\n    gap: 0 !important;\n  }\n  .gap-lg-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-lg-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-lg-3 {\n    gap: 1rem !important;\n  }\n  .gap-lg-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-lg-5 {\n    gap: 3rem !important;\n  }\n  .text-lg-start {\n    text-align: left !important;\n  }\n  .text-lg-end {\n    text-align: right !important;\n  }\n  .text-lg-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1200px) {\n  .float-xl-start {\n    float: left !important;\n  }\n  .float-xl-end {\n    float: right !important;\n  }\n  .float-xl-none {\n    float: none !important;\n  }\n  .d-xl-inline {\n    display: inline !important;\n  }\n  .d-xl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xl-block {\n    display: block !important;\n  }\n  .d-xl-grid {\n    display: grid !important;\n  }\n  .d-xl-table {\n    display: table !important;\n  }\n  .d-xl-table-row {\n    display: table-row !important;\n  }\n  .d-xl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xl-flex {\n    display: flex !important;\n  }\n  .d-xl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xl-none {\n    display: none !important;\n  }\n  .flex-xl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xl-row {\n    flex-direction: row !important;\n  }\n  .flex-xl-column {\n    flex-direction: column !important;\n  }\n  .flex-xl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xl-center {\n    align-items: center !important;\n  }\n  .align-items-xl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xl-center {\n    align-content: center !important;\n  }\n  .align-content-xl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xl-center {\n    align-self: center !important;\n  }\n  .align-self-xl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xl-first {\n    order: -1 !important;\n  }\n  .order-xl-0 {\n    order: 0 !important;\n  }\n  .order-xl-1 {\n    order: 1 !important;\n  }\n  .order-xl-2 {\n    order: 2 !important;\n  }\n  .order-xl-3 {\n    order: 3 !important;\n  }\n  .order-xl-4 {\n    order: 4 !important;\n  }\n  .order-xl-5 {\n    order: 5 !important;\n  }\n  .order-xl-last {\n    order: 6 !important;\n  }\n  .m-xl-0 {\n    margin: 0 !important;\n  }\n  .m-xl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xl-3 {\n    margin: 1rem !important;\n  }\n  .m-xl-4 {\n    margin: 1.5rem !important;\n  }\n  .m-xl-5 {\n    margin: 3rem !important;\n  }\n  .m-xl-auto {\n    margin: auto !important;\n  }\n  .mx-xl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xl-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-xl-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-xl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xl-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-xl-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-xl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xl-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-xl-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-xl-auto {\n    margin-top: auto !important;\n  }\n  .me-xl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xl-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-xl-5 {\n    margin-right: 3rem !important;\n  }\n  .me-xl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xl-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-xl-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-xl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xl-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-xl-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-xl-auto {\n    margin-left: auto !important;\n  }\n  .p-xl-0 {\n    padding: 0 !important;\n  }\n  .p-xl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xl-3 {\n    padding: 1rem !important;\n  }\n  .p-xl-4 {\n    padding: 1.5rem !important;\n  }\n  .p-xl-5 {\n    padding: 3rem !important;\n  }\n  .px-xl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xl-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-xl-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-xl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xl-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-xl-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-xl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xl-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-xl-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-xl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xl-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-xl-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-xl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xl-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-xl-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-xl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xl-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-xl-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-xl-0 {\n    gap: 0 !important;\n  }\n  .gap-xl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xl-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-xl-5 {\n    gap: 3rem !important;\n  }\n  .text-xl-start {\n    text-align: left !important;\n  }\n  .text-xl-end {\n    text-align: right !important;\n  }\n  .text-xl-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1400px) {\n  .float-xxl-start {\n    float: left !important;\n  }\n  .float-xxl-end {\n    float: right !important;\n  }\n  .float-xxl-none {\n    float: none !important;\n  }\n  .d-xxl-inline {\n    display: inline !important;\n  }\n  .d-xxl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xxl-block {\n    display: block !important;\n  }\n  .d-xxl-grid {\n    display: grid !important;\n  }\n  .d-xxl-table {\n    display: table !important;\n  }\n  .d-xxl-table-row {\n    display: table-row !important;\n  }\n  .d-xxl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xxl-flex {\n    display: flex !important;\n  }\n  .d-xxl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xxl-none {\n    display: none !important;\n  }\n  .flex-xxl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xxl-row {\n    flex-direction: row !important;\n  }\n  .flex-xxl-column {\n    flex-direction: column !important;\n  }\n  .flex-xxl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xxl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xxl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xxl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xxl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xxl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xxl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xxl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xxl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xxl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xxl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xxl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xxl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xxl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xxl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xxl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xxl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xxl-center {\n    align-items: center !important;\n  }\n  .align-items-xxl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xxl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xxl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xxl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xxl-center {\n    align-content: center !important;\n  }\n  .align-content-xxl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xxl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xxl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xxl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xxl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xxl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xxl-center {\n    align-self: center !important;\n  }\n  .align-self-xxl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xxl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xxl-first {\n    order: -1 !important;\n  }\n  .order-xxl-0 {\n    order: 0 !important;\n  }\n  .order-xxl-1 {\n    order: 1 !important;\n  }\n  .order-xxl-2 {\n    order: 2 !important;\n  }\n  .order-xxl-3 {\n    order: 3 !important;\n  }\n  .order-xxl-4 {\n    order: 4 !important;\n  }\n  .order-xxl-5 {\n    order: 5 !important;\n  }\n  .order-xxl-last {\n    order: 6 !important;\n  }\n  .m-xxl-0 {\n    margin: 0 !important;\n  }\n  .m-xxl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xxl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xxl-3 {\n    margin: 1rem !important;\n  }\n  .m-xxl-4 {\n    margin: 1.5rem !important;\n  }\n  .m-xxl-5 {\n    margin: 3rem !important;\n  }\n  .m-xxl-auto {\n    margin: auto !important;\n  }\n  .mx-xxl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xxl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xxl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xxl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xxl-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-xxl-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-xxl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xxl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xxl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xxl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xxl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xxl-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-xxl-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-xxl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xxl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xxl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xxl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xxl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xxl-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-xxl-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-xxl-auto {\n    margin-top: auto !important;\n  }\n  .me-xxl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xxl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xxl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xxl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xxl-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-xxl-5 {\n    margin-right: 3rem !important;\n  }\n  .me-xxl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xxl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xxl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xxl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xxl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xxl-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-xxl-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-xxl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xxl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xxl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xxl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xxl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xxl-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-xxl-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-xxl-auto {\n    margin-left: auto !important;\n  }\n  .p-xxl-0 {\n    padding: 0 !important;\n  }\n  .p-xxl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xxl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xxl-3 {\n    padding: 1rem !important;\n  }\n  .p-xxl-4 {\n    padding: 1.5rem !important;\n  }\n  .p-xxl-5 {\n    padding: 3rem !important;\n  }\n  .px-xxl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xxl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xxl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xxl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xxl-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-xxl-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-xxl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xxl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xxl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xxl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xxl-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-xxl-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-xxl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xxl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xxl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xxl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xxl-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-xxl-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-xxl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xxl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xxl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xxl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xxl-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-xxl-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-xxl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xxl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xxl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xxl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xxl-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-xxl-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-xxl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xxl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xxl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xxl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xxl-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-xxl-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-xxl-0 {\n    gap: 0 !important;\n  }\n  .gap-xxl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xxl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xxl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xxl-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-xxl-5 {\n    gap: 3rem !important;\n  }\n  .text-xxl-start {\n    text-align: left !important;\n  }\n  .text-xxl-end {\n    text-align: right !important;\n  }\n  .text-xxl-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1200px) {\n  .fs-1 {\n    font-size: 2.5rem !important;\n  }\n  .fs-2 {\n    font-size: 2rem !important;\n  }\n  .fs-3 {\n    font-size: 1.75rem !important;\n  }\n  .fs-4 {\n    font-size: 1.5rem !important;\n  }\n}\n@media print {\n  .d-print-inline {\n    display: inline !important;\n  }\n  .d-print-inline-block {\n    display: inline-block !important;\n  }\n  .d-print-block {\n    display: block !important;\n  }\n  .d-print-grid {\n    display: grid !important;\n  }\n  .d-print-table {\n    display: table !important;\n  }\n  .d-print-table-row {\n    display: table-row !important;\n  }\n  .d-print-table-cell {\n    display: table-cell !important;\n  }\n  .d-print-flex {\n    display: flex !important;\n  }\n  .d-print-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-print-none {\n    display: none !important;\n  }\n}',"",{version:3,sources:["webpack://./node_modules/bootstrap/scss/_root.scss","webpack://./node_modules/bootstrap/scss/vendor/_rfs.scss","webpack://./src/scss/style.scss","webpack://./node_modules/bootstrap/scss/_reboot.scss","webpack://./node_modules/bootstrap/scss/_variables.scss","webpack://./node_modules/bootstrap/scss/mixins/_border-radius.scss","webpack://./node_modules/bootstrap/scss/_containers.scss","webpack://./node_modules/bootstrap/scss/mixins/_container.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://./node_modules/bootstrap/scss/_grid.scss","webpack://./node_modules/bootstrap/scss/mixins/_grid.scss","webpack://./node_modules/bootstrap/scss/_tables.scss","webpack://./node_modules/bootstrap/scss/mixins/_table-variants.scss","webpack://./node_modules/bootstrap/scss/_buttons.scss","webpack://./node_modules/bootstrap/scss/mixins/_gradients.scss","webpack://./node_modules/bootstrap/scss/mixins/_transition.scss","webpack://./node_modules/bootstrap/scss/mixins/_buttons.scss","webpack://./node_modules/bootstrap/scss/_close.scss","webpack://./node_modules/bootstrap/scss/_spinners.scss","webpack://./node_modules/bootstrap/scss/_offcanvas.scss","webpack://./node_modules/bootstrap/scss/mixins/_backdrop.scss","webpack://./node_modules/bootstrap/scss/mixins/_clearfix.scss","webpack://./node_modules/bootstrap/scss/helpers/_color-bg.scss","webpack://./node_modules/bootstrap/scss/helpers/_colored-links.scss","webpack://./node_modules/bootstrap/scss/helpers/_ratio.scss","webpack://./node_modules/bootstrap/scss/helpers/_position.scss","webpack://./node_modules/bootstrap/scss/helpers/_stacks.scss","webpack://./node_modules/bootstrap/scss/helpers/_visually-hidden.scss","webpack://./node_modules/bootstrap/scss/mixins/_visually-hidden.scss","webpack://./node_modules/bootstrap/scss/helpers/_stretched-link.scss","webpack://./node_modules/bootstrap/scss/helpers/_text-truncation.scss","webpack://./node_modules/bootstrap/scss/mixins/_text-truncate.scss","webpack://./node_modules/bootstrap/scss/helpers/_vr.scss","webpack://./node_modules/bootstrap/scss/mixins/_utilities.scss","webpack://./node_modules/bootstrap/scss/utilities/_api.scss"],names:[],mappings:"AAAA;EAQI,kBAAA;EAAA,oBAAA;EAAA,oBAAA;EAAA,kBAAA;EAAA,iBAAA;EAAA,oBAAA;EAAA,oBAAA;EAAA,mBAAA;EAAA,kBAAA;EAAA,kBAAA;EAAA,gBAAA;EAAA,gBAAA;EAAA,kBAAA;EAAA,uBAAA;EAIA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAAA,sBAAA;EAIA,qBAAA;EAAA,uBAAA;EAAA,qBAAA;EAAA,kBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,mBAAA;EAAA,kBAAA;EAIA,8BAAA;EAAA,iCAAA;EAAA,6BAAA;EAAA,2BAAA;EAAA,6BAAA;EAAA,4BAAA;EAAA,6BAAA;EAAA,yBAAA;EAGF,6BAAA;EACA,uBAAA;EACA,+BAAA;EACA,+BAAA;EAMA,qNAAA;EACA,yGAAA;EACA,yFAAA;EAOA,gDAAA;EC4PI,yBALI;EDrPR,0BAAA;EACA,0BAAA;EACA,wBAAA;EAIA,kBAAA;EAIA,sBAAA;EACA,wBAAA;EACA,0BAAA;EACA,mDAAA;EAEA,4BAAA;EACA,8BAAA;EACA,6BAAA;EACA,2BAAA;EACA,4BAAA;EACA,8BAAA;EAGA,wBAAA;EACA,8BAAA;EAEA,wBAAA;EAEA,0BAAA;AEJF;;ACpDA;;;EAGE,sBAAA;ADuDF;;ACxCI;EANJ;IAOM,uBAAA;ED4CJ;AACF;;AC/BA;EACE,SAAA;EACA,uCAAA;EFmPI,mCALI;EE5OR,uCAAA;EACA,uCAAA;EACA,2BAAA;EACA,qCAAA;EACA,mCAAA;EACA,8BAAA;EACA,6CAAA;ADkCF;;ACzBA;EACE,cAAA;EACA,cCijB4B;EDhjB5B,SAAA;EACA,qBAAA;EACA,aCujB4B;AF3hB9B;;AClBA;EACE,aAAA;EACA,qBCwf4B;EDrf5B,gBCwf4B;EDvf5B,gBCwf4B;AFre9B;;ACfA;EF6MQ,iCAAA;AC1LR;ADwBI;EE3CJ;IFoNQ,iBAAA;EC7LN;AACF;;ACnBA;EFwMQ,iCAAA;ACjLR;ADeI;EEtCJ;IF+MQ,eAAA;ECpLN;AACF;;ACvBA;EFmMQ,+BAAA;ACxKR;ADMI;EEjCJ;IF0MQ,kBAAA;EC3KN;AACF;;AC3BA;EF8LQ,iCAAA;AC/JR;ADHI;EE5BJ;IFqMQ,iBAAA;EClKN;AACF;;AC/BA;EFqLM,kBALI;AC7IV;;AC9BA;EFgLM,eALI;ACzIV;;ACvBA;EACE,aAAA;EACA,mBCmS0B;AFzQ5B;;AChBA;EACE,iCAAA;EACA,YAAA;EACA,8BAAA;ADmBF;;ACbA;EACE,mBAAA;EACA,kBAAA;EACA,oBAAA;ADgBF;;ACVA;;EAEE,kBAAA;ADaF;;ACVA;;;EAGE,aAAA;EACA,mBAAA;ADaF;;ACVA;;;;EAIE,gBAAA;ADaF;;ACVA;EACE,gBC6X4B;AFhX9B;;ACRA;EACE,qBAAA;EACA,cAAA;ADWF;;ACLA;EACE,gBAAA;ADQF;;ACAA;;EAEE,mBCsW4B;AFnW9B;;ACKA;EFmFM,kBALI;AC/EV;;ACQA;EACE,iBC+a4B;ED9a5B,wCAAA;ADLF;;ACcA;;EAEE,kBAAA;EF+DI,iBALI;EExDR,cAAA;EACA,wBAAA;ADXF;;ACcA;EAAM,eAAA;ADVN;;ACWA;EAAM,WAAA;ADPN;;ACYA;EACE,2BAAA;EACA,0BCqKwC;AF9K1C;ACWE;EACE,iCAAA;ADTJ;;ACoBE;EAEE,cAAA;EACA,qBAAA;ADlBJ;;ACyBA;;;;EAIE,qCCkR4B;EH7PxB,cALI;ACrCV;;AC6BA;EACE,cAAA;EACA,aAAA;EACA,mBAAA;EACA,cAAA;EFSI,kBALI;AC7BV;AC8BE;EFII,kBALI;EEGN,cAAA;EACA,kBAAA;AD5BJ;;ACgCA;EFHM,kBALI;EEUR,2BAAA;EACA,qBAAA;AD7BF;ACgCE;EACE,cAAA;AD9BJ;;ACkCA;EACE,2BAAA;EFfI,kBALI;EEsBR,wBCuyCkC;EDtyClC,sCCuyCkC;EC3kDhC,sBAAA;AHsQJ;ACiCE;EACE,UAAA;EFtBE,cALI;ACHV;;ACyCA;EACE,gBAAA;ADtCF;;AC4CA;;EAEE,sBAAA;ADzCF;;ACiDA;EACE,oBAAA;EACA,yBAAA;AD9CF;;ACiDA;EACE,mBCsT4B;EDrT5B,sBCqT4B;EDpT5B,cCjVS;EDkVT,gBAAA;AD9CF;;AC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A;A/B64GZ;;A+Bp5GQ;EAOI,0BAAA;A/Bi5GZ;;A+Bx5GQ;EAOI,4BAAA;A/Bq5GZ;;A+B55GQ;EAOI,kCAAA;A/By5GZ;;A+Bh6GQ;EAOI,sCAAA;A/B65GZ;;A+Bp6GQ;EAOI,oCAAA;A/Bi6GZ;;A+Bx6GQ;EAOI,kCAAA;A/Bq6GZ;;A+B56GQ;EAOI,yCAAA;A/By6GZ;;A+Bh7GQ;EAOI,wCAAA;A/B66GZ;;A+Bp7GQ;EAOI,wCAAA;A/Bi7GZ;;A+Bx7GQ;EAOI,kCAAA;A/Bq7GZ;;A+B57GQ;EAOI,gCAAA;A/By7GZ;;A+Bh8GQ;EAOI,8BAAA;A/B67GZ;;A+Bp8GQ;EAOI,gCAAA;A/Bi8GZ;;A+Bx8GQ;EAOI,+BAAA;A/Bq8GZ;;A+B58GQ;EAOI,oCAAA;A/By8GZ;;A+Bh9GQ;EAOI,kCAAA;A/B68GZ;;A+Bp9GQ;EAOI,gCAAA;A/Bi9GZ;;A+Bx9GQ;EAOI,uCAAA;A/Bq9GZ;;A+B59GQ;EAOI,sCAAA;A/By9GZ;;A+Bh+GQ;EAOI,iCAAA;A/B69GZ;;A+Bp+GQ;EAOI,2BAAA;A/Bi+GZ;;A+Bx+GQ;EAOI,iCAAA;A/Bq+GZ;;A+B5+GQ;EAOI,+BAAA;A/By+GZ;;A+Bh/GQ;EAOI,6BAAA;A/B6+GZ;;A+Bp/GQ;EAOI,+BAAA;A/Bi/GZ;;A+Bx/GQ;EAOI,8BAAA;A/Bq/GZ;;A+B5/GQ;EAOI,oBAAA;A/By/GZ;;A+BhgHQ;EAOI,mBAAA;A/B6/GZ;;A+BpgHQ;EAOI,mBAAA;A/BigHZ;;A+BxgHQ;EAOI,mBAAA;A/BqgHZ;;A+B5gHQ;EAOI,mBAAA;A/BygHZ;;A+BhhHQ;EAOI,mBAAA;A/B6gHZ;;A+BphHQ;EAOI,mBAAA;A/BihHZ;;A+BxhHQ;EAOI,mBAAA;A/BqhHZ;;A+B5hHQ;EAOI,oBAAA;A/ByhHZ;;A+BhiHQ;EAOI,0BAAA;A/B6hHZ;;A+BpiHQ;EAOI,yBAAA;A/BiiHZ;;A+BxiHQ;EAOI,uBAAA;A/BqiHZ;;A+B5iHQ;EAOI,yBAAA;A/ByiHZ;;A+BhjHQ;EAOI,uBAAA;A/B6iHZ;;A+BpjHQ;EAOI,uBAAA;A/BijHZ;;A+BxjHQ;EAOI,0BAAA;EAAA,yBAAA;A/BsjHZ;;A+B7jHQ;EAOI,gCAAA;EAAA,+BAAA;A/B2jHZ;;A+BlkHQ;EAOI,+BAAA;EAAA,8BAAA;A/BgkHZ;;A+BvkHQ;EAOI,6BAAA;EAAA,4BAAA;A/BqkHZ;;A+B5kHQ;EAOI,+BAAA;EAAA,8BAAA;A/B0kHZ;;A+BjlHQ;EAOI,6BAAA;EAAA,4BAAA;A/B+kHZ;;A+BtlHQ;EAOI,6BAAA;EAAA,4BAAA;A/BolHZ;;A+B3lHQ;EAOI,wBAAA;EAAA,2BAAA;A/BylHZ;;A+BhmHQ;EAOI,8BAAA;EAAA,iCAAA;A/B8lHZ;;A+BrmHQ;EAOI,6BAAA;EAAA,gCAAA;A/BmmHZ;;A+B1mHQ;EAOI,2BAAA;EAAA,8BAAA;A/BwmHZ;;A+B/mHQ;EAOI,6BAAA;EAAA,gCAAA;A/B6mHZ;;A+BpnHQ;EAOI,2BAAA;EAAA,8BAAA;A/BknHZ;;A+BznHQ;EAOI,2BAAA;EAAA,8BAAA;A/BunHZ;;A+B9nHQ;EAOI,wBAAA;A/B2nHZ;;A+BloHQ;EAOI,8BAAA;A/B+nHZ;;A+BtoHQ;EAOI,6BAAA;A/BmoHZ;;A+B1oHQ;EAOI,2BAAA;A/BuoHZ;;A+B9oHQ;EAOI,6BAAA;A/B2oHZ;;A+BlpHQ;EAOI,2BAAA;A/B+oHZ;;A+BtpHQ;EAOI,2BAAA;A/BmpHZ;;A+B1pHQ;EAOI,0BAAA;A/BupHZ;;A+B9pHQ;EAOI,gCAAA;A/B2pHZ;;A+BlqHQ;EAOI,+BAAA;A/B+pHZ;;A+BtqHQ;EAOI,6BAAA;A/BmqHZ;;A+B1qHQ;EAOI,+BAAA;A/BuqHZ;;A+B9qHQ;EAOI,6BAAA;A/B2qHZ;;A+BlrHQ;EAOI,6BAAA;A/B+qHZ;;A+BtrHQ;EAOI,2BAAA;A/BmrHZ;;A+B1rHQ;EAOI,iCAAA;A/BurHZ;;A+B9rHQ;EAOI,gCAAA;A/B2rHZ;;A+BlsHQ;EAOI,8BAAA;A/B+rHZ;;A+BtsHQ;EAOI,gCAAA;A/BmsHZ;;A+B1sHQ;EAOI,8BAAA;A/BusHZ;;A+B9sHQ;EAOI,8BAAA;A/B2sHZ;;A+BltHQ;EAOI,yBAAA;A/B+sHZ;;A+BttHQ;EAOI,+BAAA;A/BmtHZ;;A+B1tHQ;EAOI,8BAAA;A/ButHZ;;A+B9tHQ;EAOI,4BAAA;A/B2tHZ;;A+BluHQ;EAOI,8BAAA;A/B+tHZ;;A+BtuHQ;EAOI,4BAAA;A/BmuHZ;;A+B1uHQ;EAOI,4BAAA;A/BuuHZ;;A+B9uHQ;EAOI,qBAAA;A/B2uHZ;;A+BlvHQ;EAOI,2BAAA;A/B+uHZ;;A+BtvHQ;EAOI,0BAAA;A/BmvHZ;;A+B1vHQ;EAOI,wBAAA;A/BuvHZ;;A+B9vHQ;EAOI,0BAAA;A/B2vHZ;;A+BlwHQ;EAOI,wBAAA;A/B+vHZ;;A+BtwHQ;EAOI,2BAAA;EAAA,0BAAA;A/BowHZ;;A+B3wHQ;EAOI,iCAAA;EAAA,gCAAA;A/BywHZ;;A+BhxHQ;EAOI,gCAAA;EAAA,+BAAA;A/B8wHZ;;A+BrxHQ;EAOI,8BAAA;EAAA,6BAAA;A/BmxHZ;;A+B1xHQ;EAOI,gCAAA;EAAA,+BAAA;A/BwxHZ;;A+B/xHQ;EAOI,8BAAA;EAAA,6BAAA;A/B6xHZ;;A+BpyHQ;EAOI,yBAAA;EAAA,4BAAA;A/BkyHZ;;A+BzyHQ;EAOI,+BAAA;EAAA,kCAAA;A/BuyHZ;;A+B9yHQ;EAOI,8BAAA;EAAA,iCAAA;A/B4yHZ;;A+BnzHQ;EAOI,4BAAA;EAAA,+BAAA;A/BizHZ;;A+BxzHQ;EAOI,8BAAA;EAAA,iCAAA;A/BszHZ;;A+B7zHQ;EAOI,4BAAA;EAAA,+BAAA;A/B2zHZ;;A+Bl0HQ;EAOI,yBAAA;A/B+zHZ;;A+Bt0HQ;EAOI,+BAAA;A/Bm0HZ;;A+B10HQ;EAOI,8BAAA;A/Bu0HZ;;A+B90HQ;EAOI,4BAAA;A/B20HZ;;A+Bl1HQ;EAOI,8BAAA;A/B+0HZ;;A+Bt1HQ;EAOI,4BAAA;A/Bm1HZ;;A+B11HQ;EAOI,2BAAA;A/Bu1HZ;;A+B91HQ;EAOI,iCAAA;A/B21HZ;;A+Bl2HQ;EAOI,gCAAA;A/B+1HZ;;A+Bt2HQ;EAOI,8BAAA;A/Bm2HZ;;A+B12HQ;EAOI,gCAAA;A/Bu2HZ;;A+B92HQ;EAOI,8BAAA;A/B22HZ;;A+Bl3HQ;EAOI,4BAAA;A/B+2HZ;;A+Bt3HQ;EAOI,kCAAA;A/Bm3HZ;;A+B13HQ;EAOI,iCAAA;A/Bu3HZ;;A+B93HQ;EAOI,+BAAA;A/B23HZ;;A+Bl4HQ;EAOI,iCAAA;A/B+3HZ;;A+Bt4HQ;EAOI,+BAAA;A/Bm4HZ;;A+B14HQ;EAOI,0BAAA;A/Bu4HZ;;A+B94HQ;EAOI,gCAAA;A/B24HZ;;A+Bl5HQ;EAOI,+BAAA;A/B+4HZ;;A+Bt5HQ;EAOI,6BAAA;A/Bm5HZ;;A+B15HQ;EAOI,+BAAA;A/Bu5HZ;;A+B95HQ;EAOI,6BAAA;A/B25HZ;;A+Bl6HQ;EAOI,iBAAA;A/B+5HZ;;A+Bt6HQ;EAOI,uBAAA;A/Bm6HZ;;A+B16HQ;EAOI,sBAAA;A/Bu6HZ;;A+B96HQ;EAOI,oBAAA;A/B26HZ;;A+Bl7HQ;EAOI,sBAAA;A/B+6HZ;;A+Bt7HQ;EAOI,oBAAA;A/Bm7HZ;;A+B17HQ;EAOI,gDAAA;A/Bu7HZ;;A+B97HQ;EAOI,4CAAA;A/B27HZ;;A+Bl8HQ;EAOI,4CAAA;A/B+7HZ;;A+Bt8HQ;EAOI,0CAAA;A/Bm8HZ;;A+B18HQ;EAOI,4CAAA;A/Bu8HZ;;A+B98HQ;EAOI,6BAAA;A/B28HZ;;A+Bl9HQ;EAOI,0BAAA;A/B+8HZ;;A+Bt9HQ;EAOI,6BAAA;A/Bm9HZ;;A+B19HQ;EAOI,6BAAA;A/Bu9HZ;;A+B99HQ;EAOI,2BAAA;A/B29HZ;;A+Bl+HQ;EAOI,+BAAA;A/B+9HZ;;A+Bt+HQ;EAOI,2BAAA;A/Bm+HZ;;A+B1+HQ;EAOI,2BAAA;A/Bu+HZ;;A+B9+HQ;EAOI,2BAAA;A/B2+HZ;;A+Bl/HQ;EAOI,8BAAA;A/B++HZ;;A+Bt/HQ;EAOI,yBAAA;A/Bm/HZ;;A+B1/HQ;EAOI,4BAAA;A/Bu/HZ;;A+B9/HQ;EAOI,2BAAA;A/B2/HZ;;A+BlgIQ;EAOI,yBAAA;A/B+/HZ;;A+BtgIQ;EAOI,2BAAA;A/BmgIZ;;A+B1gIQ;EAOI,4BAAA;A/BugIZ;;A+B9gIQ;EAOI,6BAAA;A/B2gIZ;;A+BlhIQ;EAOI,gCAAA;A/B+gIZ;;A+BthIQ;EAOI,qCAAA;A/BmhIZ;;A+B1hIQ;EAOI,wCAAA;A/BuhIZ;;A+B9hIQ;EAOI,oCAAA;A/B2hIZ;;A+BliIQ;EAOI,oCAAA;A/B+hIZ;;A+BtiIQ;EAOI,qCAAA;A/BmiIZ;;A+B1iIQ;EAOI,8BAAA;A/BuiIZ;;A+B9iIQ;EAOI,8BAAA;A/B2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8BAAA;E/Bo2IV;E+B32IM;IAOI,iCAAA;E/Bu2IV;E+B92IM;IAOI,sCAAA;E/B02IV;E+Bj3IM;IAOI,yCAAA;E/B62IV;E+Bp3IM;IAOI,uBAAA;E/Bg3IV;E+Bv3IM;IAOI,uBAAA;E/Bm3IV;E+B13IM;IAOI,yBAAA;E/Bs3IV;E+B73IM;IAOI,yBAAA;E/By3IV;E+Bh4IM;IAOI,0BAAA;E/B43IV;E+Bn4IM;IAOI,4BAAA;E/B+3IV;E+Bt4IM;IAOI,kCAAA;E/Bk4IV;E+Bz4IM;IAOI,sCAAA;E/Bq4IV;E+B54IM;IAOI,oCAAA;E/Bw4IV;E+B/4IM;IAOI,kCAAA;E/B24IV;E+Bl5IM;IAOI,yCAAA;E/B84IV;E+Br5IM;IAOI,wCAAA;E/Bi5IV;E+Bx5IM;IAOI,wCAAA;E/Bo5IV;E+B35IM;IAOI,kCAAA;E/Bu5IV;E+B95IM;IAOI,gCAAA;E/B05IV;E+Bj6IM;IAOI,8BAAA;E/B65IV;E+Bp6IM;IAOI,gCAAA;E/Bg6IV;E+Bv6IM;IAOI,+BAAA;E/Bm6IV;E+B16IM;IAOI,oCAAA;E/Bs6IV;E+B76IM;IAOI,kCAAA;E/By6IV;E+Bh7IM;IAOI,gCAAA;E/B46IV;E+Bn7IM;IAOI,uCAAA;E/B+6IV;E+Bt7IM;IAOI,sCAAA;E/Bk7IV;E+Bz7IM;IAOI,iCAAA;E/Bq7IV;E+B57IM;IAOI,2BAAA;E/Bw7IV;E+B/7IM;IAOI,iCAAA;E/B27IV;E+Bl8IM;IAOI,+BAAA;E/B87IV;E+Br8IM;IAOI,6BAAA;E/Bi8IV;E+Bx8IM;IAOI,+BAAA;E/Bo8IV;E+B38IM;IAOI,8BAAA;E/Bu8IV;E+B98IM;IAOI,oBAAA;E/B08IV;E+Bj9IM;IAOI,mBAAA;E/B68IV;E+Bp9IM;IAOI,mBAAA;E/Bg9IV;E+Bv9IM;IAOI,mBAAA;E/Bm9IV;E+B19IM;IAOI,mBAAA;E/Bs9IV;E+B79IM;IAOI,mBAAA;E/By9IV;E+Bh+IM;IAOI,mBAAA;E/B49IV;E+Bn+IM;IAOI,mBAAA;E/B+9IV;E+Bt+IM;IAOI,oBAAA;E/Bk+IV;E+Bz+IM;IAOI,0BAAA;E/Bq+IV;E+B5+IM;IAOI,yBAAA;E/Bw+I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M;IAOI,iCAAA;E/B+uJV;E+BtvJM;IAOI,+BAAA;E/BkvJV;E+BzvJM;IAOI,iCAAA;E/BqvJV;E+B5vJM;IAOI,+BAAA;E/BwvJV;E+B/vJM;IAOI,0BAAA;E/B2vJV;E+BlwJM;IAOI,gCAAA;E/B8vJV;E+BrwJM;IAOI,+BAAA;E/BiwJV;E+BxwJM;IAOI,6BAAA;E/BowJV;E+B3wJM;IAOI,+BAAA;E/BuwJV;E+B9wJM;IAOI,6BAAA;E/B0wJV;E+BjxJM;IAOI,iBAAA;E/B6wJV;E+BpxJM;IAOI,uBAAA;E/BgxJV;E+BvxJM;IAOI,sBAAA;E/BmxJV;E+B1xJM;IAOI,oBAAA;E/BsxJV;E+B7xJM;IAOI,sBAAA;E/ByxJV;E+BhyJM;IAOI,oBAAA;E/B4xJV;E+BnyJM;IAOI,2BAAA;E/B+xJV;E+BtyJM;IAOI,4BAAA;E/BkyJV;E+BzyJM;IAOI,6BAAA;E/BqyJV;AACF;AMhzJI;EyBGI;IAOI,sBAAA;E/B0yJV;E+BjzJM;IAOI,uBAAA;E/B6yJV;E+BpzJM;IAOI,sBAAA;E/BgzJV;E+BvzJM;IAOI,0BAAA;E/BmzJV;E+B1zJM;IAOI,gCAAA;E/BszJV;E+B7zJM;IAOI,yBAAA;E/ByzJV;E+Bh0JM;IAOI,wBAAA;E/B4zJV;E+Bn0JM;IAOI,yBAAA;E/B+zJV;E+Bt0JM;IAOI,6BAAA;E/Bk0JV;E+Bz0JM;IAOI,8BAAA;E/Bq0JV;E+B50JM;IAOI,wBAAA;E/Bw0JV;E+B/0JM;IAOI,+BAAA;E/B20JV;E+Bl1JM;IAOI,wBAAA;E/B80JV;E+Br1JM;IAOI,yBAAA;E/Bi1JV;E+Bx1JM;IAOI,8BAAA;E/Bo1JV;E+B31JM;IAOI,iCAAA;E/Bu1JV;E+B91JM;IAOI,sCAAA;E/B01JV;E+Bj2JM;IAOI,yCAAA;E/B61JV;E+Bp2JM;IAOI,uBAAA;E/Bg2JV;E+Bv2JM;IAOI,uBAAA;E/Bm2JV;E+B12JM;IAOI,yBAAA;E/Bs2JV;E+B72JM;IAOI,yBAAA;E/By2JV;E+Bh3JM;IAOI,0BAAA;E/B42JV;E+Bn3JM;IAOI,4BAAA;E/B+2JV;E+Bt3JM;IAOI,kCAAA;E/Bk3JV;E+Bz3JM;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+BpwKM;IAOI,uBAAA;E/BgwKV;E+BvwKM;IAOI,sBAAA;E/BmwKV;E+B1wKM;IAOI,oBAAA;E/BswKV;E+B7wKM;IAOI,sBAAA;E/BywKV;E+BhxKM;IAOI,oBAAA;E/B4wKV;E+BnxKM;IAOI,2BAAA;E/B+wKV;E+BtxKM;IAOI,4BAAA;E/BkxKV;E+BzxKM;IAOI,6BAAA;E/BqxKV;AACF;AMhyKI;EyBGI;IAOI,sBAAA;E/B0xKV;E+BjyKM;IAOI,uBAAA;E/B6xKV;E+BpyKM;IAOI,sBAAA;E/BgyKV;E+BvyKM;IAOI,0BAAA;E/BmyKV;E+B1yKM;IAOI,gCAAA;E/BsyKV;E+B7yKM;IAOI,yBAAA;E/ByyKV;E+BhzKM;IAOI,wBAAA;E/B4yKV;E+BnzKM;IAOI,yBAAA;E/B+yKV;E+BtzKM;IAOI,6BAAA;E/BkzKV;E+BzzKM;IAOI,8BAAA;E/BqzKV;E+B5zKM;IAOI,wBAAA;E/BwzKV;E+B/zKM;IAOI,+BAAA;E/B2zKV;E+Bl0KM;IAOI,wBAAA;E/B8zKV;E+Br0KM;IAOI,yBAAA;E/Bi0KV;E+Bx0KM;IAOI,8BAAA;E/Bo0KV;E+B30KM;IAOI,iCAAA;E/Bu0KV;E+B90KM;IAOI,sCAAA;E/B00KV;E+Bj1KM;IAOI,yCAAA;E/B60KV;E+Bp1KM;IAOI,uBAAA;E/Bg1KV;E+Bv1KM;IAOI,uBAAA;E/Bm1KV;E+B11KM;IAOI,yBAAA;E/Bs1KV;E+B71KM;IAOI,yBAAA;E/By1KV;E+Bh2KM;IAOI,0BAAA;E/B41KV;E+Bn2KM;IAOI,4BAAA;E/B+1KV;E+Bt2KM;IAOI,kCAAA;E/Bk2KV;E+Bz2KM;IAOI,sCAAA;E/Bq2KV;E+B52KM;IAOI,oCAAA;E/Bw2KV;E+B/2KM;IAOI,kCAAA;E/B22KV;E+Bl3KM;IAOI,yCAAA;E/B82KV;E+Br3KM;IAOI,wCAAA;E/Bi3KV;E+Bx3KM;IAOI,wCAAA;E/Bo3KV;E+B33KM;IAOI,kCAAA;E/Bu3KV;E+B93KM;IAOI,gCAAA;E/B03KV;E+Bj4KM;IAOI,8BAAA;E/B63KV;E+Bp4KM;IAOI,gCAAA;E/Bg4KV;E+Bv4KM;IAOI,+BAAA;E/Bm4KV;E+B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sBAAA;E/BgxLV;E+BvxLM;IAOI,0BAAA;E/BmxLV;E+B1xLM;IAOI,gCAAA;E/BsxLV;E+B7xLM;IAOI,yBAAA;E/ByxLV;E+BhyLM;IAOI,wBAAA;E/B4xLV;E+BnyLM;IAOI,yBAAA;E/B+xLV;E+BtyLM;IAOI,6BAAA;E/BkyLV;E+BzyLM;IAOI,8BAAA;E/BqyLV;E+B5yLM;IAOI,wBAAA;E/BwyLV;E+B/yLM;IAOI,+BAAA;E/B2yLV;E+BlzLM;IAOI,wBAAA;E/B8yLV;E+BrzLM;IAOI,yBAAA;E/BizLV;E+BxzLM;IAOI,8BAAA;E/BozLV;E+B3zLM;IAOI,iCAAA;E/BuzLV;E+B9zLM;IAOI,sCAAA;E/B0zLV;E+Bj0LM;IAOI,yCAAA;E/B6zLV;E+Bp0LM;IAOI,uBAAA;E/Bg0LV;E+Bv0LM;IAOI,uBAAA;E/Bm0LV;E+B10LM;IAOI,yBAAA;E/Bs0LV;E+B70LM;IAOI,yBAAA;E/By0LV;E+Bh1LM;IAOI,0BAAA;E/B40LV;E+Bn1LM;IAOI,4BAAA;E/B+0LV;E+Bt1LM;IAOI,kCAAA;E/Bk1LV;E+Bz1LM;IAOI,sCAAA;E/Bq1LV;E+B51LM;IAOI,oCAAA;E/Bw1LV;E+B/1LM;IAOI,kCAAA;E/B21LV;E+Bl2LM;IAOI,yCAAA;E/B81LV;E+Br2LM;IAOI,wCAAA;E/Bi2LV;E+Bx2LM;IAOI,wCAAA;E/Bo2LV;E+B32LM;IAOI,kCAAA;E/Bu2LV;E+B92LM;IAOI,gCAAA;E/B02LV;E+Bj3LM;IAOI,8BAAA;E/B62LV;E+Bp3LM;IAOI,gCAAA;E/Bg3LV;E+Bv3LM;IAOI,+BAAA;E/Bm3LV;E+B13LM;IAOI,oCAAA;E/Bs3LV;E+B73LM;IAOI,kCAAA;E/By3LV;E+Bh4LM;IAOI,gCAAA;E/B43LV;E+Bn4LM;IAOI,uCAAA;E/B+3LV;E+Bt4LM;IAOI,sCAAA;E/Bk4LV;E+Bz4LM;IAOI,iCAAA;E/Bq4LV;E+B54LM;IAOI,2BAAA;E/Bw4LV;E+B/4LM;IAOI,iCAAA;E/B24LV;E+Bl5LM;IAOI,+BAAA;E/B84LV;E+Br5LM;IAOI,6BAAA;E/Bi5LV;E+Bx5LM;IAOI,+BAAA;E/Bo5L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M;IAOI,8BAAA;E/B2pMV;E+BlqMM;IAOI,4BAAA;E/B8pMV;E+BrqMM;IAOI,8BAAA;E/BiqMV;E+BxqMM;IAOI,4BAAA;E/BoqMV;E+B3qMM;IAOI,2BAAA;E/BuqMV;E+B9qMM;IAOI,iCAAA;E/B0qMV;E+BjrMM;IAOI,gCAAA;E/B6qMV;E+BprMM;IAOI,8BAAA;E/BgrMV;E+BvrMM;IAOI,gCAAA;E/BmrMV;E+B1rMM;IAOI,8BAAA;E/BsrMV;E+B7rMM;IAOI,4BAAA;E/ByrMV;E+BhsMM;IAOI,kCAAA;E/B4rMV;E+BnsMM;IAOI,iCAAA;E/B+rMV;E+BtsMM;IAOI,+BAAA;E/BksMV;E+BzsMM;IAOI,iCAAA;E/BqsMV;E+B5sMM;IAOI,+BAAA;E/BwsMV;E+B/sMM;IAOI,0BAAA;E/B2sMV;E+BltMM;IAOI,gCAAA;E/B8sMV;E+BrtMM;IAOI,+BAAA;E/BitMV;E+BxtMM;IAOI,6BAAA;E/BotMV;E+B3tMM;IAOI,+BAAA;E/ButMV;E+B9tMM;IAOI,6BAAA;E/B0tMV;E+BjuMM;IAOI,iBAAA;E/B6tMV;E+BpuMM;IAOI,uBAAA;E/BguMV;E+BvuMM;IAOI,sBAAA;E/BmuMV;E+B1uMM;IAOI,oBAAA;E/BsuMV;E+B7uMM;IAOI,sBAAA;E/ByuMV;E+BhvMM;IAOI,oBAAA;E/B4uMV;E+BnvMM;IAOI,2BAAA;E/B+uMV;E+BtvMM;IAOI,4BAAA;E/BkvMV;E+BzvMM;IAOI,6BAAA;E/BqvMV;AACF;AMhwMI;EyBGI;IAOI,sBAAA;E/B0vMV;E+BjwMM;IAOI,uBAAA;E/B6vMV;E+BpwMM;IAOI,sBAAA;E/BgwMV;E+BvwMM;IAOI,0BAAA;E/BmwMV;E+B1wMM;IAOI,gCAAA;E/BswMV;E+B7wMM;IAOI,yBAAA;E/BywMV;E+BhxMM;IAOI,wBAAA;E/B4wMV;E+BnxMM;IAOI,yBAAA;E/B+wMV;E+BtxMM;IAOI,6BAAA;E/BkxMV;E+BzxMM;IAOI,8BAAA;E/BqxMV;E+B5xMM;IAOI,wBAAA;E/BwxMV;E+B/xMM;IAOI,+BAAA;E/B2xMV;E+BlyMM;IAOI,wBAAA;E/B8xMV;E+BryMM;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",sourcesContent:[":root {\n  // Note: Custom variable values only support SassScript inside `#{}`.\n\n  // Colors\n  //\n  // Generate palettes for full colors, grays, and theme colors.\n\n  @each $color, $value in $colors {\n    --#{$prefix}#{$color}: #{$value};\n  }\n\n  @each $color, $value in $grays {\n    --#{$prefix}gray-#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors {\n    --#{$prefix}#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-rgb {\n    --#{$prefix}#{$color}-rgb: #{$value};\n  }\n\n  --#{$prefix}white-rgb: #{to-rgb($white)};\n  --#{$prefix}black-rgb: #{to-rgb($black)};\n  --#{$prefix}body-color-rgb: #{to-rgb($body-color)};\n  --#{$prefix}body-bg-rgb: #{to-rgb($body-bg)};\n\n  // Fonts\n\n  // Note: Use `inspect` for lists so that quoted items keep the quotes.\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\n  --#{$prefix}font-sans-serif: #{inspect($font-family-sans-serif)};\n  --#{$prefix}font-monospace: #{inspect($font-family-monospace)};\n  --#{$prefix}gradient: #{$gradient};\n\n  // Root and body\n  // scss-docs-start root-body-variables\n  @if $font-size-root != null {\n    --#{$prefix}root-font-size: #{$font-size-root};\n  }\n  --#{$prefix}body-font-family: #{$font-family-base};\n  @include rfs($font-size-base, --#{$prefix}body-font-size);\n  --#{$prefix}body-font-weight: #{$font-weight-base};\n  --#{$prefix}body-line-height: #{$line-height-base};\n  --#{$prefix}body-color: #{$body-color};\n  @if $body-text-align != null {\n    --#{$prefix}body-text-align: #{$body-text-align};\n  }\n  --#{$prefix}body-bg: #{$body-bg};\n  // scss-docs-end root-body-variables\n\n  // scss-docs-start root-border-var\n  --#{$prefix}border-width: #{$border-width};\n  --#{$prefix}border-style: #{$border-style};\n  --#{$prefix}border-color: #{$border-color};\n  --#{$prefix}border-color-translucent: #{$border-color-translucent};\n\n  --#{$prefix}border-radius: #{$border-radius};\n  --#{$prefix}border-radius-sm: #{$border-radius-sm};\n  --#{$prefix}border-radius-lg: #{$border-radius-lg};\n  --#{$prefix}border-radius-xl: #{$border-radius-xl};\n  --#{$prefix}border-radius-2xl: #{$border-radius-2xl};\n  --#{$prefix}border-radius-pill: #{$border-radius-pill};\n  // scss-docs-end root-border-var\n\n  --#{$prefix}link-color: #{$link-color};\n  --#{$prefix}link-hover-color: #{$link-hover-color};\n\n  --#{$prefix}code-color: #{$code-color};\n\n  --#{$prefix}highlight-bg: #{$mark-bg};\n}\n",'// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error "`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error "`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error "`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.";\n}\n\n// Mode. Possibilities: "min-media-query", "max-media-query"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, "enable" or "disable"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error "Cannot divide by 0";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    "px": 1px,\n    "rem": 1rem,\n    "em": 1em,\n    "%": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == "em" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \'\';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \' 0\';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == "number", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \' \' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \' \' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn\'t a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \' \' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \'\';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \' 0\';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == "number", unit($value), false);\n\n      // If $value isn\'t a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \' \' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \' \' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \' calc(\' + $min-width + if($value < 0, \' - \', \' + \') + $variable-width + \')\';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n',':root {\n  --bs-blue: #0d6efd;\n  --bs-indigo: #6610f2;\n  --bs-purple: #6f42c1;\n  --bs-pink: #d63384;\n  --bs-red: #dc3545;\n  --bs-orange: #fd7e14;\n  --bs-yellow: #ffc107;\n  --bs-green: #198754;\n  --bs-teal: #20c997;\n  --bs-cyan: #0dcaf0;\n  --bs-black: #000;\n  --bs-white: #fff;\n  --bs-gray: #6c757d;\n  --bs-gray-dark: #343a40;\n  --bs-gray-100: #f8f9fa;\n  --bs-gray-200: #e9ecef;\n  --bs-gray-300: #dee2e6;\n  --bs-gray-400: #ced4da;\n  --bs-gray-500: #adb5bd;\n  --bs-gray-600: #6c757d;\n  --bs-gray-700: #495057;\n  --bs-gray-800: #343a40;\n  --bs-gray-900: #212529;\n  --bs-primary: #0d6efd;\n  --bs-secondary: #6c757d;\n  --bs-success: #198754;\n  --bs-info: #0dcaf0;\n  --bs-warning: #ffc107;\n  --bs-danger: #dc3545;\n  --bs-light: #f8f9fa;\n  --bs-dark: #212529;\n  --bs-primary-rgb: 13, 110, 253;\n  --bs-secondary-rgb: 108, 117, 125;\n  --bs-success-rgb: 25, 135, 84;\n  --bs-info-rgb: 13, 202, 240;\n  --bs-warning-rgb: 255, 193, 7;\n  --bs-danger-rgb: 220, 53, 69;\n  --bs-light-rgb: 248, 249, 250;\n  --bs-dark-rgb: 33, 37, 41;\n  --bs-white-rgb: 255, 255, 255;\n  --bs-black-rgb: 0, 0, 0;\n  --bs-body-color-rgb: 33, 37, 41;\n  --bs-body-bg-rgb: 255, 255, 255;\n  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\n  --bs-body-font-family: var(--bs-font-sans-serif);\n  --bs-body-font-size: 1rem;\n  --bs-body-font-weight: 400;\n  --bs-body-line-height: 1.5;\n  --bs-body-color: #212529;\n  --bs-body-bg: #fff;\n  --bs-border-width: 1px;\n  --bs-border-style: solid;\n  --bs-border-color: #dee2e6;\n  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);\n  --bs-border-radius: 0.375rem;\n  --bs-border-radius-sm: 0.25rem;\n  --bs-border-radius-lg: 0.5rem;\n  --bs-border-radius-xl: 1rem;\n  --bs-border-radius-2xl: 2rem;\n  --bs-border-radius-pill: 50rem;\n  --bs-link-color: #0d6efd;\n  --bs-link-hover-color: #0a58ca;\n  --bs-code-color: #d63384;\n  --bs-highlight-bg: #fff3cd;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  :root {\n    scroll-behavior: smooth;\n  }\n}\n\nbody {\n  margin: 0;\n  font-family: var(--bs-body-font-family);\n  font-size: var(--bs-body-font-size);\n  font-weight: var(--bs-body-font-weight);\n  line-height: var(--bs-body-line-height);\n  color: var(--bs-body-color);\n  text-align: var(--bs-body-text-align);\n  background-color: var(--bs-body-bg);\n  -webkit-text-size-adjust: 100%;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nhr {\n  margin: 1rem 0;\n  color: inherit;\n  border: 0;\n  border-top: 1px solid;\n  opacity: 0.25;\n}\n\nh6, h5, h4, h3, h2, h1 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.2;\n}\n\nh1 {\n  font-size: calc(1.375rem + 1.5vw);\n}\n@media (min-width: 1200px) {\n  h1 {\n    font-size: 2.5rem;\n  }\n}\n\nh2 {\n  font-size: calc(1.325rem + 0.9vw);\n}\n@media (min-width: 1200px) {\n  h2 {\n    font-size: 2rem;\n  }\n}\n\nh3 {\n  font-size: calc(1.3rem + 0.6vw);\n}\n@media (min-width: 1200px) {\n  h3 {\n    font-size: 1.75rem;\n  }\n}\n\nh4 {\n  font-size: calc(1.275rem + 0.3vw);\n}\n@media (min-width: 1200px) {\n  h4 {\n    font-size: 1.5rem;\n  }\n}\n\nh5 {\n  font-size: 1.25rem;\n}\n\nh6 {\n  font-size: 1rem;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nabbr[title] {\n  text-decoration: underline dotted;\n  cursor: help;\n  text-decoration-skip-ink: none;\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin-bottom: 0.5rem;\n  margin-left: 0;\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\nsmall {\n  font-size: 0.875em;\n}\n\nmark {\n  padding: 0.1875em;\n  background-color: var(--bs-highlight-bg);\n}\n\nsub,\nsup {\n  position: relative;\n  font-size: 0.75em;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\na {\n  color: var(--bs-link-color);\n  text-decoration: underline;\n}\na:hover {\n  color: var(--bs-link-hover-color);\n}\n\na:not([href]):not([class]), a:not([href]):not([class]):hover {\n  color: inherit;\n  text-decoration: none;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: var(--bs-font-monospace);\n  font-size: 1em;\n}\n\npre {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  font-size: 0.875em;\n}\npre code {\n  font-size: inherit;\n  color: inherit;\n  word-break: normal;\n}\n\ncode {\n  font-size: 0.875em;\n  color: var(--bs-code-color);\n  word-wrap: break-word;\n}\na > code {\n  color: inherit;\n}\n\nkbd {\n  padding: 0.1875rem 0.375rem;\n  font-size: 0.875em;\n  color: var(--bs-body-bg);\n  background-color: var(--bs-body-color);\n  border-radius: 0.25rem;\n}\nkbd kbd {\n  padding: 0;\n  font-size: 1em;\n}\n\nfigure {\n  margin: 0 0 1rem;\n}\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  color: #6c757d;\n  text-align: left;\n}\n\nth {\n  text-align: inherit;\n  text-align: -webkit-match-parent;\n}\n\nthead,\ntbody,\ntfoot,\ntr,\ntd,\nth {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\nlabel {\n  display: inline-block;\n}\n\nbutton {\n  border-radius: 0;\n}\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[role=button] {\n  cursor: pointer;\n}\n\nselect {\n  word-wrap: normal;\n}\nselect:disabled {\n  opacity: 1;\n}\n\n[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\nbutton:not(:disabled),\n[type=button]:not(:disabled),\n[type=reset]:not(:disabled),\n[type=submit]:not(:disabled) {\n  cursor: pointer;\n}\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\nlegend {\n  float: left;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: calc(1.275rem + 0.3vw);\n  line-height: inherit;\n}\n@media (min-width: 1200px) {\n  legend {\n    font-size: 1.5rem;\n  }\n}\nlegend + * {\n  clear: left;\n}\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  outline-offset: -2px;\n  -webkit-appearance: textfield;\n}\n\n/* rtl:raw:\n[type="tel"],\n[type="url"],\n[type="email"],\n[type="number"] {\n  direction: ltr;\n}\n*/\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n::file-selector-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\noutput {\n  display: inline-block;\n}\n\niframe {\n  border: 0;\n}\n\nsummary {\n  display: list-item;\n  cursor: pointer;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n[hidden] {\n  display: none !important;\n}\n\n.container,\n.container-fluid,\n.container-xxl,\n.container-xl,\n.container-lg,\n.container-md,\n.container-sm {\n  --bs-gutter-x: 1.5rem;\n  --bs-gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--bs-gutter-x) * 0.5);\n  padding-left: calc(var(--bs-gutter-x) * 0.5);\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@media (min-width: 576px) {\n  .container-sm, .container {\n    max-width: 540px;\n  }\n}\n@media (min-width: 768px) {\n  .container-md, .container-sm, .container {\n    max-width: 720px;\n  }\n}\n@media (min-width: 992px) {\n  .container-lg, .container-md, .container-sm, .container {\n    max-width: 960px;\n  }\n}\n@media (min-width: 1200px) {\n  .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1140px;\n  }\n}\n@media (min-width: 1400px) {\n  .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1320px;\n  }\n}\n.row {\n  --bs-gutter-x: 1.5rem;\n  --bs-gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * var(--bs-gutter-y));\n  margin-right: calc(-0.5 * var(--bs-gutter-x));\n  margin-left: calc(-0.5 * var(--bs-gutter-x));\n}\n.row > * {\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%;\n  padding-right: calc(var(--bs-gutter-x) * 0.5);\n  padding-left: calc(var(--bs-gutter-x) * 0.5);\n  margin-top: var(--bs-gutter-y);\n}\n\n.col {\n  flex: 1 0 0%;\n}\n\n.row-cols-auto > * {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.row-cols-1 > * {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.row-cols-2 > * {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.row-cols-3 > * {\n  flex: 0 0 auto;\n  width: 33.3333333333%;\n}\n\n.row-cols-4 > * {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.row-cols-5 > * {\n  flex: 0 0 auto;\n  width: 20%;\n}\n\n.row-cols-6 > * {\n  flex: 0 0 auto;\n  width: 16.6666666667%;\n}\n\n.col-auto {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.col-1 {\n  flex: 0 0 auto;\n  width: 8.33333333%;\n}\n\n.col-2 {\n  flex: 0 0 auto;\n  width: 16.66666667%;\n}\n\n.col-3 {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.col-4 {\n  flex: 0 0 auto;\n  width: 33.33333333%;\n}\n\n.col-5 {\n  flex: 0 0 auto;\n  width: 41.66666667%;\n}\n\n.col-6 {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.col-7 {\n  flex: 0 0 auto;\n  width: 58.33333333%;\n}\n\n.col-8 {\n  flex: 0 0 auto;\n  width: 66.66666667%;\n}\n\n.col-9 {\n  flex: 0 0 auto;\n  width: 75%;\n}\n\n.col-10 {\n  flex: 0 0 auto;\n  width: 83.33333333%;\n}\n\n.col-11 {\n  flex: 0 0 auto;\n  width: 91.66666667%;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.offset-1 {\n  margin-left: 8.33333333%;\n}\n\n.offset-2 {\n  margin-left: 16.66666667%;\n}\n\n.offset-3 {\n  margin-left: 25%;\n}\n\n.offset-4 {\n  margin-left: 33.33333333%;\n}\n\n.offset-5 {\n  margin-left: 41.66666667%;\n}\n\n.offset-6 {\n  margin-left: 50%;\n}\n\n.offset-7 {\n  margin-left: 58.33333333%;\n}\n\n.offset-8 {\n  margin-left: 66.66666667%;\n}\n\n.offset-9 {\n  margin-left: 75%;\n}\n\n.offset-10 {\n  margin-left: 83.33333333%;\n}\n\n.offset-11 {\n  margin-left: 91.66666667%;\n}\n\n.g-0,\n.gx-0 {\n  --bs-gutter-x: 0;\n}\n\n.g-0,\n.gy-0 {\n  --bs-gutter-y: 0;\n}\n\n.g-1,\n.gx-1 {\n  --bs-gutter-x: 0.25rem;\n}\n\n.g-1,\n.gy-1 {\n  --bs-gutter-y: 0.25rem;\n}\n\n.g-2,\n.gx-2 {\n  --bs-gutter-x: 0.5rem;\n}\n\n.g-2,\n.gy-2 {\n  --bs-gutter-y: 0.5rem;\n}\n\n.g-3,\n.gx-3 {\n  --bs-gutter-x: 1rem;\n}\n\n.g-3,\n.gy-3 {\n  --bs-gutter-y: 1rem;\n}\n\n.g-4,\n.gx-4 {\n  --bs-gutter-x: 1.5rem;\n}\n\n.g-4,\n.gy-4 {\n  --bs-gutter-y: 1.5rem;\n}\n\n.g-5,\n.gx-5 {\n  --bs-gutter-x: 3rem;\n}\n\n.g-5,\n.gy-5 {\n  --bs-gutter-y: 3rem;\n}\n\n@media (min-width: 576px) {\n  .col-sm {\n    flex: 1 0 0%;\n  }\n  .row-cols-sm-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-sm-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-sm-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-sm-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-sm-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-sm-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-sm-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-sm-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-sm-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-sm-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-sm-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-sm-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-sm-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-sm-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-sm-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-sm-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-sm-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-sm-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-sm-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-sm-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-sm-0 {\n    margin-left: 0;\n  }\n  .offset-sm-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-sm-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-sm-3 {\n    margin-left: 25%;\n  }\n  .offset-sm-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-sm-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-sm-6 {\n    margin-left: 50%;\n  }\n  .offset-sm-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-sm-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-sm-9 {\n    margin-left: 75%;\n  }\n  .offset-sm-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-sm-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-sm-0,\n  .gx-sm-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-sm-0,\n  .gy-sm-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-sm-1,\n  .gx-sm-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-sm-1,\n  .gy-sm-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-sm-2,\n  .gx-sm-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-sm-2,\n  .gy-sm-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-sm-3,\n  .gx-sm-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-sm-3,\n  .gy-sm-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-sm-4,\n  .gx-sm-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-sm-4,\n  .gy-sm-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-sm-5,\n  .gx-sm-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-sm-5,\n  .gy-sm-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 768px) {\n  .col-md {\n    flex: 1 0 0%;\n  }\n  .row-cols-md-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-md-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-md-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-md-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-md-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-md-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-md-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-md-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-md-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-md-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-md-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-md-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-md-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-md-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-md-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-md-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-md-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-md-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-md-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-md-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-md-0 {\n    margin-left: 0;\n  }\n  .offset-md-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-md-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-md-3 {\n    margin-left: 25%;\n  }\n  .offset-md-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-md-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-md-6 {\n    margin-left: 50%;\n  }\n  .offset-md-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-md-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-md-9 {\n    margin-left: 75%;\n  }\n  .offset-md-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-md-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-md-0,\n  .gx-md-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-md-0,\n  .gy-md-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-md-1,\n  .gx-md-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-md-1,\n  .gy-md-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-md-2,\n  .gx-md-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-md-2,\n  .gy-md-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-md-3,\n  .gx-md-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-md-3,\n  .gy-md-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-md-4,\n  .gx-md-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-md-4,\n  .gy-md-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-md-5,\n  .gx-md-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-md-5,\n  .gy-md-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg {\n    flex: 1 0 0%;\n  }\n  .row-cols-lg-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-lg-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-lg-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-lg-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-lg-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-lg-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-lg-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-lg-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-lg-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-lg-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-lg-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-lg-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-lg-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-lg-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-lg-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-lg-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-lg-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-lg-0 {\n    margin-left: 0;\n  }\n  .offset-lg-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-lg-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-lg-3 {\n    margin-left: 25%;\n  }\n  .offset-lg-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-lg-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-lg-6 {\n    margin-left: 50%;\n  }\n  .offset-lg-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-lg-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-lg-9 {\n    margin-left: 75%;\n  }\n  .offset-lg-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-lg-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-lg-0,\n  .gx-lg-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-lg-0,\n  .gy-lg-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-lg-1,\n  .gx-lg-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-lg-1,\n  .gy-lg-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-lg-2,\n  .gx-lg-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-lg-2,\n  .gy-lg-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-lg-3,\n  .gx-lg-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-lg-3,\n  .gy-lg-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-lg-4,\n  .gx-lg-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-lg-4,\n  .gy-lg-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-lg-5,\n  .gx-lg-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-lg-5,\n  .gy-lg-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 1200px) {\n  .col-xl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xl-0 {\n    margin-left: 0;\n  }\n  .offset-xl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xl-3 {\n    margin-left: 25%;\n  }\n  .offset-xl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xl-6 {\n    margin-left: 50%;\n  }\n  .offset-xl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xl-9 {\n    margin-left: 75%;\n  }\n  .offset-xl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xl-0,\n  .gx-xl-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-xl-0,\n  .gy-xl-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-xl-1,\n  .gx-xl-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-xl-1,\n  .gy-xl-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-xl-2,\n  .gx-xl-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-xl-2,\n  .gy-xl-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-xl-3,\n  .gx-xl-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-xl-3,\n  .gy-xl-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-xl-4,\n  .gx-xl-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-xl-4,\n  .gy-xl-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-xl-5,\n  .gx-xl-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-xl-5,\n  .gy-xl-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n@media (min-width: 1400px) {\n  .col-xxl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xxl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xxl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xxl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xxl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xxl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xxl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xxl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xxl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xxl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xxl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xxl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xxl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xxl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xxl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xxl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xxl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xxl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xxl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xxl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xxl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xxl-0 {\n    margin-left: 0;\n  }\n  .offset-xxl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xxl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xxl-3 {\n    margin-left: 25%;\n  }\n  .offset-xxl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xxl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xxl-6 {\n    margin-left: 50%;\n  }\n  .offset-xxl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xxl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xxl-9 {\n    margin-left: 75%;\n  }\n  .offset-xxl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xxl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xxl-0,\n  .gx-xxl-0 {\n    --bs-gutter-x: 0;\n  }\n  .g-xxl-0,\n  .gy-xxl-0 {\n    --bs-gutter-y: 0;\n  }\n  .g-xxl-1,\n  .gx-xxl-1 {\n    --bs-gutter-x: 0.25rem;\n  }\n  .g-xxl-1,\n  .gy-xxl-1 {\n    --bs-gutter-y: 0.25rem;\n  }\n  .g-xxl-2,\n  .gx-xxl-2 {\n    --bs-gutter-x: 0.5rem;\n  }\n  .g-xxl-2,\n  .gy-xxl-2 {\n    --bs-gutter-y: 0.5rem;\n  }\n  .g-xxl-3,\n  .gx-xxl-3 {\n    --bs-gutter-x: 1rem;\n  }\n  .g-xxl-3,\n  .gy-xxl-3 {\n    --bs-gutter-y: 1rem;\n  }\n  .g-xxl-4,\n  .gx-xxl-4 {\n    --bs-gutter-x: 1.5rem;\n  }\n  .g-xxl-4,\n  .gy-xxl-4 {\n    --bs-gutter-y: 1.5rem;\n  }\n  .g-xxl-5,\n  .gx-xxl-5 {\n    --bs-gutter-x: 3rem;\n  }\n  .g-xxl-5,\n  .gy-xxl-5 {\n    --bs-gutter-y: 3rem;\n  }\n}\n.table {\n  --bs-table-color: var(--bs-body-color);\n  --bs-table-bg: transparent;\n  --bs-table-border-color: var(--bs-border-color);\n  --bs-table-accent-bg: transparent;\n  --bs-table-striped-color: var(--bs-body-color);\n  --bs-table-striped-bg: rgba(0, 0, 0, 0.05);\n  --bs-table-active-color: var(--bs-body-color);\n  --bs-table-active-bg: rgba(0, 0, 0, 0.1);\n  --bs-table-hover-color: var(--bs-body-color);\n  --bs-table-hover-bg: rgba(0, 0, 0, 0.075);\n  width: 100%;\n  margin-bottom: 1rem;\n  color: var(--bs-table-color);\n  vertical-align: top;\n  border-color: var(--bs-table-border-color);\n}\n.table > :not(caption) > * > * {\n  padding: 0.5rem 0.5rem;\n  background-color: var(--bs-table-bg);\n  border-bottom-width: 1px;\n  box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);\n}\n.table > tbody {\n  vertical-align: inherit;\n}\n.table > thead {\n  vertical-align: bottom;\n}\n\n.table-group-divider {\n  border-top: 2px solid currentcolor;\n}\n\n.caption-top {\n  caption-side: top;\n}\n\n.table-sm > :not(caption) > * > * {\n  padding: 0.25rem 0.25rem;\n}\n\n.table-bordered > :not(caption) > * {\n  border-width: 1px 0;\n}\n.table-bordered > :not(caption) > * > * {\n  border-width: 0 1px;\n}\n\n.table-borderless > :not(caption) > * > * {\n  border-bottom-width: 0;\n}\n.table-borderless > :not(:first-child) {\n  border-top-width: 0;\n}\n\n.table-striped > tbody > tr:nth-of-type(odd) > * {\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\n  color: var(--bs-table-striped-color);\n}\n\n.table-striped-columns > :not(caption) > tr > :nth-child(even) {\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\n  color: var(--bs-table-striped-color);\n}\n\n.table-active {\n  --bs-table-accent-bg: var(--bs-table-active-bg);\n  color: var(--bs-table-active-color);\n}\n\n.table-hover > tbody > tr:hover > * {\n  --bs-table-accent-bg: var(--bs-table-hover-bg);\n  color: var(--bs-table-hover-color);\n}\n\n.table-primary {\n  --bs-table-color: #000;\n  --bs-table-bg: #cfe2ff;\n  --bs-table-border-color: #bacbe6;\n  --bs-table-striped-bg: #c5d7f2;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #bacbe6;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #bfd1ec;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-secondary {\n  --bs-table-color: #000;\n  --bs-table-bg: #e2e3e5;\n  --bs-table-border-color: #cbccce;\n  --bs-table-striped-bg: #d7d8da;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #cbccce;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #d1d2d4;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-success {\n  --bs-table-color: #000;\n  --bs-table-bg: #d1e7dd;\n  --bs-table-border-color: #bcd0c7;\n  --bs-table-striped-bg: #c7dbd2;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #bcd0c7;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #c1d6cc;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-info {\n  --bs-table-color: #000;\n  --bs-table-bg: #cff4fc;\n  --bs-table-border-color: #badce3;\n  --bs-table-striped-bg: #c5e8ef;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #badce3;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #bfe2e9;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-warning {\n  --bs-table-color: #000;\n  --bs-table-bg: #fff3cd;\n  --bs-table-border-color: #e6dbb9;\n  --bs-table-striped-bg: #f2e7c3;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #e6dbb9;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #ece1be;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-danger {\n  --bs-table-color: #000;\n  --bs-table-bg: #f8d7da;\n  --bs-table-border-color: #dfc2c4;\n  --bs-table-striped-bg: #eccccf;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #dfc2c4;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #e5c7ca;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-light {\n  --bs-table-color: #000;\n  --bs-table-bg: #f8f9fa;\n  --bs-table-border-color: #dfe0e1;\n  --bs-table-striped-bg: #ecedee;\n  --bs-table-striped-color: #000;\n  --bs-table-active-bg: #dfe0e1;\n  --bs-table-active-color: #000;\n  --bs-table-hover-bg: #e5e6e7;\n  --bs-table-hover-color: #000;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-dark {\n  --bs-table-color: #fff;\n  --bs-table-bg: #212529;\n  --bs-table-border-color: #373b3e;\n  --bs-table-striped-bg: #2c3034;\n  --bs-table-striped-color: #fff;\n  --bs-table-active-bg: #373b3e;\n  --bs-table-active-color: #fff;\n  --bs-table-hover-bg: #323539;\n  --bs-table-hover-color: #fff;\n  color: var(--bs-table-color);\n  border-color: var(--bs-table-border-color);\n}\n\n.table-responsive {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 575.98px) {\n  .table-responsive-sm {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 767.98px) {\n  .table-responsive-md {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 991.98px) {\n  .table-responsive-lg {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1199.98px) {\n  .table-responsive-xl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1399.98px) {\n  .table-responsive-xxl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n.btn {\n  --bs-btn-padding-x: 0.75rem;\n  --bs-btn-padding-y: 0.375rem;\n  --bs-btn-font-family: ;\n  --bs-btn-font-size: 1rem;\n  --bs-btn-font-weight: 400;\n  --bs-btn-line-height: 1.5;\n  --bs-btn-color: #212529;\n  --bs-btn-bg: transparent;\n  --bs-btn-border-width: 1px;\n  --bs-btn-border-color: transparent;\n  --bs-btn-border-radius: 0.375rem;\n  --bs-btn-hover-border-color: transparent;\n  --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);\n  --bs-btn-disabled-opacity: 0.65;\n  --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);\n  display: inline-block;\n  padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);\n  font-family: var(--bs-btn-font-family);\n  font-size: var(--bs-btn-font-size);\n  font-weight: var(--bs-btn-font-weight);\n  line-height: var(--bs-btn-line-height);\n  color: var(--bs-btn-color);\n  text-align: center;\n  text-decoration: none;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);\n  border-radius: var(--bs-btn-border-radius);\n  background-color: var(--bs-btn-bg);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .btn {\n    transition: none;\n  }\n}\n.btn:hover {\n  color: var(--bs-btn-hover-color);\n  background-color: var(--bs-btn-hover-bg);\n  border-color: var(--bs-btn-hover-border-color);\n}\n.btn-check + .btn:hover {\n  color: var(--bs-btn-color);\n  background-color: var(--bs-btn-bg);\n  border-color: var(--bs-btn-border-color);\n}\n.btn:focus-visible {\n  color: var(--bs-btn-hover-color);\n  background-color: var(--bs-btn-hover-bg);\n  border-color: var(--bs-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn-check:focus-visible + .btn {\n  border-color: var(--bs-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn-check:checked + .btn, :not(.btn-check) + .btn:active, .btn:first-child:active, .btn.active, .btn.show {\n  color: var(--bs-btn-active-color);\n  background-color: var(--bs-btn-active-bg);\n  border-color: var(--bs-btn-active-border-color);\n}\n.btn-check:checked + .btn:focus-visible, :not(.btn-check) + .btn:active:focus-visible, .btn:first-child:active:focus-visible, .btn.active:focus-visible, .btn.show:focus-visible {\n  box-shadow: var(--bs-btn-focus-box-shadow);\n}\n.btn:disabled, .btn.disabled, fieldset:disabled .btn {\n  color: var(--bs-btn-disabled-color);\n  pointer-events: none;\n  background-color: var(--bs-btn-disabled-bg);\n  border-color: var(--bs-btn-disabled-border-color);\n  opacity: var(--bs-btn-disabled-opacity);\n}\n\n.btn-primary {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #0d6efd;\n  --bs-btn-border-color: #0d6efd;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #0b5ed7;\n  --bs-btn-hover-border-color: #0a58ca;\n  --bs-btn-focus-shadow-rgb: 49, 132, 253;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #0a58ca;\n  --bs-btn-active-border-color: #0a53be;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #0d6efd;\n  --bs-btn-disabled-border-color: #0d6efd;\n}\n\n.btn-secondary {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #6c757d;\n  --bs-btn-border-color: #6c757d;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #5c636a;\n  --bs-btn-hover-border-color: #565e64;\n  --bs-btn-focus-shadow-rgb: 130, 138, 145;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #565e64;\n  --bs-btn-active-border-color: #51585e;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #6c757d;\n  --bs-btn-disabled-border-color: #6c757d;\n}\n\n.btn-success {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #198754;\n  --bs-btn-border-color: #198754;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #157347;\n  --bs-btn-hover-border-color: #146c43;\n  --bs-btn-focus-shadow-rgb: 60, 153, 110;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #146c43;\n  --bs-btn-active-border-color: #13653f;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #198754;\n  --bs-btn-disabled-border-color: #198754;\n}\n\n.btn-info {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #0dcaf0;\n  --bs-btn-border-color: #0dcaf0;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #31d2f2;\n  --bs-btn-hover-border-color: #25cff2;\n  --bs-btn-focus-shadow-rgb: 11, 172, 204;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #3dd5f3;\n  --bs-btn-active-border-color: #25cff2;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #0dcaf0;\n  --bs-btn-disabled-border-color: #0dcaf0;\n}\n\n.btn-warning {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #ffc107;\n  --bs-btn-border-color: #ffc107;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #ffca2c;\n  --bs-btn-hover-border-color: #ffc720;\n  --bs-btn-focus-shadow-rgb: 217, 164, 6;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #ffcd39;\n  --bs-btn-active-border-color: #ffc720;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #ffc107;\n  --bs-btn-disabled-border-color: #ffc107;\n}\n\n.btn-danger {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #dc3545;\n  --bs-btn-border-color: #dc3545;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #bb2d3b;\n  --bs-btn-hover-border-color: #b02a37;\n  --bs-btn-focus-shadow-rgb: 225, 83, 97;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #b02a37;\n  --bs-btn-active-border-color: #a52834;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #dc3545;\n  --bs-btn-disabled-border-color: #dc3545;\n}\n\n.btn-light {\n  --bs-btn-color: #000;\n  --bs-btn-bg: #f8f9fa;\n  --bs-btn-border-color: #f8f9fa;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #d3d4d5;\n  --bs-btn-hover-border-color: #c6c7c8;\n  --bs-btn-focus-shadow-rgb: 211, 212, 213;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #c6c7c8;\n  --bs-btn-active-border-color: #babbbc;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #000;\n  --bs-btn-disabled-bg: #f8f9fa;\n  --bs-btn-disabled-border-color: #f8f9fa;\n}\n\n.btn-dark {\n  --bs-btn-color: #fff;\n  --bs-btn-bg: #212529;\n  --bs-btn-border-color: #212529;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #424649;\n  --bs-btn-hover-border-color: #373b3e;\n  --bs-btn-focus-shadow-rgb: 66, 70, 73;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #4d5154;\n  --bs-btn-active-border-color: #373b3e;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #fff;\n  --bs-btn-disabled-bg: #212529;\n  --bs-btn-disabled-border-color: #212529;\n}\n\n.btn-outline-primary {\n  --bs-btn-color: #0d6efd;\n  --bs-btn-border-color: #0d6efd;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #0d6efd;\n  --bs-btn-hover-border-color: #0d6efd;\n  --bs-btn-focus-shadow-rgb: 13, 110, 253;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #0d6efd;\n  --bs-btn-active-border-color: #0d6efd;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #0d6efd;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #0d6efd;\n  --bs-gradient: none;\n}\n\n.btn-outline-secondary {\n  --bs-btn-color: #6c757d;\n  --bs-btn-border-color: #6c757d;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #6c757d;\n  --bs-btn-hover-border-color: #6c757d;\n  --bs-btn-focus-shadow-rgb: 108, 117, 125;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #6c757d;\n  --bs-btn-active-border-color: #6c757d;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #6c757d;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #6c757d;\n  --bs-gradient: none;\n}\n\n.btn-outline-success {\n  --bs-btn-color: #198754;\n  --bs-btn-border-color: #198754;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #198754;\n  --bs-btn-hover-border-color: #198754;\n  --bs-btn-focus-shadow-rgb: 25, 135, 84;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #198754;\n  --bs-btn-active-border-color: #198754;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #198754;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #198754;\n  --bs-gradient: none;\n}\n\n.btn-outline-info {\n  --bs-btn-color: #0dcaf0;\n  --bs-btn-border-color: #0dcaf0;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #0dcaf0;\n  --bs-btn-hover-border-color: #0dcaf0;\n  --bs-btn-focus-shadow-rgb: 13, 202, 240;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #0dcaf0;\n  --bs-btn-active-border-color: #0dcaf0;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #0dcaf0;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #0dcaf0;\n  --bs-gradient: none;\n}\n\n.btn-outline-warning {\n  --bs-btn-color: #ffc107;\n  --bs-btn-border-color: #ffc107;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #ffc107;\n  --bs-btn-hover-border-color: #ffc107;\n  --bs-btn-focus-shadow-rgb: 255, 193, 7;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #ffc107;\n  --bs-btn-active-border-color: #ffc107;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #ffc107;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #ffc107;\n  --bs-gradient: none;\n}\n\n.btn-outline-danger {\n  --bs-btn-color: #dc3545;\n  --bs-btn-border-color: #dc3545;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #dc3545;\n  --bs-btn-hover-border-color: #dc3545;\n  --bs-btn-focus-shadow-rgb: 220, 53, 69;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #dc3545;\n  --bs-btn-active-border-color: #dc3545;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #dc3545;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #dc3545;\n  --bs-gradient: none;\n}\n\n.btn-outline-light {\n  --bs-btn-color: #f8f9fa;\n  --bs-btn-border-color: #f8f9fa;\n  --bs-btn-hover-color: #000;\n  --bs-btn-hover-bg: #f8f9fa;\n  --bs-btn-hover-border-color: #f8f9fa;\n  --bs-btn-focus-shadow-rgb: 248, 249, 250;\n  --bs-btn-active-color: #000;\n  --bs-btn-active-bg: #f8f9fa;\n  --bs-btn-active-border-color: #f8f9fa;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #f8f9fa;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #f8f9fa;\n  --bs-gradient: none;\n}\n\n.btn-outline-dark {\n  --bs-btn-color: #212529;\n  --bs-btn-border-color: #212529;\n  --bs-btn-hover-color: #fff;\n  --bs-btn-hover-bg: #212529;\n  --bs-btn-hover-border-color: #212529;\n  --bs-btn-focus-shadow-rgb: 33, 37, 41;\n  --bs-btn-active-color: #fff;\n  --bs-btn-active-bg: #212529;\n  --bs-btn-active-border-color: #212529;\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --bs-btn-disabled-color: #212529;\n  --bs-btn-disabled-bg: transparent;\n  --bs-btn-disabled-border-color: #212529;\n  --bs-gradient: none;\n}\n\n.btn-link {\n  --bs-btn-font-weight: 400;\n  --bs-btn-color: var(--bs-link-color);\n  --bs-btn-bg: transparent;\n  --bs-btn-border-color: transparent;\n  --bs-btn-hover-color: var(--bs-link-hover-color);\n  --bs-btn-hover-border-color: transparent;\n  --bs-btn-active-color: var(--bs-link-hover-color);\n  --bs-btn-active-border-color: transparent;\n  --bs-btn-disabled-color: #6c757d;\n  --bs-btn-disabled-border-color: transparent;\n  --bs-btn-box-shadow: none;\n  --bs-btn-focus-shadow-rgb: 49, 132, 253;\n  text-decoration: underline;\n}\n.btn-link:focus-visible {\n  color: var(--bs-btn-color);\n}\n.btn-link:hover {\n  color: var(--bs-btn-hover-color);\n}\n\n.btn-lg {\n  --bs-btn-padding-y: 0.5rem;\n  --bs-btn-padding-x: 1rem;\n  --bs-btn-font-size: 1.25rem;\n  --bs-btn-border-radius: 0.5rem;\n}\n\n.btn-sm {\n  --bs-btn-padding-y: 0.25rem;\n  --bs-btn-padding-x: 0.5rem;\n  --bs-btn-font-size: 0.875rem;\n  --bs-btn-border-radius: 0.25rem;\n}\n\n.btn-close {\n  box-sizing: content-box;\n  width: 1em;\n  height: 1em;\n  padding: 0.25em 0.25em;\n  color: #000;\n  background: transparent url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23000\'%3e%3cpath d=\'M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z\'/%3e%3c/svg%3e") center/1em auto no-repeat;\n  border: 0;\n  border-radius: 0.375rem;\n  opacity: 0.5;\n}\n.btn-close:hover {\n  color: #000;\n  text-decoration: none;\n  opacity: 0.75;\n}\n.btn-close:focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n  opacity: 1;\n}\n.btn-close:disabled, .btn-close.disabled {\n  pointer-events: none;\n  user-select: none;\n  opacity: 0.25;\n}\n\n.btn-close-white {\n  filter: invert(1) grayscale(100%) brightness(200%);\n}\n\n.spinner-grow,\n.spinner-border {\n  display: inline-block;\n  width: var(--bs-spinner-width);\n  height: var(--bs-spinner-height);\n  vertical-align: var(--bs-spinner-vertical-align);\n  border-radius: 50%;\n  animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);\n}\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg) /* rtl:ignore */;\n  }\n}\n.spinner-border {\n  --bs-spinner-width: 2rem;\n  --bs-spinner-height: 2rem;\n  --bs-spinner-vertical-align: -0.125em;\n  --bs-spinner-border-width: 0.25em;\n  --bs-spinner-animation-speed: 0.75s;\n  --bs-spinner-animation-name: spinner-border;\n  border: var(--bs-spinner-border-width) solid currentcolor;\n  border-right-color: transparent;\n}\n\n.spinner-border-sm {\n  --bs-spinner-width: 1rem;\n  --bs-spinner-height: 1rem;\n  --bs-spinner-border-width: 0.2em;\n}\n\n@keyframes spinner-grow {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    opacity: 1;\n    transform: none;\n  }\n}\n.spinner-grow {\n  --bs-spinner-width: 2rem;\n  --bs-spinner-height: 2rem;\n  --bs-spinner-vertical-align: -0.125em;\n  --bs-spinner-animation-speed: 0.75s;\n  --bs-spinner-animation-name: spinner-grow;\n  background-color: currentcolor;\n  opacity: 0;\n}\n\n.spinner-grow-sm {\n  --bs-spinner-width: 1rem;\n  --bs-spinner-height: 1rem;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .spinner-border,\n  .spinner-grow {\n    --bs-spinner-animation-speed: 1.5s;\n  }\n}\n.offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {\n  --bs-offcanvas-zindex: 1045;\n  --bs-offcanvas-width: 400px;\n  --bs-offcanvas-height: 30vh;\n  --bs-offcanvas-padding-x: 1rem;\n  --bs-offcanvas-padding-y: 1rem;\n  --bs-offcanvas-color: ;\n  --bs-offcanvas-bg: #fff;\n  --bs-offcanvas-border-width: 1px;\n  --bs-offcanvas-border-color: var(--bs-border-color-translucent);\n  --bs-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n@media (max-width: 575.98px) {\n  .offcanvas-sm {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-sm {\n    transition: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 576px) {\n  .offcanvas-sm {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-sm .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-sm .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 767.98px) {\n  .offcanvas-md {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-md {\n    transition: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 768px) {\n  .offcanvas-md {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-md .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-md .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 991.98px) {\n  .offcanvas-lg {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-lg {\n    transition: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 992px) {\n  .offcanvas-lg {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-lg .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-lg .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1199.98px) {\n  .offcanvas-xl {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xl {\n    transition: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1200px) {\n  .offcanvas-xl {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl {\n    position: fixed;\n    bottom: 0;\n    z-index: var(--bs-offcanvas-zindex);\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--bs-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--bs-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xxl {\n    transition: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--bs-offcanvas-width);\n    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--bs-offcanvas-width);\n    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--bs-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1400px) {\n  .offcanvas-xxl {\n    --bs-offcanvas-height: auto;\n    --bs-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xxl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xxl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n.offcanvas {\n  position: fixed;\n  bottom: 0;\n  z-index: var(--bs-offcanvas-zindex);\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  color: var(--bs-offcanvas-color);\n  visibility: hidden;\n  background-color: var(--bs-offcanvas-bg);\n  background-clip: padding-box;\n  outline: 0;\n  transition: transform 0.3s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .offcanvas {\n    transition: none;\n  }\n}\n.offcanvas.offcanvas-start {\n  top: 0;\n  left: 0;\n  width: var(--bs-offcanvas-width);\n  border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateX(-100%);\n}\n.offcanvas.offcanvas-end {\n  top: 0;\n  right: 0;\n  width: var(--bs-offcanvas-width);\n  border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateX(100%);\n}\n.offcanvas.offcanvas-top {\n  top: 0;\n  right: 0;\n  left: 0;\n  height: var(--bs-offcanvas-height);\n  max-height: 100%;\n  border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateY(-100%);\n}\n.offcanvas.offcanvas-bottom {\n  right: 0;\n  left: 0;\n  height: var(--bs-offcanvas-height);\n  max-height: 100%;\n  border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);\n  transform: translateY(100%);\n}\n.offcanvas.showing, .offcanvas.show:not(.hiding) {\n  transform: none;\n}\n.offcanvas.showing, .offcanvas.hiding, .offcanvas.show {\n  visibility: visible;\n}\n\n.offcanvas-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1040;\n  width: 100vw;\n  height: 100vh;\n  background-color: #000;\n}\n.offcanvas-backdrop.fade {\n  opacity: 0;\n}\n.offcanvas-backdrop.show {\n  opacity: 0.5;\n}\n\n.offcanvas-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);\n}\n.offcanvas-header .btn-close {\n  padding: calc(var(--bs-offcanvas-padding-y) * 0.5) calc(var(--bs-offcanvas-padding-x) * 0.5);\n  margin-top: calc(-0.5 * var(--bs-offcanvas-padding-y));\n  margin-right: calc(-0.5 * var(--bs-offcanvas-padding-x));\n  margin-bottom: calc(-0.5 * var(--bs-offcanvas-padding-y));\n}\n\n.offcanvas-title {\n  margin-bottom: 0;\n  line-height: 1.5;\n}\n\n.offcanvas-body {\n  flex-grow: 1;\n  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);\n  overflow-y: auto;\n}\n\n.clearfix::after {\n  display: block;\n  clear: both;\n  content: "";\n}\n\n.text-bg-primary {\n  color: #fff !important;\n  background-color: RGBA(13, 110, 253, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-secondary {\n  color: #fff !important;\n  background-color: RGBA(108, 117, 125, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-success {\n  color: #fff !important;\n  background-color: RGBA(25, 135, 84, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-info {\n  color: #000 !important;\n  background-color: RGBA(13, 202, 240, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-warning {\n  color: #000 !important;\n  background-color: RGBA(255, 193, 7, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-danger {\n  color: #fff !important;\n  background-color: RGBA(220, 53, 69, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-light {\n  color: #000 !important;\n  background-color: RGBA(248, 249, 250, var(--bs-bg-opacity, 1)) !important;\n}\n\n.text-bg-dark {\n  color: #fff !important;\n  background-color: RGBA(33, 37, 41, var(--bs-bg-opacity, 1)) !important;\n}\n\n.link-primary {\n  color: #0d6efd !important;\n}\n.link-primary:hover, .link-primary:focus {\n  color: #0a58ca !important;\n}\n\n.link-secondary {\n  color: #6c757d !important;\n}\n.link-secondary:hover, .link-secondary:focus {\n  color: #565e64 !important;\n}\n\n.link-success {\n  color: #198754 !important;\n}\n.link-success:hover, .link-success:focus {\n  color: #146c43 !important;\n}\n\n.link-info {\n  color: #0dcaf0 !important;\n}\n.link-info:hover, .link-info:focus {\n  color: #3dd5f3 !important;\n}\n\n.link-warning {\n  color: #ffc107 !important;\n}\n.link-warning:hover, .link-warning:focus {\n  color: #ffcd39 !important;\n}\n\n.link-danger {\n  color: #dc3545 !important;\n}\n.link-danger:hover, .link-danger:focus {\n  color: #b02a37 !important;\n}\n\n.link-light {\n  color: #f8f9fa !important;\n}\n.link-light:hover, .link-light:focus {\n  color: #f9fafb !important;\n}\n\n.link-dark {\n  color: #212529 !important;\n}\n.link-dark:hover, .link-dark:focus {\n  color: #1a1e21 !important;\n}\n\n.ratio {\n  position: relative;\n  width: 100%;\n}\n.ratio::before {\n  display: block;\n  padding-top: var(--bs-aspect-ratio);\n  content: "";\n}\n.ratio > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ratio-1x1 {\n  --bs-aspect-ratio: 100%;\n}\n\n.ratio-4x3 {\n  --bs-aspect-ratio: 75%;\n}\n\n.ratio-16x9 {\n  --bs-aspect-ratio: 56.25%;\n}\n\n.ratio-21x9 {\n  --bs-aspect-ratio: 42.8571428571%;\n}\n\n.fixed-top {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.fixed-bottom {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.sticky-top {\n  position: sticky;\n  top: 0;\n  z-index: 1020;\n}\n\n.sticky-bottom {\n  position: sticky;\n  bottom: 0;\n  z-index: 1020;\n}\n\n@media (min-width: 576px) {\n  .sticky-sm-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-sm-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 768px) {\n  .sticky-md-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-md-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 992px) {\n  .sticky-lg-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-lg-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1200px) {\n  .sticky-xl-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xl-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1400px) {\n  .sticky-xxl-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xxl-bottom {\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n.hstack {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: stretch;\n}\n\n.vstack {\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  align-self: stretch;\n}\n\n.visually-hidden,\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  clip: rect(0, 0, 0, 0) !important;\n  white-space: nowrap !important;\n  border: 0 !important;\n}\n\n.stretched-link::after {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  content: "";\n}\n\n.text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.vr {\n  display: inline-block;\n  align-self: stretch;\n  width: 1px;\n  min-height: 1em;\n  background-color: currentcolor;\n  opacity: 0.25;\n}\n\n.align-baseline {\n  vertical-align: baseline !important;\n}\n\n.align-top {\n  vertical-align: top !important;\n}\n\n.align-middle {\n  vertical-align: middle !important;\n}\n\n.align-bottom {\n  vertical-align: bottom !important;\n}\n\n.align-text-bottom {\n  vertical-align: text-bottom !important;\n}\n\n.align-text-top {\n  vertical-align: text-top !important;\n}\n\n.float-start {\n  float: left !important;\n}\n\n.float-end {\n  float: right !important;\n}\n\n.float-none {\n  float: none !important;\n}\n\n.opacity-0 {\n  opacity: 0 !important;\n}\n\n.opacity-25 {\n  opacity: 0.25 !important;\n}\n\n.opacity-50 {\n  opacity: 0.5 !important;\n}\n\n.opacity-75 {\n  opacity: 0.75 !important;\n}\n\n.opacity-100 {\n  opacity: 1 !important;\n}\n\n.overflow-auto {\n  overflow: auto !important;\n}\n\n.overflow-hidden {\n  overflow: hidden !important;\n}\n\n.overflow-visible {\n  overflow: visible !important;\n}\n\n.overflow-scroll {\n  overflow: scroll !important;\n}\n\n.d-inline {\n  display: inline !important;\n}\n\n.d-inline-block {\n  display: inline-block !important;\n}\n\n.d-block {\n  display: block !important;\n}\n\n.d-grid {\n  display: grid !important;\n}\n\n.d-table {\n  display: table !important;\n}\n\n.d-table-row {\n  display: table-row !important;\n}\n\n.d-table-cell {\n  display: table-cell !important;\n}\n\n.d-flex {\n  display: flex !important;\n}\n\n.d-inline-flex {\n  display: inline-flex !important;\n}\n\n.d-none {\n  display: none !important;\n}\n\n.shadow {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.shadow-sm {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n\n.shadow-lg {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n}\n\n.shadow-none {\n  box-shadow: none !important;\n}\n\n.position-static {\n  position: static !important;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.position-absolute {\n  position: absolute !important;\n}\n\n.position-fixed {\n  position: fixed !important;\n}\n\n.position-sticky {\n  position: sticky !important;\n}\n\n.top-0 {\n  top: 0 !important;\n}\n\n.top-50 {\n  top: 50% !important;\n}\n\n.top-100 {\n  top: 100% !important;\n}\n\n.bottom-0 {\n  bottom: 0 !important;\n}\n\n.bottom-50 {\n  bottom: 50% !important;\n}\n\n.bottom-100 {\n  bottom: 100% !important;\n}\n\n.start-0 {\n  left: 0 !important;\n}\n\n.start-50 {\n  left: 50% !important;\n}\n\n.start-100 {\n  left: 100% !important;\n}\n\n.end-0 {\n  right: 0 !important;\n}\n\n.end-50 {\n  right: 50% !important;\n}\n\n.end-100 {\n  right: 100% !important;\n}\n\n.translate-middle {\n  transform: translate(-50%, -50%) !important;\n}\n\n.translate-middle-x {\n  transform: translateX(-50%) !important;\n}\n\n.translate-middle-y {\n  transform: translateY(-50%) !important;\n}\n\n.border {\n  border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-0 {\n  border: 0 !important;\n}\n\n.border-top {\n  border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-top-0 {\n  border-top: 0 !important;\n}\n\n.border-end {\n  border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-end-0 {\n  border-right: 0 !important;\n}\n\n.border-bottom {\n  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-bottom-0 {\n  border-bottom: 0 !important;\n}\n\n.border-start {\n  border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;\n}\n\n.border-start-0 {\n  border-left: 0 !important;\n}\n\n.border-primary {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-primary-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-secondary {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-success {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-info {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-info-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-warning {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-warning-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-danger {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-danger-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-light {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-light-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-dark {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-dark-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-white {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-white-rgb), var(--bs-border-opacity)) !important;\n}\n\n.border-1 {\n  --bs-border-width: 1px;\n}\n\n.border-2 {\n  --bs-border-width: 2px;\n}\n\n.border-3 {\n  --bs-border-width: 3px;\n}\n\n.border-4 {\n  --bs-border-width: 4px;\n}\n\n.border-5 {\n  --bs-border-width: 5px;\n}\n\n.border-opacity-10 {\n  --bs-border-opacity: 0.1;\n}\n\n.border-opacity-25 {\n  --bs-border-opacity: 0.25;\n}\n\n.border-opacity-50 {\n  --bs-border-opacity: 0.5;\n}\n\n.border-opacity-75 {\n  --bs-border-opacity: 0.75;\n}\n\n.border-opacity-100 {\n  --bs-border-opacity: 1;\n}\n\n.w-25 {\n  width: 25% !important;\n}\n\n.w-50 {\n  width: 50% !important;\n}\n\n.w-75 {\n  width: 75% !important;\n}\n\n.w-100 {\n  width: 100% !important;\n}\n\n.w-auto {\n  width: auto !important;\n}\n\n.mw-100 {\n  max-width: 100% !important;\n}\n\n.vw-100 {\n  width: 100vw !important;\n}\n\n.min-vw-100 {\n  min-width: 100vw !important;\n}\n\n.h-25 {\n  height: 25% !important;\n}\n\n.h-50 {\n  height: 50% !important;\n}\n\n.h-75 {\n  height: 75% !important;\n}\n\n.h-100 {\n  height: 100% !important;\n}\n\n.h-auto {\n  height: auto !important;\n}\n\n.mh-100 {\n  max-height: 100% !important;\n}\n\n.vh-100 {\n  height: 100vh !important;\n}\n\n.min-vh-100 {\n  min-height: 100vh !important;\n}\n\n.flex-fill {\n  flex: 1 1 auto !important;\n}\n\n.flex-row {\n  flex-direction: row !important;\n}\n\n.flex-column {\n  flex-direction: column !important;\n}\n\n.flex-row-reverse {\n  flex-direction: row-reverse !important;\n}\n\n.flex-column-reverse {\n  flex-direction: column-reverse !important;\n}\n\n.flex-grow-0 {\n  flex-grow: 0 !important;\n}\n\n.flex-grow-1 {\n  flex-grow: 1 !important;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0 !important;\n}\n\n.flex-shrink-1 {\n  flex-shrink: 1 !important;\n}\n\n.flex-wrap {\n  flex-wrap: wrap !important;\n}\n\n.flex-nowrap {\n  flex-wrap: nowrap !important;\n}\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse !important;\n}\n\n.justify-content-start {\n  justify-content: flex-start !important;\n}\n\n.justify-content-end {\n  justify-content: flex-end !important;\n}\n\n.justify-content-center {\n  justify-content: center !important;\n}\n\n.justify-content-between {\n  justify-content: space-between !important;\n}\n\n.justify-content-around {\n  justify-content: space-around !important;\n}\n\n.justify-content-evenly {\n  justify-content: space-evenly !important;\n}\n\n.align-items-start {\n  align-items: flex-start !important;\n}\n\n.align-items-end {\n  align-items: flex-end !important;\n}\n\n.align-items-center {\n  align-items: center !important;\n}\n\n.align-items-baseline {\n  align-items: baseline !important;\n}\n\n.align-items-stretch {\n  align-items: stretch !important;\n}\n\n.align-content-start {\n  align-content: flex-start !important;\n}\n\n.align-content-end {\n  align-content: flex-end !important;\n}\n\n.align-content-center {\n  align-content: center !important;\n}\n\n.align-content-between {\n  align-content: space-between !important;\n}\n\n.align-content-around {\n  align-content: space-around !important;\n}\n\n.align-content-stretch {\n  align-content: stretch !important;\n}\n\n.align-self-auto {\n  align-self: auto !important;\n}\n\n.align-self-start {\n  align-self: flex-start !important;\n}\n\n.align-self-end {\n  align-self: flex-end !important;\n}\n\n.align-self-center {\n  align-self: center !important;\n}\n\n.align-self-baseline {\n  align-self: baseline !important;\n}\n\n.align-self-stretch {\n  align-self: stretch !important;\n}\n\n.order-first {\n  order: -1 !important;\n}\n\n.order-0 {\n  order: 0 !important;\n}\n\n.order-1 {\n  order: 1 !important;\n}\n\n.order-2 {\n  order: 2 !important;\n}\n\n.order-3 {\n  order: 3 !important;\n}\n\n.order-4 {\n  order: 4 !important;\n}\n\n.order-5 {\n  order: 5 !important;\n}\n\n.order-last {\n  order: 6 !important;\n}\n\n.m-0 {\n  margin: 0 !important;\n}\n\n.m-1 {\n  margin: 0.25rem !important;\n}\n\n.m-2 {\n  margin: 0.5rem !important;\n}\n\n.m-3 {\n  margin: 1rem !important;\n}\n\n.m-4 {\n  margin: 1.5rem !important;\n}\n\n.m-5 {\n  margin: 3rem !important;\n}\n\n.m-auto {\n  margin: auto !important;\n}\n\n.mx-0 {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n}\n\n.mx-1 {\n  margin-right: 0.25rem !important;\n  margin-left: 0.25rem !important;\n}\n\n.mx-2 {\n  margin-right: 0.5rem !important;\n  margin-left: 0.5rem !important;\n}\n\n.mx-3 {\n  margin-right: 1rem !important;\n  margin-left: 1rem !important;\n}\n\n.mx-4 {\n  margin-right: 1.5rem !important;\n  margin-left: 1.5rem !important;\n}\n\n.mx-5 {\n  margin-right: 3rem !important;\n  margin-left: 3rem !important;\n}\n\n.mx-auto {\n  margin-right: auto !important;\n  margin-left: auto !important;\n}\n\n.my-0 {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n.my-1 {\n  margin-top: 0.25rem !important;\n  margin-bottom: 0.25rem !important;\n}\n\n.my-2 {\n  margin-top: 0.5rem !important;\n  margin-bottom: 0.5rem !important;\n}\n\n.my-3 {\n  margin-top: 1rem !important;\n  margin-bottom: 1rem !important;\n}\n\n.my-4 {\n  margin-top: 1.5rem !important;\n  margin-bottom: 1.5rem !important;\n}\n\n.my-5 {\n  margin-top: 3rem !important;\n  margin-bottom: 3rem !important;\n}\n\n.my-auto {\n  margin-top: auto !important;\n  margin-bottom: auto !important;\n}\n\n.mt-0 {\n  margin-top: 0 !important;\n}\n\n.mt-1 {\n  margin-top: 0.25rem !important;\n}\n\n.mt-2 {\n  margin-top: 0.5rem !important;\n}\n\n.mt-3 {\n  margin-top: 1rem !important;\n}\n\n.mt-4 {\n  margin-top: 1.5rem !important;\n}\n\n.mt-5 {\n  margin-top: 3rem !important;\n}\n\n.mt-auto {\n  margin-top: auto !important;\n}\n\n.me-0 {\n  margin-right: 0 !important;\n}\n\n.me-1 {\n  margin-right: 0.25rem !important;\n}\n\n.me-2 {\n  margin-right: 0.5rem !important;\n}\n\n.me-3 {\n  margin-right: 1rem !important;\n}\n\n.me-4 {\n  margin-right: 1.5rem !important;\n}\n\n.me-5 {\n  margin-right: 3rem !important;\n}\n\n.me-auto {\n  margin-right: auto !important;\n}\n\n.mb-0 {\n  margin-bottom: 0 !important;\n}\n\n.mb-1 {\n  margin-bottom: 0.25rem !important;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem !important;\n}\n\n.mb-3 {\n  margin-bottom: 1rem !important;\n}\n\n.mb-4 {\n  margin-bottom: 1.5rem !important;\n}\n\n.mb-5 {\n  margin-bottom: 3rem !important;\n}\n\n.mb-auto {\n  margin-bottom: auto !important;\n}\n\n.ms-0 {\n  margin-left: 0 !important;\n}\n\n.ms-1 {\n  margin-left: 0.25rem !important;\n}\n\n.ms-2 {\n  margin-left: 0.5rem !important;\n}\n\n.ms-3 {\n  margin-left: 1rem !important;\n}\n\n.ms-4 {\n  margin-left: 1.5rem !important;\n}\n\n.ms-5 {\n  margin-left: 3rem !important;\n}\n\n.ms-auto {\n  margin-left: auto !important;\n}\n\n.p-0 {\n  padding: 0 !important;\n}\n\n.p-1 {\n  padding: 0.25rem !important;\n}\n\n.p-2 {\n  padding: 0.5rem !important;\n}\n\n.p-3 {\n  padding: 1rem !important;\n}\n\n.p-4 {\n  padding: 1.5rem !important;\n}\n\n.p-5 {\n  padding: 3rem !important;\n}\n\n.px-0 {\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n}\n\n.px-1 {\n  padding-right: 0.25rem !important;\n  padding-left: 0.25rem !important;\n}\n\n.px-2 {\n  padding-right: 0.5rem !important;\n  padding-left: 0.5rem !important;\n}\n\n.px-3 {\n  padding-right: 1rem !important;\n  padding-left: 1rem !important;\n}\n\n.px-4 {\n  padding-right: 1.5rem !important;\n  padding-left: 1.5rem !important;\n}\n\n.px-5 {\n  padding-right: 3rem !important;\n  padding-left: 3rem !important;\n}\n\n.py-0 {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important;\n}\n\n.py-1 {\n  padding-top: 0.25rem !important;\n  padding-bottom: 0.25rem !important;\n}\n\n.py-2 {\n  padding-top: 0.5rem !important;\n  padding-bottom: 0.5rem !important;\n}\n\n.py-3 {\n  padding-top: 1rem !important;\n  padding-bottom: 1rem !important;\n}\n\n.py-4 {\n  padding-top: 1.5rem !important;\n  padding-bottom: 1.5rem !important;\n}\n\n.py-5 {\n  padding-top: 3rem !important;\n  padding-bottom: 3rem !important;\n}\n\n.pt-0 {\n  padding-top: 0 !important;\n}\n\n.pt-1 {\n  padding-top: 0.25rem !important;\n}\n\n.pt-2 {\n  padding-top: 0.5rem !important;\n}\n\n.pt-3 {\n  padding-top: 1rem !important;\n}\n\n.pt-4 {\n  padding-top: 1.5rem !important;\n}\n\n.pt-5 {\n  padding-top: 3rem !important;\n}\n\n.pe-0 {\n  padding-right: 0 !important;\n}\n\n.pe-1 {\n  padding-right: 0.25rem !important;\n}\n\n.pe-2 {\n  padding-right: 0.5rem !important;\n}\n\n.pe-3 {\n  padding-right: 1rem !important;\n}\n\n.pe-4 {\n  padding-right: 1.5rem !important;\n}\n\n.pe-5 {\n  padding-right: 3rem !important;\n}\n\n.pb-0 {\n  padding-bottom: 0 !important;\n}\n\n.pb-1 {\n  padding-bottom: 0.25rem !important;\n}\n\n.pb-2 {\n  padding-bottom: 0.5rem !important;\n}\n\n.pb-3 {\n  padding-bottom: 1rem !important;\n}\n\n.pb-4 {\n  padding-bottom: 1.5rem !important;\n}\n\n.pb-5 {\n  padding-bottom: 3rem !important;\n}\n\n.ps-0 {\n  padding-left: 0 !important;\n}\n\n.ps-1 {\n  padding-left: 0.25rem !important;\n}\n\n.ps-2 {\n  padding-left: 0.5rem !important;\n}\n\n.ps-3 {\n  padding-left: 1rem !important;\n}\n\n.ps-4 {\n  padding-left: 1.5rem !important;\n}\n\n.ps-5 {\n  padding-left: 3rem !important;\n}\n\n.gap-0 {\n  gap: 0 !important;\n}\n\n.gap-1 {\n  gap: 0.25rem !important;\n}\n\n.gap-2 {\n  gap: 0.5rem !important;\n}\n\n.gap-3 {\n  gap: 1rem !important;\n}\n\n.gap-4 {\n  gap: 1.5rem !important;\n}\n\n.gap-5 {\n  gap: 3rem !important;\n}\n\n.font-monospace {\n  font-family: var(--bs-font-monospace) !important;\n}\n\n.fs-1 {\n  font-size: calc(1.375rem + 1.5vw) !important;\n}\n\n.fs-2 {\n  font-size: calc(1.325rem + 0.9vw) !important;\n}\n\n.fs-3 {\n  font-size: calc(1.3rem + 0.6vw) !important;\n}\n\n.fs-4 {\n  font-size: calc(1.275rem + 0.3vw) !important;\n}\n\n.fs-5 {\n  font-size: 1.25rem !important;\n}\n\n.fs-6 {\n  font-size: 1rem !important;\n}\n\n.fst-italic {\n  font-style: italic !important;\n}\n\n.fst-normal {\n  font-style: normal !important;\n}\n\n.fw-light {\n  font-weight: 300 !important;\n}\n\n.fw-lighter {\n  font-weight: lighter !important;\n}\n\n.fw-normal {\n  font-weight: 400 !important;\n}\n\n.fw-bold {\n  font-weight: 700 !important;\n}\n\n.fw-semibold {\n  font-weight: 600 !important;\n}\n\n.fw-bolder {\n  font-weight: bolder !important;\n}\n\n.lh-1 {\n  line-height: 1 !important;\n}\n\n.lh-sm {\n  line-height: 1.25 !important;\n}\n\n.lh-base {\n  line-height: 1.5 !important;\n}\n\n.lh-lg {\n  line-height: 2 !important;\n}\n\n.text-start {\n  text-align: left !important;\n}\n\n.text-end {\n  text-align: right !important;\n}\n\n.text-center {\n  text-align: center !important;\n}\n\n.text-decoration-none {\n  text-decoration: none !important;\n}\n\n.text-decoration-underline {\n  text-decoration: underline !important;\n}\n\n.text-decoration-line-through {\n  text-decoration: line-through !important;\n}\n\n.text-lowercase {\n  text-transform: lowercase !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase !important;\n}\n\n.text-capitalize {\n  text-transform: capitalize !important;\n}\n\n.text-wrap {\n  white-space: normal !important;\n}\n\n.text-nowrap {\n  white-space: nowrap !important;\n}\n\n/* rtl:begin:remove */\n.text-break {\n  word-wrap: break-word !important;\n  word-break: break-word !important;\n}\n\n/* rtl:end:remove */\n.text-primary {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-secondary {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-success {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-info {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-warning {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-danger {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-light {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-dark {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-black {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-white {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-body {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity)) !important;\n}\n\n.text-muted {\n  --bs-text-opacity: 1;\n  color: #6c757d !important;\n}\n\n.text-black-50 {\n  --bs-text-opacity: 1;\n  color: rgba(0, 0, 0, 0.5) !important;\n}\n\n.text-white-50 {\n  --bs-text-opacity: 1;\n  color: rgba(255, 255, 255, 0.5) !important;\n}\n\n.text-reset {\n  --bs-text-opacity: 1;\n  color: inherit !important;\n}\n\n.text-opacity-25 {\n  --bs-text-opacity: 0.25;\n}\n\n.text-opacity-50 {\n  --bs-text-opacity: 0.5;\n}\n\n.text-opacity-75 {\n  --bs-text-opacity: 0.75;\n}\n\n.text-opacity-100 {\n  --bs-text-opacity: 1;\n}\n\n.bg-primary {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-secondary {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-success {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-info {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-warning {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-danger {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-light {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-dark {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-black {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-white {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-body {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity)) !important;\n}\n\n.bg-transparent {\n  --bs-bg-opacity: 1;\n  background-color: transparent !important;\n}\n\n.bg-opacity-10 {\n  --bs-bg-opacity: 0.1;\n}\n\n.bg-opacity-25 {\n  --bs-bg-opacity: 0.25;\n}\n\n.bg-opacity-50 {\n  --bs-bg-opacity: 0.5;\n}\n\n.bg-opacity-75 {\n  --bs-bg-opacity: 0.75;\n}\n\n.bg-opacity-100 {\n  --bs-bg-opacity: 1;\n}\n\n.bg-gradient {\n  background-image: var(--bs-gradient) !important;\n}\n\n.user-select-all {\n  user-select: all !important;\n}\n\n.user-select-auto {\n  user-select: auto !important;\n}\n\n.user-select-none {\n  user-select: none !important;\n}\n\n.pe-none {\n  pointer-events: none !important;\n}\n\n.pe-auto {\n  pointer-events: auto !important;\n}\n\n.rounded {\n  border-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-0 {\n  border-radius: 0 !important;\n}\n\n.rounded-1 {\n  border-radius: var(--bs-border-radius-sm) !important;\n}\n\n.rounded-2 {\n  border-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-3 {\n  border-radius: var(--bs-border-radius-lg) !important;\n}\n\n.rounded-4 {\n  border-radius: var(--bs-border-radius-xl) !important;\n}\n\n.rounded-5 {\n  border-radius: var(--bs-border-radius-2xl) !important;\n}\n\n.rounded-circle {\n  border-radius: 50% !important;\n}\n\n.rounded-pill {\n  border-radius: var(--bs-border-radius-pill) !important;\n}\n\n.rounded-top {\n  border-top-left-radius: var(--bs-border-radius) !important;\n  border-top-right-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-end {\n  border-top-right-radius: var(--bs-border-radius) !important;\n  border-bottom-right-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-bottom {\n  border-bottom-right-radius: var(--bs-border-radius) !important;\n  border-bottom-left-radius: var(--bs-border-radius) !important;\n}\n\n.rounded-start {\n  border-bottom-left-radius: var(--bs-border-radius) !important;\n  border-top-left-radius: var(--bs-border-radius) !important;\n}\n\n.visible {\n  visibility: visible !important;\n}\n\n.invisible {\n  visibility: hidden !important;\n}\n\n@media (min-width: 576px) {\n  .float-sm-start {\n    float: left !important;\n  }\n  .float-sm-end {\n    float: right !important;\n  }\n  .float-sm-none {\n    float: none !important;\n  }\n  .d-sm-inline {\n    display: inline !important;\n  }\n  .d-sm-inline-block {\n    display: inline-block !important;\n  }\n  .d-sm-block {\n    display: block !important;\n  }\n  .d-sm-grid {\n    display: grid !important;\n  }\n  .d-sm-table {\n    display: table !important;\n  }\n  .d-sm-table-row {\n    display: table-row !important;\n  }\n  .d-sm-table-cell {\n    display: table-cell !important;\n  }\n  .d-sm-flex {\n    display: flex !important;\n  }\n  .d-sm-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-sm-none {\n    display: none !important;\n  }\n  .flex-sm-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-sm-row {\n    flex-direction: row !important;\n  }\n  .flex-sm-column {\n    flex-direction: column !important;\n  }\n  .flex-sm-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-sm-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-sm-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-sm-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-sm-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-sm-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-sm-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-sm-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-sm-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-sm-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-sm-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-sm-center {\n    justify-content: center !important;\n  }\n  .justify-content-sm-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-sm-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-sm-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-sm-start {\n    align-items: flex-start !important;\n  }\n  .align-items-sm-end {\n    align-items: flex-end !important;\n  }\n  .align-items-sm-center {\n    align-items: center !important;\n  }\n  .align-items-sm-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-sm-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-sm-start {\n    align-content: flex-start !important;\n  }\n  .align-content-sm-end {\n    align-content: flex-end !important;\n  }\n  .align-content-sm-center {\n    align-content: center !important;\n  }\n  .align-content-sm-between {\n    align-content: space-between !important;\n  }\n  .align-content-sm-around {\n    align-content: space-around !important;\n  }\n  .align-content-sm-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-sm-auto {\n    align-self: auto !important;\n  }\n  .align-self-sm-start {\n    align-self: flex-start !important;\n  }\n  .align-self-sm-end {\n    align-self: flex-end !important;\n  }\n  .align-self-sm-center {\n    align-self: center !important;\n  }\n  .align-self-sm-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-sm-stretch {\n    align-self: stretch !important;\n  }\n  .order-sm-first {\n    order: -1 !important;\n  }\n  .order-sm-0 {\n    order: 0 !important;\n  }\n  .order-sm-1 {\n    order: 1 !important;\n  }\n  .order-sm-2 {\n    order: 2 !important;\n  }\n  .order-sm-3 {\n    order: 3 !important;\n  }\n  .order-sm-4 {\n    order: 4 !important;\n  }\n  .order-sm-5 {\n    order: 5 !important;\n  }\n  .order-sm-last {\n    order: 6 !important;\n  }\n  .m-sm-0 {\n    margin: 0 !important;\n  }\n  .m-sm-1 {\n    margin: 0.25rem !important;\n  }\n  .m-sm-2 {\n    margin: 0.5rem !important;\n  }\n  .m-sm-3 {\n    margin: 1rem !important;\n  }\n  .m-sm-4 {\n    margin: 1.5rem !important;\n  }\n  .m-sm-5 {\n    margin: 3rem !important;\n  }\n  .m-sm-auto {\n    margin: auto !important;\n  }\n  .mx-sm-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-sm-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-sm-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-sm-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-sm-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-sm-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-sm-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-sm-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-sm-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-sm-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-sm-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-sm-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-sm-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-sm-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-sm-0 {\n    margin-top: 0 !important;\n  }\n  .mt-sm-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-sm-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-sm-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-sm-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-sm-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-sm-auto {\n    margin-top: auto !important;\n  }\n  .me-sm-0 {\n    margin-right: 0 !important;\n  }\n  .me-sm-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-sm-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-sm-3 {\n    margin-right: 1rem !important;\n  }\n  .me-sm-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-sm-5 {\n    margin-right: 3rem !important;\n  }\n  .me-sm-auto {\n    margin-right: auto !important;\n  }\n  .mb-sm-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-sm-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-sm-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-sm-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-sm-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-sm-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-sm-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-sm-0 {\n    margin-left: 0 !important;\n  }\n  .ms-sm-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-sm-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-sm-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-sm-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-sm-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-sm-auto {\n    margin-left: auto !important;\n  }\n  .p-sm-0 {\n    padding: 0 !important;\n  }\n  .p-sm-1 {\n    padding: 0.25rem !important;\n  }\n  .p-sm-2 {\n    padding: 0.5rem !important;\n  }\n  .p-sm-3 {\n    padding: 1rem !important;\n  }\n  .p-sm-4 {\n    padding: 1.5rem !important;\n  }\n  .p-sm-5 {\n    padding: 3rem !important;\n  }\n  .px-sm-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-sm-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-sm-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-sm-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-sm-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-sm-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-sm-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-sm-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-sm-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-sm-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-sm-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-sm-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-sm-0 {\n    padding-top: 0 !important;\n  }\n  .pt-sm-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-sm-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-sm-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-sm-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-sm-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-sm-0 {\n    padding-right: 0 !important;\n  }\n  .pe-sm-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-sm-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-sm-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-sm-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-sm-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-sm-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-sm-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-sm-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-sm-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-sm-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-sm-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-sm-0 {\n    padding-left: 0 !important;\n  }\n  .ps-sm-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-sm-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-sm-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-sm-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-sm-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-sm-0 {\n    gap: 0 !important;\n  }\n  .gap-sm-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-sm-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-sm-3 {\n    gap: 1rem !important;\n  }\n  .gap-sm-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-sm-5 {\n    gap: 3rem !important;\n  }\n  .text-sm-start {\n    text-align: left !important;\n  }\n  .text-sm-end {\n    text-align: right !important;\n  }\n  .text-sm-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 768px) {\n  .float-md-start {\n    float: left !important;\n  }\n  .float-md-end {\n    float: right !important;\n  }\n  .float-md-none {\n    float: none !important;\n  }\n  .d-md-inline {\n    display: inline !important;\n  }\n  .d-md-inline-block {\n    display: inline-block !important;\n  }\n  .d-md-block {\n    display: block !important;\n  }\n  .d-md-grid {\n    display: grid !important;\n  }\n  .d-md-table {\n    display: table !important;\n  }\n  .d-md-table-row {\n    display: table-row !important;\n  }\n  .d-md-table-cell {\n    display: table-cell !important;\n  }\n  .d-md-flex {\n    display: flex !important;\n  }\n  .d-md-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-md-none {\n    display: none !important;\n  }\n  .flex-md-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-md-row {\n    flex-direction: row !important;\n  }\n  .flex-md-column {\n    flex-direction: column !important;\n  }\n  .flex-md-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-md-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-md-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-md-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-md-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-md-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-md-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-md-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-md-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-md-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-md-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-md-center {\n    justify-content: center !important;\n  }\n  .justify-content-md-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-md-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-md-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-md-start {\n    align-items: flex-start !important;\n  }\n  .align-items-md-end {\n    align-items: flex-end !important;\n  }\n  .align-items-md-center {\n    align-items: center !important;\n  }\n  .align-items-md-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-md-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-md-start {\n    align-content: flex-start !important;\n  }\n  .align-content-md-end {\n    align-content: flex-end !important;\n  }\n  .align-content-md-center {\n    align-content: center !important;\n  }\n  .align-content-md-between {\n    align-content: space-between !important;\n  }\n  .align-content-md-around {\n    align-content: space-around !important;\n  }\n  .align-content-md-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-md-auto {\n    align-self: auto !important;\n  }\n  .align-self-md-start {\n    align-self: flex-start !important;\n  }\n  .align-self-md-end {\n    align-self: flex-end !important;\n  }\n  .align-self-md-center {\n    align-self: center !important;\n  }\n  .align-self-md-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-md-stretch {\n    align-self: stretch !important;\n  }\n  .order-md-first {\n    order: -1 !important;\n  }\n  .order-md-0 {\n    order: 0 !important;\n  }\n  .order-md-1 {\n    order: 1 !important;\n  }\n  .order-md-2 {\n    order: 2 !important;\n  }\n  .order-md-3 {\n    order: 3 !important;\n  }\n  .order-md-4 {\n    order: 4 !important;\n  }\n  .order-md-5 {\n    order: 5 !important;\n  }\n  .order-md-last {\n    order: 6 !important;\n  }\n  .m-md-0 {\n    margin: 0 !important;\n  }\n  .m-md-1 {\n    margin: 0.25rem !important;\n  }\n  .m-md-2 {\n    margin: 0.5rem !important;\n  }\n  .m-md-3 {\n    margin: 1rem !important;\n  }\n  .m-md-4 {\n    margin: 1.5rem !important;\n  }\n  .m-md-5 {\n    margin: 3rem !important;\n  }\n  .m-md-auto {\n    margin: auto !important;\n  }\n  .mx-md-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-md-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-md-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-md-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-md-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-md-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-md-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-md-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-md-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-md-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-md-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-md-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-md-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-md-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-md-0 {\n    margin-top: 0 !important;\n  }\n  .mt-md-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-md-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-md-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-md-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-md-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-md-auto {\n    margin-top: auto !important;\n  }\n  .me-md-0 {\n    margin-right: 0 !important;\n  }\n  .me-md-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-md-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-md-3 {\n    margin-right: 1rem !important;\n  }\n  .me-md-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-md-5 {\n    margin-right: 3rem !important;\n  }\n  .me-md-auto {\n    margin-right: auto !important;\n  }\n  .mb-md-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-md-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-md-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-md-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-md-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-md-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-md-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-md-0 {\n    margin-left: 0 !important;\n  }\n  .ms-md-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-md-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-md-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-md-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-md-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-md-auto {\n    margin-left: auto !important;\n  }\n  .p-md-0 {\n    padding: 0 !important;\n  }\n  .p-md-1 {\n    padding: 0.25rem !important;\n  }\n  .p-md-2 {\n    padding: 0.5rem !important;\n  }\n  .p-md-3 {\n    padding: 1rem !important;\n  }\n  .p-md-4 {\n    padding: 1.5rem !important;\n  }\n  .p-md-5 {\n    padding: 3rem !important;\n  }\n  .px-md-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-md-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-md-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-md-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-md-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-md-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-md-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-md-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-md-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-md-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-md-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-md-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-md-0 {\n    padding-top: 0 !important;\n  }\n  .pt-md-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-md-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-md-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-md-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-md-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-md-0 {\n    padding-right: 0 !important;\n  }\n  .pe-md-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-md-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-md-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-md-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-md-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-md-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-md-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-md-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-md-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-md-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-md-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-md-0 {\n    padding-left: 0 !important;\n  }\n  .ps-md-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-md-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-md-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-md-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-md-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-md-0 {\n    gap: 0 !important;\n  }\n  .gap-md-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-md-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-md-3 {\n    gap: 1rem !important;\n  }\n  .gap-md-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-md-5 {\n    gap: 3rem !important;\n  }\n  .text-md-start {\n    text-align: left !important;\n  }\n  .text-md-end {\n    text-align: right !important;\n  }\n  .text-md-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 992px) {\n  .float-lg-start {\n    float: left !important;\n  }\n  .float-lg-end {\n    float: right !important;\n  }\n  .float-lg-none {\n    float: none !important;\n  }\n  .d-lg-inline {\n    display: inline !important;\n  }\n  .d-lg-inline-block {\n    display: inline-block !important;\n  }\n  .d-lg-block {\n    display: block !important;\n  }\n  .d-lg-grid {\n    display: grid !important;\n  }\n  .d-lg-table {\n    display: table !important;\n  }\n  .d-lg-table-row {\n    display: table-row !important;\n  }\n  .d-lg-table-cell {\n    display: table-cell !important;\n  }\n  .d-lg-flex {\n    display: flex !important;\n  }\n  .d-lg-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-lg-none {\n    display: none !important;\n  }\n  .flex-lg-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-lg-row {\n    flex-direction: row !important;\n  }\n  .flex-lg-column {\n    flex-direction: column !important;\n  }\n  .flex-lg-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-lg-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-lg-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-lg-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-lg-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-lg-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-lg-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-lg-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-lg-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-lg-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-lg-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-lg-center {\n    justify-content: center !important;\n  }\n  .justify-content-lg-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-lg-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-lg-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-lg-start {\n    align-items: flex-start !important;\n  }\n  .align-items-lg-end {\n    align-items: flex-end !important;\n  }\n  .align-items-lg-center {\n    align-items: center !important;\n  }\n  .align-items-lg-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-lg-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-lg-start {\n    align-content: flex-start !important;\n  }\n  .align-content-lg-end {\n    align-content: flex-end !important;\n  }\n  .align-content-lg-center {\n    align-content: center !important;\n  }\n  .align-content-lg-between {\n    align-content: space-between !important;\n  }\n  .align-content-lg-around {\n    align-content: space-around !important;\n  }\n  .align-content-lg-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-lg-auto {\n    align-self: auto !important;\n  }\n  .align-self-lg-start {\n    align-self: flex-start !important;\n  }\n  .align-self-lg-end {\n    align-self: flex-end !important;\n  }\n  .align-self-lg-center {\n    align-self: center !important;\n  }\n  .align-self-lg-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-lg-stretch {\n    align-self: stretch !important;\n  }\n  .order-lg-first {\n    order: -1 !important;\n  }\n  .order-lg-0 {\n    order: 0 !important;\n  }\n  .order-lg-1 {\n    order: 1 !important;\n  }\n  .order-lg-2 {\n    order: 2 !important;\n  }\n  .order-lg-3 {\n    order: 3 !important;\n  }\n  .order-lg-4 {\n    order: 4 !important;\n  }\n  .order-lg-5 {\n    order: 5 !important;\n  }\n  .order-lg-last {\n    order: 6 !important;\n  }\n  .m-lg-0 {\n    margin: 0 !important;\n  }\n  .m-lg-1 {\n    margin: 0.25rem !important;\n  }\n  .m-lg-2 {\n    margin: 0.5rem !important;\n  }\n  .m-lg-3 {\n    margin: 1rem !important;\n  }\n  .m-lg-4 {\n    margin: 1.5rem !important;\n  }\n  .m-lg-5 {\n    margin: 3rem !important;\n  }\n  .m-lg-auto {\n    margin: auto !important;\n  }\n  .mx-lg-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-lg-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-lg-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-lg-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-lg-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-lg-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-lg-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-lg-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-lg-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-lg-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-lg-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-lg-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-lg-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-lg-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-lg-0 {\n    margin-top: 0 !important;\n  }\n  .mt-lg-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-lg-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-lg-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-lg-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-lg-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-lg-auto {\n    margin-top: auto !important;\n  }\n  .me-lg-0 {\n    margin-right: 0 !important;\n  }\n  .me-lg-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-lg-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-lg-3 {\n    margin-right: 1rem !important;\n  }\n  .me-lg-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-lg-5 {\n    margin-right: 3rem !important;\n  }\n  .me-lg-auto {\n    margin-right: auto !important;\n  }\n  .mb-lg-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-lg-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-lg-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-lg-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-lg-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-lg-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-lg-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-lg-0 {\n    margin-left: 0 !important;\n  }\n  .ms-lg-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-lg-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-lg-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-lg-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-lg-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-lg-auto {\n    margin-left: auto !important;\n  }\n  .p-lg-0 {\n    padding: 0 !important;\n  }\n  .p-lg-1 {\n    padding: 0.25rem !important;\n  }\n  .p-lg-2 {\n    padding: 0.5rem !important;\n  }\n  .p-lg-3 {\n    padding: 1rem !important;\n  }\n  .p-lg-4 {\n    padding: 1.5rem !important;\n  }\n  .p-lg-5 {\n    padding: 3rem !important;\n  }\n  .px-lg-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-lg-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-lg-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-lg-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-lg-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-lg-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-lg-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-lg-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-lg-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-lg-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-lg-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-lg-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-lg-0 {\n    padding-top: 0 !important;\n  }\n  .pt-lg-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-lg-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-lg-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-lg-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-lg-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-lg-0 {\n    padding-right: 0 !important;\n  }\n  .pe-lg-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-lg-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-lg-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-lg-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-lg-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-lg-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-lg-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-lg-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-lg-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-lg-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-lg-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-lg-0 {\n    padding-left: 0 !important;\n  }\n  .ps-lg-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-lg-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-lg-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-lg-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-lg-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-lg-0 {\n    gap: 0 !important;\n  }\n  .gap-lg-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-lg-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-lg-3 {\n    gap: 1rem !important;\n  }\n  .gap-lg-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-lg-5 {\n    gap: 3rem !important;\n  }\n  .text-lg-start {\n    text-align: left !important;\n  }\n  .text-lg-end {\n    text-align: right !important;\n  }\n  .text-lg-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1200px) {\n  .float-xl-start {\n    float: left !important;\n  }\n  .float-xl-end {\n    float: right !important;\n  }\n  .float-xl-none {\n    float: none !important;\n  }\n  .d-xl-inline {\n    display: inline !important;\n  }\n  .d-xl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xl-block {\n    display: block !important;\n  }\n  .d-xl-grid {\n    display: grid !important;\n  }\n  .d-xl-table {\n    display: table !important;\n  }\n  .d-xl-table-row {\n    display: table-row !important;\n  }\n  .d-xl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xl-flex {\n    display: flex !important;\n  }\n  .d-xl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xl-none {\n    display: none !important;\n  }\n  .flex-xl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xl-row {\n    flex-direction: row !important;\n  }\n  .flex-xl-column {\n    flex-direction: column !important;\n  }\n  .flex-xl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xl-center {\n    align-items: center !important;\n  }\n  .align-items-xl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xl-center {\n    align-content: center !important;\n  }\n  .align-content-xl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xl-center {\n    align-self: center !important;\n  }\n  .align-self-xl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xl-first {\n    order: -1 !important;\n  }\n  .order-xl-0 {\n    order: 0 !important;\n  }\n  .order-xl-1 {\n    order: 1 !important;\n  }\n  .order-xl-2 {\n    order: 2 !important;\n  }\n  .order-xl-3 {\n    order: 3 !important;\n  }\n  .order-xl-4 {\n    order: 4 !important;\n  }\n  .order-xl-5 {\n    order: 5 !important;\n  }\n  .order-xl-last {\n    order: 6 !important;\n  }\n  .m-xl-0 {\n    margin: 0 !important;\n  }\n  .m-xl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xl-3 {\n    margin: 1rem !important;\n  }\n  .m-xl-4 {\n    margin: 1.5rem !important;\n  }\n  .m-xl-5 {\n    margin: 3rem !important;\n  }\n  .m-xl-auto {\n    margin: auto !important;\n  }\n  .mx-xl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xl-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-xl-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-xl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xl-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-xl-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-xl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xl-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-xl-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-xl-auto {\n    margin-top: auto !important;\n  }\n  .me-xl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xl-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-xl-5 {\n    margin-right: 3rem !important;\n  }\n  .me-xl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xl-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-xl-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-xl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xl-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-xl-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-xl-auto {\n    margin-left: auto !important;\n  }\n  .p-xl-0 {\n    padding: 0 !important;\n  }\n  .p-xl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xl-3 {\n    padding: 1rem !important;\n  }\n  .p-xl-4 {\n    padding: 1.5rem !important;\n  }\n  .p-xl-5 {\n    padding: 3rem !important;\n  }\n  .px-xl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xl-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-xl-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-xl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xl-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-xl-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-xl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xl-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-xl-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-xl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xl-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-xl-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-xl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xl-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-xl-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-xl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xl-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-xl-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-xl-0 {\n    gap: 0 !important;\n  }\n  .gap-xl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xl-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-xl-5 {\n    gap: 3rem !important;\n  }\n  .text-xl-start {\n    text-align: left !important;\n  }\n  .text-xl-end {\n    text-align: right !important;\n  }\n  .text-xl-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1400px) {\n  .float-xxl-start {\n    float: left !important;\n  }\n  .float-xxl-end {\n    float: right !important;\n  }\n  .float-xxl-none {\n    float: none !important;\n  }\n  .d-xxl-inline {\n    display: inline !important;\n  }\n  .d-xxl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xxl-block {\n    display: block !important;\n  }\n  .d-xxl-grid {\n    display: grid !important;\n  }\n  .d-xxl-table {\n    display: table !important;\n  }\n  .d-xxl-table-row {\n    display: table-row !important;\n  }\n  .d-xxl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xxl-flex {\n    display: flex !important;\n  }\n  .d-xxl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xxl-none {\n    display: none !important;\n  }\n  .flex-xxl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xxl-row {\n    flex-direction: row !important;\n  }\n  .flex-xxl-column {\n    flex-direction: column !important;\n  }\n  .flex-xxl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xxl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xxl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xxl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xxl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xxl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xxl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xxl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xxl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xxl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xxl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xxl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xxl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xxl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xxl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xxl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xxl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xxl-center {\n    align-items: center !important;\n  }\n  .align-items-xxl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xxl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xxl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xxl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xxl-center {\n    align-content: center !important;\n  }\n  .align-content-xxl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xxl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xxl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xxl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xxl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xxl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xxl-center {\n    align-self: center !important;\n  }\n  .align-self-xxl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xxl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xxl-first {\n    order: -1 !important;\n  }\n  .order-xxl-0 {\n    order: 0 !important;\n  }\n  .order-xxl-1 {\n    order: 1 !important;\n  }\n  .order-xxl-2 {\n    order: 2 !important;\n  }\n  .order-xxl-3 {\n    order: 3 !important;\n  }\n  .order-xxl-4 {\n    order: 4 !important;\n  }\n  .order-xxl-5 {\n    order: 5 !important;\n  }\n  .order-xxl-last {\n    order: 6 !important;\n  }\n  .m-xxl-0 {\n    margin: 0 !important;\n  }\n  .m-xxl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xxl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xxl-3 {\n    margin: 1rem !important;\n  }\n  .m-xxl-4 {\n    margin: 1.5rem !important;\n  }\n  .m-xxl-5 {\n    margin: 3rem !important;\n  }\n  .m-xxl-auto {\n    margin: auto !important;\n  }\n  .mx-xxl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xxl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xxl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xxl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xxl-4 {\n    margin-right: 1.5rem !important;\n    margin-left: 1.5rem !important;\n  }\n  .mx-xxl-5 {\n    margin-right: 3rem !important;\n    margin-left: 3rem !important;\n  }\n  .mx-xxl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xxl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xxl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xxl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xxl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xxl-4 {\n    margin-top: 1.5rem !important;\n    margin-bottom: 1.5rem !important;\n  }\n  .my-xxl-5 {\n    margin-top: 3rem !important;\n    margin-bottom: 3rem !important;\n  }\n  .my-xxl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xxl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xxl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xxl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xxl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xxl-4 {\n    margin-top: 1.5rem !important;\n  }\n  .mt-xxl-5 {\n    margin-top: 3rem !important;\n  }\n  .mt-xxl-auto {\n    margin-top: auto !important;\n  }\n  .me-xxl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xxl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xxl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xxl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xxl-4 {\n    margin-right: 1.5rem !important;\n  }\n  .me-xxl-5 {\n    margin-right: 3rem !important;\n  }\n  .me-xxl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xxl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xxl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xxl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xxl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xxl-4 {\n    margin-bottom: 1.5rem !important;\n  }\n  .mb-xxl-5 {\n    margin-bottom: 3rem !important;\n  }\n  .mb-xxl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xxl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xxl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xxl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xxl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xxl-4 {\n    margin-left: 1.5rem !important;\n  }\n  .ms-xxl-5 {\n    margin-left: 3rem !important;\n  }\n  .ms-xxl-auto {\n    margin-left: auto !important;\n  }\n  .p-xxl-0 {\n    padding: 0 !important;\n  }\n  .p-xxl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xxl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xxl-3 {\n    padding: 1rem !important;\n  }\n  .p-xxl-4 {\n    padding: 1.5rem !important;\n  }\n  .p-xxl-5 {\n    padding: 3rem !important;\n  }\n  .px-xxl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xxl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xxl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xxl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xxl-4 {\n    padding-right: 1.5rem !important;\n    padding-left: 1.5rem !important;\n  }\n  .px-xxl-5 {\n    padding-right: 3rem !important;\n    padding-left: 3rem !important;\n  }\n  .py-xxl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xxl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xxl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xxl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xxl-4 {\n    padding-top: 1.5rem !important;\n    padding-bottom: 1.5rem !important;\n  }\n  .py-xxl-5 {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .pt-xxl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xxl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xxl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xxl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xxl-4 {\n    padding-top: 1.5rem !important;\n  }\n  .pt-xxl-5 {\n    padding-top: 3rem !important;\n  }\n  .pe-xxl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xxl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xxl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xxl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xxl-4 {\n    padding-right: 1.5rem !important;\n  }\n  .pe-xxl-5 {\n    padding-right: 3rem !important;\n  }\n  .pb-xxl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xxl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xxl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xxl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xxl-4 {\n    padding-bottom: 1.5rem !important;\n  }\n  .pb-xxl-5 {\n    padding-bottom: 3rem !important;\n  }\n  .ps-xxl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xxl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xxl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xxl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xxl-4 {\n    padding-left: 1.5rem !important;\n  }\n  .ps-xxl-5 {\n    padding-left: 3rem !important;\n  }\n  .gap-xxl-0 {\n    gap: 0 !important;\n  }\n  .gap-xxl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xxl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xxl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xxl-4 {\n    gap: 1.5rem !important;\n  }\n  .gap-xxl-5 {\n    gap: 3rem !important;\n  }\n  .text-xxl-start {\n    text-align: left !important;\n  }\n  .text-xxl-end {\n    text-align: right !important;\n  }\n  .text-xxl-center {\n    text-align: center !important;\n  }\n}\n@media (min-width: 1200px) {\n  .fs-1 {\n    font-size: 2.5rem !important;\n  }\n  .fs-2 {\n    font-size: 2rem !important;\n  }\n  .fs-3 {\n    font-size: 1.75rem !important;\n  }\n  .fs-4 {\n    font-size: 1.5rem !important;\n  }\n}\n@media print {\n  .d-print-inline {\n    display: inline !important;\n  }\n  .d-print-inline-block {\n    display: inline-block !important;\n  }\n  .d-print-block {\n    display: block !important;\n  }\n  .d-print-grid {\n    display: grid !important;\n  }\n  .d-print-table {\n    display: table !important;\n  }\n  .d-print-table-row {\n    display: table-row !important;\n  }\n  .d-print-table-cell {\n    display: table-cell !important;\n  }\n  .d-print-flex {\n    display: flex !important;\n  }\n  .d-print-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-print-none {\n    display: none !important;\n  }\n}','// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix\n\n\n// Reboot\n//\n// Normalization of HTML elements, manually forked from Normalize.css to remove\n// styles targeting irrelevant browsers while applying new styles.\n//\n// Normalize is licensed MIT. https://github.com/necolas/normalize.css\n\n\n// Document\n//\n// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n\n// Root\n//\n// Ability to the value of the root font sizes, affecting the value of `rem`.\n// null by default, thus nothing is generated.\n\n:root {\n  @if $font-size-root != null {\n    @include font-size(var(--#{$prefix}root-font-size));\n  }\n\n  @if $enable-smooth-scroll {\n    @media (prefers-reduced-motion: no-preference) {\n      scroll-behavior: smooth;\n    }\n  }\n}\n\n\n// Body\n//\n// 1. Remove the margin in all browsers.\n// 2. As a best practice, apply a default `background-color`.\n// 3. Prevent adjustments of font size after orientation changes in iOS.\n// 4. Change the default tap highlight to be completely transparent in iOS.\n\n// scss-docs-start reboot-body-rules\nbody {\n  margin: 0; // 1\n  font-family: var(--#{$prefix}body-font-family);\n  @include font-size(var(--#{$prefix}body-font-size));\n  font-weight: var(--#{$prefix}body-font-weight);\n  line-height: var(--#{$prefix}body-line-height);\n  color: var(--#{$prefix}body-color);\n  text-align: var(--#{$prefix}body-text-align);\n  background-color: var(--#{$prefix}body-bg); // 2\n  -webkit-text-size-adjust: 100%; // 3\n  -webkit-tap-highlight-color: rgba($black, 0); // 4\n}\n// scss-docs-end reboot-body-rules\n\n\n// Content grouping\n//\n// 1. Reset Firefox\'s gray color\n\nhr {\n  margin: $hr-margin-y 0;\n  color: $hr-color; // 1\n  border: 0;\n  border-top: $hr-border-width solid $hr-border-color;\n  opacity: $hr-opacity;\n}\n\n\n// Typography\n//\n// 1. Remove top margins from headings\n//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\n//    margin for easier control within type scales as it avoids margin collapsing.\n\n%heading {\n  margin-top: 0; // 1\n  margin-bottom: $headings-margin-bottom;\n  font-family: $headings-font-family;\n  font-style: $headings-font-style;\n  font-weight: $headings-font-weight;\n  line-height: $headings-line-height;\n  color: $headings-color;\n}\n\nh1 {\n  @extend %heading;\n  @include font-size($h1-font-size);\n}\n\nh2 {\n  @extend %heading;\n  @include font-size($h2-font-size);\n}\n\nh3 {\n  @extend %heading;\n  @include font-size($h3-font-size);\n}\n\nh4 {\n  @extend %heading;\n  @include font-size($h4-font-size);\n}\n\nh5 {\n  @extend %heading;\n  @include font-size($h5-font-size);\n}\n\nh6 {\n  @extend %heading;\n  @include font-size($h6-font-size);\n}\n\n\n// Reset margins on paragraphs\n//\n// Similarly, the top margin on `<p>`s get reset. However, we also reset the\n// bottom margin to use `rem` units instead of `em`.\n\np {\n  margin-top: 0;\n  margin-bottom: $paragraph-margin-bottom;\n}\n\n\n// Abbreviations\n//\n// 1. Add the correct text decoration in Chrome, Edge, Opera, and Safari.\n// 2. Add explicit cursor to indicate changed behavior.\n// 3. Prevent the text-decoration to be skipped.\n\nabbr[title] {\n  text-decoration: underline dotted; // 1\n  cursor: help; // 2\n  text-decoration-skip-ink: none; // 3\n}\n\n\n// Address\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\n\n// Lists\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: $dt-font-weight;\n}\n\n// 1. Undo browser default\n\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0; // 1\n}\n\n\n// Blockquote\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\n\n// Strong\n//\n// Add the correct font weight in Chrome, Edge, and Safari\n\nb,\nstrong {\n  font-weight: $font-weight-bolder;\n}\n\n\n// Small\n//\n// Add the correct font size in all browsers\n\nsmall {\n  @include font-size($small-font-size);\n}\n\n\n// Mark\n\nmark {\n  padding: $mark-padding;\n  background-color: var(--#{$prefix}highlight-bg);\n}\n\n\n// Sub and Sup\n//\n// Prevent `sub` and `sup` elements from affecting the line height in\n// all browsers.\n\nsub,\nsup {\n  position: relative;\n  @include font-size($sub-sup-font-size);\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub { bottom: -.25em; }\nsup { top: -.5em; }\n\n\n// Links\n\na {\n  color: var(--#{$prefix}link-color);\n  text-decoration: $link-decoration;\n\n  &:hover {\n    color: var(--#{$prefix}link-hover-color);\n    text-decoration: $link-hover-decoration;\n  }\n}\n\n// And undo these styles for placeholder links/named anchors (without href).\n// It would be more straightforward to just use a[href] in previous block, but that\n// causes specificity issues in many other styles that are too complex to fix.\n// See https://github.com/twbs/bootstrap/issues/19402\n\na:not([href]):not([class]) {\n  &,\n  &:hover {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n\n// Code\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: $font-family-code;\n  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.\n}\n\n// 1. Remove browser default top margin\n// 2. Reset browser default of `1em` to use `rem`s\n// 3. Don\'t allow content to break outside\n\npre {\n  display: block;\n  margin-top: 0; // 1\n  margin-bottom: 1rem; // 2\n  overflow: auto; // 3\n  @include font-size($code-font-size);\n  color: $pre-color;\n\n  // Account for some code outputs that place code tags in pre tags\n  code {\n    @include font-size(inherit);\n    color: inherit;\n    word-break: normal;\n  }\n}\n\ncode {\n  @include font-size($code-font-size);\n  color: var(--#{$prefix}code-color);\n  word-wrap: break-word;\n\n  // Streamline the style when inside anchors to avoid broken underline and more\n  a > & {\n    color: inherit;\n  }\n}\n\nkbd {\n  padding: $kbd-padding-y $kbd-padding-x;\n  @include font-size($kbd-font-size);\n  color: $kbd-color;\n  background-color: $kbd-bg;\n  @include border-radius($border-radius-sm);\n\n  kbd {\n    padding: 0;\n    @include font-size(1em);\n    font-weight: $nested-kbd-font-weight;\n  }\n}\n\n\n// Figures\n//\n// Apply a consistent margin strategy (matches our type styles).\n\nfigure {\n  margin: 0 0 1rem;\n}\n\n\n// Images and content\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\n\n// Tables\n//\n// Prevent double borders\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: $table-cell-padding-y;\n  padding-bottom: $table-cell-padding-y;\n  color: $table-caption-color;\n  text-align: left;\n}\n\n// 1. Removes font-weight bold by inheriting\n// 2. Matches default `<td>` alignment by inheriting `text-align`.\n// 3. Fix alignment for Safari\n\nth {\n  font-weight: $table-th-font-weight; // 1\n  text-align: inherit; // 2\n  text-align: -webkit-match-parent; // 3\n}\n\nthead,\ntbody,\ntfoot,\ntr,\ntd,\nth {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\n\n// Forms\n//\n// 1. Allow labels to use `margin` for spacing.\n\nlabel {\n  display: inline-block; // 1\n}\n\n// Remove the default `border-radius` that macOS Chrome adds.\n// See https://github.com/twbs/bootstrap/issues/24093\n\nbutton {\n  // stylelint-disable-next-line property-disallowed-list\n  border-radius: 0;\n}\n\n// Explicitly remove focus outline in Chromium when it shouldn\'t be\n// visible (e.g. as result of mouse click or touch tap). It already\n// should be doing this automatically, but seems to currently be\n// confused and applies its very visible two-tone outline anyway.\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\n// 1. Remove the margin in Firefox and Safari\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0; // 1\n  font-family: inherit;\n  @include font-size(inherit);\n  line-height: inherit;\n}\n\n// Remove the inheritance of text transform in Firefox\nbutton,\nselect {\n  text-transform: none;\n}\n// Set the cursor for non-`<button>` buttons\n//\n// Details at https://github.com/twbs/bootstrap/pull/30562\n[role="button"] {\n  cursor: pointer;\n}\n\nselect {\n  // Remove the inheritance of word-wrap in Safari.\n  // See https://github.com/twbs/bootstrap/issues/24990\n  word-wrap: normal;\n\n  // Undo the opacity change from Chrome\n  &:disabled {\n    opacity: 1;\n  }\n}\n\n// Remove the dropdown arrow only from text type inputs built with datalists in Chrome.\n// See https://stackoverflow.com/a/54997118\n\n[list]:not([type="date"]):not([type="datetime-local"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\n// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n//    controls in Android 4.\n// 2. Correct the inability to style clickable types in iOS and Safari.\n// 3. Opinionated: add "hand" cursor to non-disabled button elements.\n\nbutton,\n[type="button"], // 1\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button; // 2\n\n  @if $enable-button-pointers {\n    &:not(:disabled) {\n      cursor: pointer; // 3\n    }\n  }\n}\n\n// Remove inner border and padding from Firefox, but don\'t restore the outline like Normalize.\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\n// 1. Textareas should really only resize vertically so they don\'t break their (horizontal) containers.\n\ntextarea {\n  resize: vertical; // 1\n}\n\n// 1. Browsers set a default `min-width: min-content;` on fieldsets,\n//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.\n//    So we reset that to ensure fieldsets behave more like a standard block element.\n//    See https://github.com/twbs/bootstrap/issues/12359\n//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements\n// 2. Reset the default outline behavior of fieldsets so they don\'t affect page layout.\n\nfieldset {\n  min-width: 0; // 1\n  padding: 0; // 2\n  margin: 0; // 2\n  border: 0; // 2\n}\n\n// 1. By using `float: left`, the legend will behave like a block element.\n//    This way the border of a fieldset wraps around the legend if present.\n// 2. Fix wrapping bug.\n//    See https://github.com/twbs/bootstrap/issues/29712\n\nlegend {\n  float: left; // 1\n  width: 100%;\n  padding: 0;\n  margin-bottom: $legend-margin-bottom;\n  @include font-size($legend-font-size);\n  font-weight: $legend-font-weight;\n  line-height: inherit;\n\n  + * {\n    clear: left; // 2\n  }\n}\n\n// Fix height of inputs with a type of datetime-local, date, month, week, or time\n// See https://github.com/twbs/bootstrap/issues/18842\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n// 1. Correct the outline style in Safari.\n// 2. This overrides the extra rounded corners on search inputs in iOS so that our\n//    `.form-control` class can properly style them. Note that this cannot simply\n//    be added to `.form-control` as it\'s not specific enough. For details, see\n//    https://github.com/twbs/bootstrap/issues/11586.\n\n[type="search"] {\n  outline-offset: -2px; // 1\n  -webkit-appearance: textfield; // 2\n}\n\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n// 2. RTL only output\n// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n\n/* rtl:raw:\n[type="tel"],\n[type="url"],\n[type="email"],\n[type="number"] {\n  direction: ltr;\n}\n*/\n\n// Remove the inner padding in Chrome and Safari on macOS.\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// Remove padding around color pickers in webkit browsers\n\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n\n// 1. Inherit font family and line height for file input buttons\n// 2. Correct the inability to style clickable types in iOS and Safari.\n\n::file-selector-button {\n  font: inherit; // 1\n  -webkit-appearance: button; // 2\n}\n\n// Correct element displays\n\noutput {\n  display: inline-block;\n}\n\n// Remove border from iframe\n\niframe {\n  border: 0;\n}\n\n// Summary\n//\n// 1. Add the correct display in all browsers\n\nsummary {\n  display: list-item; // 1\n  cursor: pointer;\n}\n\n\n// Progress\n//\n// Add the correct vertical alignment in Chrome, Firefox, and Opera.\n\nprogress {\n  vertical-align: baseline;\n}\n\n\n// Hidden attribute\n//\n// Always hide an element with the `hidden` HTML attribute.\n\n[hidden] {\n  display: none !important;\n}\n','// Variables\n//\n// Variables should follow the `$component-state-property-size` formula for\n// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.\n\n// Color system\n\n// scss-docs-start gray-color-variables\n$white:    #fff !default;\n$gray-100: #f8f9fa !default;\n$gray-200: #e9ecef !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #6c757d !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n$black:    #000 !default;\n// scss-docs-end gray-color-variables\n\n// fusv-disable\n// scss-docs-start gray-colors-map\n$grays: (\n  "100": $gray-100,\n  "200": $gray-200,\n  "300": $gray-300,\n  "400": $gray-400,\n  "500": $gray-500,\n  "600": $gray-600,\n  "700": $gray-700,\n  "800": $gray-800,\n  "900": $gray-900\n) !default;\n// scss-docs-end gray-colors-map\n// fusv-enable\n\n// scss-docs-start color-variables\n$blue:    #0d6efd !default;\n$indigo:  #6610f2 !default;\n$purple:  #6f42c1 !default;\n$pink:    #d63384 !default;\n$red:     #dc3545 !default;\n$orange:  #fd7e14 !default;\n$yellow:  #ffc107 !default;\n$green:   #198754 !default;\n$teal:    #20c997 !default;\n$cyan:    #0dcaf0 !default;\n// scss-docs-end color-variables\n\n// scss-docs-start colors-map\n$colors: (\n  "blue":       $blue,\n  "indigo":     $indigo,\n  "purple":     $purple,\n  "pink":       $pink,\n  "red":        $red,\n  "orange":     $orange,\n  "yellow":     $yellow,\n  "green":      $green,\n  "teal":       $teal,\n  "cyan":       $cyan,\n  "black":      $black,\n  "white":      $white,\n  "gray":       $gray-600,\n  "gray-dark":  $gray-800\n) !default;\n// scss-docs-end colors-map\n\n// The contrast ratio to reach against white, to determine if color changes from "light" to "dark". Acceptable values for WCAG 2.0 are 3, 4.5 and 7.\n// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\n$min-contrast-ratio:   4.5 !default;\n\n// Customize the light and dark text colors for use in our color contrast function.\n$color-contrast-dark:      $black !default;\n$color-contrast-light:     $white !default;\n\n// fusv-disable\n$blue-100: tint-color($blue, 80%) !default;\n$blue-200: tint-color($blue, 60%) !default;\n$blue-300: tint-color($blue, 40%) !default;\n$blue-400: tint-color($blue, 20%) !default;\n$blue-500: $blue !default;\n$blue-600: shade-color($blue, 20%) !default;\n$blue-700: shade-color($blue, 40%) !default;\n$blue-800: shade-color($blue, 60%) !default;\n$blue-900: shade-color($blue, 80%) !default;\n\n$indigo-100: tint-color($indigo, 80%) !default;\n$indigo-200: tint-color($indigo, 60%) !default;\n$indigo-300: tint-color($indigo, 40%) !default;\n$indigo-400: tint-color($indigo, 20%) !default;\n$indigo-500: $indigo !default;\n$indigo-600: shade-color($indigo, 20%) !default;\n$indigo-700: shade-color($indigo, 40%) !default;\n$indigo-800: shade-color($indigo, 60%) !default;\n$indigo-900: shade-color($indigo, 80%) !default;\n\n$purple-100: tint-color($purple, 80%) !default;\n$purple-200: tint-color($purple, 60%) !default;\n$purple-300: tint-color($purple, 40%) !default;\n$purple-400: tint-color($purple, 20%) !default;\n$purple-500: $purple !default;\n$purple-600: shade-color($purple, 20%) !default;\n$purple-700: shade-color($purple, 40%) !default;\n$purple-800: shade-color($purple, 60%) !default;\n$purple-900: shade-color($purple, 80%) !default;\n\n$pink-100: tint-color($pink, 80%) !default;\n$pink-200: tint-color($pink, 60%) !default;\n$pink-300: tint-color($pink, 40%) !default;\n$pink-400: tint-color($pink, 20%) !default;\n$pink-500: $pink !default;\n$pink-600: shade-color($pink, 20%) !default;\n$pink-700: shade-color($pink, 40%) !default;\n$pink-800: shade-color($pink, 60%) !default;\n$pink-900: shade-color($pink, 80%) !default;\n\n$red-100: tint-color($red, 80%) !default;\n$red-200: tint-color($red, 60%) !default;\n$red-300: tint-color($red, 40%) !default;\n$red-400: tint-color($red, 20%) !default;\n$red-500: $red !default;\n$red-600: shade-color($red, 20%) !default;\n$red-700: shade-color($red, 40%) !default;\n$red-800: shade-color($red, 60%) !default;\n$red-900: shade-color($red, 80%) !default;\n\n$orange-100: tint-color($orange, 80%) !default;\n$orange-200: tint-color($orange, 60%) !default;\n$orange-300: tint-color($orange, 40%) !default;\n$orange-400: tint-color($orange, 20%) !default;\n$orange-500: $orange !default;\n$orange-600: shade-color($orange, 20%) !default;\n$orange-700: shade-color($orange, 40%) !default;\n$orange-800: shade-color($orange, 60%) !default;\n$orange-900: shade-color($orange, 80%) !default;\n\n$yellow-100: tint-color($yellow, 80%) !default;\n$yellow-200: tint-color($yellow, 60%) !default;\n$yellow-300: tint-color($yellow, 40%) !default;\n$yellow-400: tint-color($yellow, 20%) !default;\n$yellow-500: $yellow !default;\n$yellow-600: shade-color($yellow, 20%) !default;\n$yellow-700: shade-color($yellow, 40%) !default;\n$yellow-800: shade-color($yellow, 60%) !default;\n$yellow-900: shade-color($yellow, 80%) !default;\n\n$green-100: tint-color($green, 80%) !default;\n$green-200: tint-color($green, 60%) !default;\n$green-300: tint-color($green, 40%) !default;\n$green-400: tint-color($green, 20%) !default;\n$green-500: $green !default;\n$green-600: shade-color($green, 20%) !default;\n$green-700: shade-color($green, 40%) !default;\n$green-800: shade-color($green, 60%) !default;\n$green-900: shade-color($green, 80%) !default;\n\n$teal-100: tint-color($teal, 80%) !default;\n$teal-200: tint-color($teal, 60%) !default;\n$teal-300: tint-color($teal, 40%) !default;\n$teal-400: tint-color($teal, 20%) !default;\n$teal-500: $teal !default;\n$teal-600: shade-color($teal, 20%) !default;\n$teal-700: shade-color($teal, 40%) !default;\n$teal-800: shade-color($teal, 60%) !default;\n$teal-900: shade-color($teal, 80%) !default;\n\n$cyan-100: tint-color($cyan, 80%) !default;\n$cyan-200: tint-color($cyan, 60%) !default;\n$cyan-300: tint-color($cyan, 40%) !default;\n$cyan-400: tint-color($cyan, 20%) !default;\n$cyan-500: $cyan !default;\n$cyan-600: shade-color($cyan, 20%) !default;\n$cyan-700: shade-color($cyan, 40%) !default;\n$cyan-800: shade-color($cyan, 60%) !default;\n$cyan-900: shade-color($cyan, 80%) !default;\n\n$blues: (\n  "blue-100": $blue-100,\n  "blue-200": $blue-200,\n  "blue-300": $blue-300,\n  "blue-400": $blue-400,\n  "blue-500": $blue-500,\n  "blue-600": $blue-600,\n  "blue-700": $blue-700,\n  "blue-800": $blue-800,\n  "blue-900": $blue-900\n) !default;\n\n$indigos: (\n  "indigo-100": $indigo-100,\n  "indigo-200": $indigo-200,\n  "indigo-300": $indigo-300,\n  "indigo-400": $indigo-400,\n  "indigo-500": $indigo-500,\n  "indigo-600": $indigo-600,\n  "indigo-700": $indigo-700,\n  "indigo-800": $indigo-800,\n  "indigo-900": $indigo-900\n) !default;\n\n$purples: (\n  "purple-100": $purple-100,\n  "purple-200": $purple-200,\n  "purple-300": $purple-300,\n  "purple-400": $purple-400,\n  "purple-500": $purple-500,\n  "purple-600": $purple-600,\n  "purple-700": $purple-700,\n  "purple-800": $purple-800,\n  "purple-900": $purple-900\n) !default;\n\n$pinks: (\n  "pink-100": $pink-100,\n  "pink-200": $pink-200,\n  "pink-300": $pink-300,\n  "pink-400": $pink-400,\n  "pink-500": $pink-500,\n  "pink-600": $pink-600,\n  "pink-700": $pink-700,\n  "pink-800": $pink-800,\n  "pink-900": $pink-900\n) !default;\n\n$reds: (\n  "red-100": $red-100,\n  "red-200": $red-200,\n  "red-300": $red-300,\n  "red-400": $red-400,\n  "red-500": $red-500,\n  "red-600": $red-600,\n  "red-700": $red-700,\n  "red-800": $red-800,\n  "red-900": $red-900\n) !default;\n\n$oranges: (\n  "orange-100": $orange-100,\n  "orange-200": $orange-200,\n  "orange-300": $orange-300,\n  "orange-400": $orange-400,\n  "orange-500": $orange-500,\n  "orange-600": $orange-600,\n  "orange-700": $orange-700,\n  "orange-800": $orange-800,\n  "orange-900": $orange-900\n) !default;\n\n$yellows: (\n  "yellow-100": $yellow-100,\n  "yellow-200": $yellow-200,\n  "yellow-300": $yellow-300,\n  "yellow-400": $yellow-400,\n  "yellow-500": $yellow-500,\n  "yellow-600": $yellow-600,\n  "yellow-700": $yellow-700,\n  "yellow-800": $yellow-800,\n  "yellow-900": $yellow-900\n) !default;\n\n$greens: (\n  "green-100": $green-100,\n  "green-200": $green-200,\n  "green-300": $green-300,\n  "green-400": $green-400,\n  "green-500": $green-500,\n  "green-600": $green-600,\n  "green-700": $green-700,\n  "green-800": $green-800,\n  "green-900": $green-900\n) !default;\n\n$teals: (\n  "teal-100": $teal-100,\n  "teal-200": $teal-200,\n  "teal-300": $teal-300,\n  "teal-400": $teal-400,\n  "teal-500": $teal-500,\n  "teal-600": $teal-600,\n  "teal-700": $teal-700,\n  "teal-800": $teal-800,\n  "teal-900": $teal-900\n) !default;\n\n$cyans: (\n  "cyan-100": $cyan-100,\n  "cyan-200": $cyan-200,\n  "cyan-300": $cyan-300,\n  "cyan-400": $cyan-400,\n  "cyan-500": $cyan-500,\n  "cyan-600": $cyan-600,\n  "cyan-700": $cyan-700,\n  "cyan-800": $cyan-800,\n  "cyan-900": $cyan-900\n) !default;\n// fusv-enable\n\n// scss-docs-start theme-color-variables\n$primary:       $blue !default;\n$secondary:     $gray-600 !default;\n$success:       $green !default;\n$info:          $cyan !default;\n$warning:       $yellow !default;\n$danger:        $red !default;\n$light:         $gray-100 !default;\n$dark:          $gray-900 !default;\n// scss-docs-end theme-color-variables\n\n// scss-docs-start theme-colors-map\n$theme-colors: (\n  "primary":    $primary,\n  "secondary":  $secondary,\n  "success":    $success,\n  "info":       $info,\n  "warning":    $warning,\n  "danger":     $danger,\n  "light":      $light,\n  "dark":       $dark\n) !default;\n// scss-docs-end theme-colors-map\n\n// Characters which are escaped by the escape-svg function\n$escaped-characters: (\n  ("<", "%3c"),\n  (">", "%3e"),\n  ("#", "%23"),\n  ("(", "%28"),\n  (")", "%29"),\n) !default;\n\n// Options\n//\n// Quickly modify global styling by enabling or disabling optional features.\n\n$enable-caret:                true !default;\n$enable-rounded:              true !default;\n$enable-shadows:              false !default;\n$enable-gradients:            false !default;\n$enable-transitions:          true !default;\n$enable-reduced-motion:       true !default;\n$enable-smooth-scroll:        true !default;\n$enable-grid-classes:         true !default;\n$enable-container-classes:    true !default;\n$enable-cssgrid:              false !default;\n$enable-button-pointers:      true !default;\n$enable-rfs:                  true !default;\n$enable-validation-icons:     true !default;\n$enable-negative-margins:     false !default;\n$enable-deprecation-messages: true !default;\n$enable-important-utilities:  true !default;\n\n// Prefix for :root CSS variables\n\n$variable-prefix:             bs- !default; // Deprecated in v5.2.0 for the shorter `$prefix`\n$prefix:                      $variable-prefix !default;\n\n// Gradient\n//\n// The gradient which is added to components if `$enable-gradients` is `true`\n// This gradient is also added to elements with `.bg-gradient`\n// scss-docs-start variable-gradient\n$gradient: linear-gradient(180deg, rgba($white, .15), rgba($white, 0)) !default;\n// scss-docs-end variable-gradient\n\n// Spacing\n//\n// Control the default styling of most Bootstrap elements by modifying these\n// variables. Mostly focused on spacing.\n// You can add more entries to the $spacers map, should you need more variation.\n\n// scss-docs-start spacer-variables-maps\n$spacer: 1rem !default;\n$spacers: (\n  0: 0,\n  1: $spacer * .25,\n  2: $spacer * .5,\n  3: $spacer,\n  4: $spacer * 1.5,\n  5: $spacer * 3,\n) !default;\n// scss-docs-end spacer-variables-maps\n\n// Position\n//\n// Define the edge positioning anchors of the position utilities.\n\n// scss-docs-start position-map\n$position-values: (\n  0: 0,\n  50: 50%,\n  100: 100%\n) !default;\n// scss-docs-end position-map\n\n// Body\n//\n// Settings for the `<body>` element.\n\n$body-bg:                   $white !default;\n$body-color:                $gray-900 !default;\n$body-text-align:           null !default;\n\n// Links\n//\n// Style anchor elements.\n\n$link-color:                              $primary !default;\n$link-decoration:                         underline !default;\n$link-shade-percentage:                   20% !default;\n$link-hover-color:                        shift-color($link-color, $link-shade-percentage) !default;\n$link-hover-decoration:                   null !default;\n\n$stretched-link-pseudo-element:           after !default;\n$stretched-link-z-index:                  1 !default;\n\n// Paragraphs\n//\n// Style p element.\n\n$paragraph-margin-bottom:   1rem !default;\n\n\n// Grid breakpoints\n//\n// Define the minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries.\n\n// scss-docs-start grid-breakpoints\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px,\n  xxl: 1400px\n) !default;\n// scss-docs-end grid-breakpoints\n\n@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");\n@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");\n\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n// scss-docs-start container-max-widths\n$container-max-widths: (\n  sm: 540px,\n  md: 720px,\n  lg: 960px,\n  xl: 1140px,\n  xxl: 1320px\n) !default;\n// scss-docs-end container-max-widths\n\n@include _assert-ascending($container-max-widths, "$container-max-widths");\n\n\n// Grid columns\n//\n// Set the number of columns and specify the width of the gutters.\n\n$grid-columns:                12 !default;\n$grid-gutter-width:           1.5rem !default;\n$grid-row-columns:            6 !default;\n\n// Container padding\n\n$container-padding-x: $grid-gutter-width !default;\n\n\n// Components\n//\n// Define common padding and border radius sizes and more.\n\n// scss-docs-start border-variables\n$border-width:                1px !default;\n$border-widths: (\n  1: 1px,\n  2: 2px,\n  3: 3px,\n  4: 4px,\n  5: 5px\n) !default;\n\n$border-style:                solid !default;\n$border-color:                $gray-300 !default;\n$border-color-translucent:    rgba($black, .175) !default;\n// scss-docs-end border-variables\n\n// scss-docs-start border-radius-variables\n$border-radius:               .375rem !default;\n$border-radius-sm:            .25rem !default;\n$border-radius-lg:            .5rem !default;\n$border-radius-xl:            1rem !default;\n$border-radius-2xl:           2rem !default;\n$border-radius-pill:          50rem !default;\n// scss-docs-end border-radius-variables\n\n// scss-docs-start box-shadow-variables\n$box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;\n$box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;\n$box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;\n$box-shadow-inset:            inset 0 1px 2px rgba($black, .075) !default;\n// scss-docs-end box-shadow-variables\n\n$component-active-color:      $white !default;\n$component-active-bg:         $primary !default;\n\n// scss-docs-start caret-variables\n$caret-width:                 .3em !default;\n$caret-vertical-align:        $caret-width * .85 !default;\n$caret-spacing:               $caret-width * .85 !default;\n// scss-docs-end caret-variables\n\n$transition-base:             all .2s ease-in-out !default;\n$transition-fade:             opacity .15s linear !default;\n// scss-docs-start collapse-transition\n$transition-collapse:         height .35s ease !default;\n$transition-collapse-width:   width .35s ease !default;\n// scss-docs-end collapse-transition\n\n// stylelint-disable function-disallowed-list\n// scss-docs-start aspect-ratios\n$aspect-ratios: (\n  "1x1": 100%,\n  "4x3": calc(3 / 4 * 100%),\n  "16x9": calc(9 / 16 * 100%),\n  "21x9": calc(9 / 21 * 100%)\n) !default;\n// scss-docs-end aspect-ratios\n// stylelint-enable function-disallowed-list\n\n// Typography\n//\n// Font, line-height, and color for body text, headings, and more.\n\n// scss-docs-start font-variables\n// stylelint-disable value-keyword-case\n$font-family-sans-serif:      system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;\n$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;\n// stylelint-enable value-keyword-case\n$font-family-base:            var(--#{$prefix}font-sans-serif) !default;\n$font-family-code:            var(--#{$prefix}font-monospace) !default;\n\n// $font-size-root affects the value of `rem`, which is used for as well font sizes, paddings, and margins\n// $font-size-base affects the font size of the body text\n$font-size-root:              null !default;\n$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`\n$font-size-sm:                $font-size-base * .875 !default;\n$font-size-lg:                $font-size-base * 1.25 !default;\n\n$font-weight-lighter:         lighter !default;\n$font-weight-light:           300 !default;\n$font-weight-normal:          400 !default;\n$font-weight-semibold:        600 !default;\n$font-weight-bold:            700 !default;\n$font-weight-bolder:          bolder !default;\n\n$font-weight-base:            $font-weight-normal !default;\n\n$line-height-base:            1.5 !default;\n$line-height-sm:              1.25 !default;\n$line-height-lg:              2 !default;\n\n$h1-font-size:                $font-size-base * 2.5 !default;\n$h2-font-size:                $font-size-base * 2 !default;\n$h3-font-size:                $font-size-base * 1.75 !default;\n$h4-font-size:                $font-size-base * 1.5 !default;\n$h5-font-size:                $font-size-base * 1.25 !default;\n$h6-font-size:                $font-size-base !default;\n// scss-docs-end font-variables\n\n// scss-docs-start font-sizes\n$font-sizes: (\n  1: $h1-font-size,\n  2: $h2-font-size,\n  3: $h3-font-size,\n  4: $h4-font-size,\n  5: $h5-font-size,\n  6: $h6-font-size\n) !default;\n// scss-docs-end font-sizes\n\n// scss-docs-start headings-variables\n$headings-margin-bottom:      $spacer * .5 !default;\n$headings-font-family:        null !default;\n$headings-font-style:         null !default;\n$headings-font-weight:        500 !default;\n$headings-line-height:        1.2 !default;\n$headings-color:              null !default;\n// scss-docs-end headings-variables\n\n// scss-docs-start display-headings\n$display-font-sizes: (\n  1: 5rem,\n  2: 4.5rem,\n  3: 4rem,\n  4: 3.5rem,\n  5: 3rem,\n  6: 2.5rem\n) !default;\n\n$display-font-family: null !default;\n$display-font-style:  null !default;\n$display-font-weight: 300 !default;\n$display-line-height: $headings-line-height !default;\n// scss-docs-end display-headings\n\n// scss-docs-start type-variables\n$lead-font-size:              $font-size-base * 1.25 !default;\n$lead-font-weight:            300 !default;\n\n$small-font-size:             .875em !default;\n\n$sub-sup-font-size:           .75em !default;\n\n$text-muted:                  $gray-600 !default;\n\n$initialism-font-size:        $small-font-size !default;\n\n$blockquote-margin-y:         $spacer !default;\n$blockquote-font-size:        $font-size-base * 1.25 !default;\n$blockquote-footer-color:     $gray-600 !default;\n$blockquote-footer-font-size: $small-font-size !default;\n\n$hr-margin-y:                 $spacer !default;\n$hr-color:                    inherit !default;\n\n// fusv-disable\n$hr-bg-color:                 null !default; // Deprecated in v5.2.0\n$hr-height:                   null !default; // Deprecated in v5.2.0\n// fusv-enable\n\n$hr-border-color:             null !default; // Allows for inherited colors\n$hr-border-width:             $border-width !default;\n$hr-opacity:                  .25 !default;\n\n$legend-margin-bottom:        .5rem !default;\n$legend-font-size:            1.5rem !default;\n$legend-font-weight:          null !default;\n\n$dt-font-weight:              $font-weight-bold !default;\n\n$list-inline-padding:         .5rem !default;\n\n$mark-padding:                .1875em !default;\n$mark-bg:                     $yellow-100 !default;\n// scss-docs-end type-variables\n\n\n// Tables\n//\n// Customizes the `.table` component with basic values, each used across all table variations.\n\n// scss-docs-start table-variables\n$table-cell-padding-y:        .5rem !default;\n$table-cell-padding-x:        .5rem !default;\n$table-cell-padding-y-sm:     .25rem !default;\n$table-cell-padding-x-sm:     .25rem !default;\n\n$table-cell-vertical-align:   top !default;\n\n$table-color:                 var(--#{$prefix}body-color) !default;\n$table-bg:                    transparent !default;\n$table-accent-bg:             transparent !default;\n\n$table-th-font-weight:        null !default;\n\n$table-striped-color:         $table-color !default;\n$table-striped-bg-factor:     .05 !default;\n$table-striped-bg:            rgba($black, $table-striped-bg-factor) !default;\n\n$table-active-color:          $table-color !default;\n$table-active-bg-factor:      .1 !default;\n$table-active-bg:             rgba($black, $table-active-bg-factor) !default;\n\n$table-hover-color:           $table-color !default;\n$table-hover-bg-factor:       .075 !default;\n$table-hover-bg:              rgba($black, $table-hover-bg-factor) !default;\n\n$table-border-factor:         .1 !default;\n$table-border-width:          $border-width !default;\n$table-border-color:          var(--#{$prefix}border-color) !default;\n\n$table-striped-order:         odd !default;\n$table-striped-columns-order: even !default;\n\n$table-group-separator-color: currentcolor !default;\n\n$table-caption-color:         $text-muted !default;\n\n$table-bg-scale:              -80% !default;\n// scss-docs-end table-variables\n\n// scss-docs-start table-loop\n$table-variants: (\n  "primary":    shift-color($primary, $table-bg-scale),\n  "secondary":  shift-color($secondary, $table-bg-scale),\n  "success":    shift-color($success, $table-bg-scale),\n  "info":       shift-color($info, $table-bg-scale),\n  "warning":    shift-color($warning, $table-bg-scale),\n  "danger":     shift-color($danger, $table-bg-scale),\n  "light":      $light,\n  "dark":       $dark,\n) !default;\n// scss-docs-end table-loop\n\n\n// Buttons + Forms\n//\n// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.\n\n// scss-docs-start input-btn-variables\n$input-btn-padding-y:         .375rem !default;\n$input-btn-padding-x:         .75rem !default;\n$input-btn-font-family:       null !default;\n$input-btn-font-size:         $font-size-base !default;\n$input-btn-line-height:       $line-height-base !default;\n\n$input-btn-focus-width:         .25rem !default;\n$input-btn-focus-color-opacity: .25 !default;\n$input-btn-focus-color:         rgba($component-active-bg, $input-btn-focus-color-opacity) !default;\n$input-btn-focus-blur:          0 !default;\n$input-btn-focus-box-shadow:    0 0 $input-btn-focus-blur $input-btn-focus-width $input-btn-focus-color !default;\n\n$input-btn-padding-y-sm:      .25rem !default;\n$input-btn-padding-x-sm:      .5rem !default;\n$input-btn-font-size-sm:      $font-size-sm !default;\n\n$input-btn-padding-y-lg:      .5rem !default;\n$input-btn-padding-x-lg:      1rem !default;\n$input-btn-font-size-lg:      $font-size-lg !default;\n\n$input-btn-border-width:      $border-width !default;\n// scss-docs-end input-btn-variables\n\n\n// Buttons\n//\n// For each of Bootstrap\'s buttons, define text, background, and border color.\n\n// scss-docs-start btn-variables\n$btn-padding-y:               $input-btn-padding-y !default;\n$btn-padding-x:               $input-btn-padding-x !default;\n$btn-font-family:             $input-btn-font-family !default;\n$btn-font-size:               $input-btn-font-size !default;\n$btn-line-height:             $input-btn-line-height !default;\n$btn-white-space:             null !default; // Set to `nowrap` to prevent text wrapping\n\n$btn-padding-y-sm:            $input-btn-padding-y-sm !default;\n$btn-padding-x-sm:            $input-btn-padding-x-sm !default;\n$btn-font-size-sm:            $input-btn-font-size-sm !default;\n\n$btn-padding-y-lg:            $input-btn-padding-y-lg !default;\n$btn-padding-x-lg:            $input-btn-padding-x-lg !default;\n$btn-font-size-lg:            $input-btn-font-size-lg !default;\n\n$btn-border-width:            $input-btn-border-width !default;\n\n$btn-font-weight:             $font-weight-normal !default;\n$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;\n$btn-focus-width:             $input-btn-focus-width !default;\n$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;\n$btn-disabled-opacity:        .65 !default;\n$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;\n\n$btn-link-color:              var(--#{$prefix}link-color) !default;\n$btn-link-hover-color:        var(--#{$prefix}link-hover-color) !default;\n$btn-link-disabled-color:     $gray-600 !default;\n\n// Allows for customizing button radius independently from global border radius\n$btn-border-radius:           $border-radius !default;\n$btn-border-radius-sm:        $border-radius-sm !default;\n$btn-border-radius-lg:        $border-radius-lg !default;\n\n$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n$btn-hover-bg-shade-amount:       15% !default;\n$btn-hover-bg-tint-amount:        15% !default;\n$btn-hover-border-shade-amount:   20% !default;\n$btn-hover-border-tint-amount:    10% !default;\n$btn-active-bg-shade-amount:      20% !default;\n$btn-active-bg-tint-amount:       20% !default;\n$btn-active-border-shade-amount:  25% !default;\n$btn-active-border-tint-amount:   10% !default;\n// scss-docs-end btn-variables\n\n\n// Forms\n\n// scss-docs-start form-text-variables\n$form-text-margin-top:                  .25rem !default;\n$form-text-font-size:                   $small-font-size !default;\n$form-text-font-style:                  null !default;\n$form-text-font-weight:                 null !default;\n$form-text-color:                       $text-muted !default;\n// scss-docs-end form-text-variables\n\n// scss-docs-start form-label-variables\n$form-label-margin-bottom:              .5rem !default;\n$form-label-font-size:                  null !default;\n$form-label-font-style:                 null !default;\n$form-label-font-weight:                null !default;\n$form-label-color:                      null !default;\n// scss-docs-end form-label-variables\n\n// scss-docs-start form-input-variables\n$input-padding-y:                       $input-btn-padding-y !default;\n$input-padding-x:                       $input-btn-padding-x !default;\n$input-font-family:                     $input-btn-font-family !default;\n$input-font-size:                       $input-btn-font-size !default;\n$input-font-weight:                     $font-weight-base !default;\n$input-line-height:                     $input-btn-line-height !default;\n\n$input-padding-y-sm:                    $input-btn-padding-y-sm !default;\n$input-padding-x-sm:                    $input-btn-padding-x-sm !default;\n$input-font-size-sm:                    $input-btn-font-size-sm !default;\n\n$input-padding-y-lg:                    $input-btn-padding-y-lg !default;\n$input-padding-x-lg:                    $input-btn-padding-x-lg !default;\n$input-font-size-lg:                    $input-btn-font-size-lg !default;\n\n$input-bg:                              $body-bg !default;\n$input-disabled-color:                  null !default;\n$input-disabled-bg:                     $gray-200 !default;\n$input-disabled-border-color:           null !default;\n\n$input-color:                           $body-color !default;\n$input-border-color:                    $gray-400 !default;\n$input-border-width:                    $input-btn-border-width !default;\n$input-box-shadow:                      $box-shadow-inset !default;\n\n$input-border-radius:                   $border-radius !default;\n$input-border-radius-sm:                $border-radius-sm !default;\n$input-border-radius-lg:                $border-radius-lg !default;\n\n$input-focus-bg:                        $input-bg !default;\n$input-focus-border-color:              tint-color($component-active-bg, 50%) !default;\n$input-focus-color:                     $input-color !default;\n$input-focus-width:                     $input-btn-focus-width !default;\n$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;\n\n$input-placeholder-color:               $gray-600 !default;\n$input-plaintext-color:                 $body-color !default;\n\n$input-height-border:                   $input-border-width * 2 !default;\n\n$input-height-inner:                    add($input-line-height * 1em, $input-padding-y * 2) !default;\n$input-height-inner-half:               add($input-line-height * .5em, $input-padding-y) !default;\n$input-height-inner-quarter:            add($input-line-height * .25em, $input-padding-y * .5) !default;\n\n$input-height:                          add($input-line-height * 1em, add($input-padding-y * 2, $input-height-border, false)) !default;\n$input-height-sm:                       add($input-line-height * 1em, add($input-padding-y-sm * 2, $input-height-border, false)) !default;\n$input-height-lg:                       add($input-line-height * 1em, add($input-padding-y-lg * 2, $input-height-border, false)) !default;\n\n$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n$form-color-width:                      3rem !default;\n// scss-docs-end form-input-variables\n\n// scss-docs-start form-check-variables\n$form-check-input-width:                  1em !default;\n$form-check-min-height:                   $font-size-base * $line-height-base !default;\n$form-check-padding-start:                $form-check-input-width + .5em !default;\n$form-check-margin-bottom:                .125rem !default;\n$form-check-label-color:                  null !default;\n$form-check-label-cursor:                 null !default;\n$form-check-transition:                   null !default;\n\n$form-check-input-active-filter:          brightness(90%) !default;\n\n$form-check-input-bg:                     $input-bg !default;\n$form-check-input-border:                 1px solid rgba($black, .25) !default;\n$form-check-input-border-radius:          .25em !default;\n$form-check-radio-border-radius:          50% !default;\n$form-check-input-focus-border:           $input-focus-border-color !default;\n$form-check-input-focus-box-shadow:       $input-btn-focus-box-shadow !default;\n\n$form-check-input-checked-color:          $component-active-color !default;\n$form-check-input-checked-bg-color:       $component-active-bg !default;\n$form-check-input-checked-border-color:   $form-check-input-checked-bg-color !default;\n$form-check-input-checked-bg-image:       url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'><path fill=\'none\' stroke=\'#{$form-check-input-checked-color}\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'m6 10 3 3 6-6\'/></svg>") !default;\n$form-check-radio-checked-bg-image:       url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'2\' fill=\'#{$form-check-input-checked-color}\'/></svg>") !default;\n\n$form-check-input-indeterminate-color:          $component-active-color !default;\n$form-check-input-indeterminate-bg-color:       $component-active-bg !default;\n$form-check-input-indeterminate-border-color:   $form-check-input-indeterminate-bg-color !default;\n$form-check-input-indeterminate-bg-image:       url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'><path fill=\'none\' stroke=\'#{$form-check-input-indeterminate-color}\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10h8\'/></svg>") !default;\n\n$form-check-input-disabled-opacity:        .5 !default;\n$form-check-label-disabled-opacity:        $form-check-input-disabled-opacity !default;\n$form-check-btn-check-disabled-opacity:    $btn-disabled-opacity !default;\n\n$form-check-inline-margin-end:    1rem !default;\n// scss-docs-end form-check-variables\n\n// scss-docs-start form-switch-variables\n$form-switch-color:               rgba($black, .25) !default;\n$form-switch-width:               2em !default;\n$form-switch-padding-start:       $form-switch-width + .5em !default;\n$form-switch-bg-image:            url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'3\' fill=\'#{$form-switch-color}\'/></svg>") !default;\n$form-switch-border-radius:       $form-switch-width !default;\n$form-switch-transition:          background-position .15s ease-in-out !default;\n\n$form-switch-focus-color:         $input-focus-border-color !default;\n$form-switch-focus-bg-image:      url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'3\' fill=\'#{$form-switch-focus-color}\'/></svg>") !default;\n\n$form-switch-checked-color:       $component-active-color !default;\n$form-switch-checked-bg-image:    url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'3\' fill=\'#{$form-switch-checked-color}\'/></svg>") !default;\n$form-switch-checked-bg-position: right center !default;\n// scss-docs-end form-switch-variables\n\n// scss-docs-start input-group-variables\n$input-group-addon-padding-y:           $input-padding-y !default;\n$input-group-addon-padding-x:           $input-padding-x !default;\n$input-group-addon-font-weight:         $input-font-weight !default;\n$input-group-addon-color:               $input-color !default;\n$input-group-addon-bg:                  $gray-200 !default;\n$input-group-addon-border-color:        $input-border-color !default;\n// scss-docs-end input-group-variables\n\n// scss-docs-start form-select-variables\n$form-select-padding-y:             $input-padding-y !default;\n$form-select-padding-x:             $input-padding-x !default;\n$form-select-font-family:           $input-font-family !default;\n$form-select-font-size:             $input-font-size !default;\n$form-select-indicator-padding:     $form-select-padding-x * 3 !default; // Extra padding for background-image\n$form-select-font-weight:           $input-font-weight !default;\n$form-select-line-height:           $input-line-height !default;\n$form-select-color:                 $input-color !default;\n$form-select-bg:                    $input-bg !default;\n$form-select-disabled-color:        null !default;\n$form-select-disabled-bg:           $gray-200 !default;\n$form-select-disabled-border-color: $input-disabled-border-color !default;\n$form-select-bg-position:           right $form-select-padding-x center !default;\n$form-select-bg-size:               16px 12px !default; // In pixels because image dimensions\n$form-select-indicator-color:       $gray-800 !default;\n$form-select-indicator:             url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'><path fill=\'none\' stroke=\'#{$form-select-indicator-color}\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'m2 5 6 6 6-6\'/></svg>") !default;\n\n$form-select-feedback-icon-padding-end: $form-select-padding-x * 2.5 + $form-select-indicator-padding !default;\n$form-select-feedback-icon-position:    center right $form-select-indicator-padding !default;\n$form-select-feedback-icon-size:        $input-height-inner-half $input-height-inner-half !default;\n\n$form-select-border-width:        $input-border-width !default;\n$form-select-border-color:        $input-border-color !default;\n$form-select-border-radius:       $input-border-radius !default;\n$form-select-box-shadow:          $box-shadow-inset !default;\n\n$form-select-focus-border-color:  $input-focus-border-color !default;\n$form-select-focus-width:         $input-focus-width !default;\n$form-select-focus-box-shadow:    0 0 0 $form-select-focus-width $input-btn-focus-color !default;\n\n$form-select-padding-y-sm:        $input-padding-y-sm !default;\n$form-select-padding-x-sm:        $input-padding-x-sm !default;\n$form-select-font-size-sm:        $input-font-size-sm !default;\n$form-select-border-radius-sm:    $input-border-radius-sm !default;\n\n$form-select-padding-y-lg:        $input-padding-y-lg !default;\n$form-select-padding-x-lg:        $input-padding-x-lg !default;\n$form-select-font-size-lg:        $input-font-size-lg !default;\n$form-select-border-radius-lg:    $input-border-radius-lg !default;\n\n$form-select-transition:          $input-transition !default;\n// scss-docs-end form-select-variables\n\n// scss-docs-start form-range-variables\n$form-range-track-width:          100% !default;\n$form-range-track-height:         .5rem !default;\n$form-range-track-cursor:         pointer !default;\n$form-range-track-bg:             $gray-300 !default;\n$form-range-track-border-radius:  1rem !default;\n$form-range-track-box-shadow:     $box-shadow-inset !default;\n\n$form-range-thumb-width:                   1rem !default;\n$form-range-thumb-height:                  $form-range-thumb-width !default;\n$form-range-thumb-bg:                      $component-active-bg !default;\n$form-range-thumb-border:                  0 !default;\n$form-range-thumb-border-radius:           1rem !default;\n$form-range-thumb-box-shadow:              0 .1rem .25rem rgba($black, .1) !default;\n$form-range-thumb-focus-box-shadow:        0 0 0 1px $body-bg, $input-focus-box-shadow !default;\n$form-range-thumb-focus-box-shadow-width:  $input-focus-width !default; // For focus box shadow issue in Edge\n$form-range-thumb-active-bg:               tint-color($component-active-bg, 70%) !default;\n$form-range-thumb-disabled-bg:             $gray-500 !default;\n$form-range-thumb-transition:              background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n// scss-docs-end form-range-variables\n\n// scss-docs-start form-file-variables\n$form-file-button-color:          $input-color !default;\n$form-file-button-bg:             $input-group-addon-bg !default;\n$form-file-button-hover-bg:       shade-color($form-file-button-bg, 5%) !default;\n// scss-docs-end form-file-variables\n\n// scss-docs-start form-floating-variables\n$form-floating-height:            add(3.5rem, $input-height-border) !default;\n$form-floating-line-height:       1.25 !default;\n$form-floating-padding-x:         $input-padding-x !default;\n$form-floating-padding-y:         1rem !default;\n$form-floating-input-padding-t:   1.625rem !default;\n$form-floating-input-padding-b:   .625rem !default;\n$form-floating-label-opacity:     .65 !default;\n$form-floating-label-transform:   scale(.85) translateY(-.5rem) translateX(.15rem) !default;\n$form-floating-transition:        opacity .1s ease-in-out, transform .1s ease-in-out !default;\n// scss-docs-end form-floating-variables\n\n// Form validation\n\n// scss-docs-start form-feedback-variables\n$form-feedback-margin-top:          $form-text-margin-top !default;\n$form-feedback-font-size:           $form-text-font-size !default;\n$form-feedback-font-style:          $form-text-font-style !default;\n$form-feedback-valid-color:         $success !default;\n$form-feedback-invalid-color:       $danger !default;\n\n$form-feedback-icon-valid-color:    $form-feedback-valid-color !default;\n$form-feedback-icon-valid:          url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'><path fill=\'#{$form-feedback-icon-valid-color}\' d=\'M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/></svg>") !default;\n$form-feedback-icon-invalid-color:  $form-feedback-invalid-color !default;\n$form-feedback-icon-invalid:        url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'#{$form-feedback-icon-invalid-color}\'><circle cx=\'6\' cy=\'6\' r=\'4.5\'/><path stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/><circle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'#{$form-feedback-icon-invalid-color}\' stroke=\'none\'/></svg>") !default;\n// scss-docs-end form-feedback-variables\n\n// scss-docs-start form-validation-states\n$form-validation-states: (\n  "valid": (\n    "color": $form-feedback-valid-color,\n    "icon": $form-feedback-icon-valid\n  ),\n  "invalid": (\n    "color": $form-feedback-invalid-color,\n    "icon": $form-feedback-icon-invalid\n  )\n) !default;\n// scss-docs-end form-validation-states\n\n// Z-index master list\n//\n// Warning: Avoid customizing these values. They\'re used for a bird\'s eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n// scss-docs-start zindex-stack\n$zindex-dropdown:                   1000 !default;\n$zindex-sticky:                     1020 !default;\n$zindex-fixed:                      1030 !default;\n$zindex-offcanvas-backdrop:         1040 !default;\n$zindex-offcanvas:                  1045 !default;\n$zindex-modal-backdrop:             1050 !default;\n$zindex-modal:                      1055 !default;\n$zindex-popover:                    1070 !default;\n$zindex-tooltip:                    1080 !default;\n$zindex-toast:                      1090 !default;\n// scss-docs-end zindex-stack\n\n\n// Navs\n\n// scss-docs-start nav-variables\n$nav-link-padding-y:                .5rem !default;\n$nav-link-padding-x:                1rem !default;\n$nav-link-font-size:                null !default;\n$nav-link-font-weight:              null !default;\n$nav-link-color:                    var(--#{$prefix}link-color) !default;\n$nav-link-hover-color:              var(--#{$prefix}link-hover-color) !default;\n$nav-link-transition:               color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out !default;\n$nav-link-disabled-color:           $gray-600 !default;\n\n$nav-tabs-border-color:             $gray-300 !default;\n$nav-tabs-border-width:             $border-width !default;\n$nav-tabs-border-radius:            $border-radius !default;\n$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;\n$nav-tabs-link-active-color:        $gray-700 !default;\n$nav-tabs-link-active-bg:           $body-bg !default;\n$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;\n\n$nav-pills-border-radius:           $border-radius !default;\n$nav-pills-link-active-color:       $component-active-color !default;\n$nav-pills-link-active-bg:          $component-active-bg !default;\n// scss-docs-end nav-variables\n\n\n// Navbar\n\n// scss-docs-start navbar-variables\n$navbar-padding-y:                  $spacer * .5 !default;\n$navbar-padding-x:                  null !default;\n\n$navbar-nav-link-padding-x:         .5rem !default;\n\n$navbar-brand-font-size:            $font-size-lg !default;\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\n$nav-link-height:                   $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;\n$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;\n$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) * .5 !default;\n$navbar-brand-margin-end:           1rem !default;\n\n$navbar-toggler-padding-y:          .25rem !default;\n$navbar-toggler-padding-x:          .75rem !default;\n$navbar-toggler-font-size:          $font-size-lg !default;\n$navbar-toggler-border-radius:      $btn-border-radius !default;\n$navbar-toggler-focus-width:        $btn-focus-width !default;\n$navbar-toggler-transition:         box-shadow .15s ease-in-out !default;\n\n$navbar-light-color:                rgba($black, .55) !default;\n$navbar-light-hover-color:          rgba($black, .7) !default;\n$navbar-light-active-color:         rgba($black, .9) !default;\n$navbar-light-disabled-color:       rgba($black, .3) !default;\n$navbar-light-toggler-icon-bg:      url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'><path stroke=\'#{$navbar-light-color}\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/></svg>") !default;\n$navbar-light-toggler-border-color: rgba($black, .1) !default;\n$navbar-light-brand-color:          $navbar-light-active-color !default;\n$navbar-light-brand-hover-color:    $navbar-light-active-color !default;\n// scss-docs-end navbar-variables\n\n// scss-docs-start navbar-dark-variables\n$navbar-dark-color:                 rgba($white, .55) !default;\n$navbar-dark-hover-color:           rgba($white, .75) !default;\n$navbar-dark-active-color:          $white !default;\n$navbar-dark-disabled-color:        rgba($white, .25) !default;\n$navbar-dark-toggler-icon-bg:       url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'><path stroke=\'#{$navbar-dark-color}\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/></svg>") !default;\n$navbar-dark-toggler-border-color:  rgba($white, .1) !default;\n$navbar-dark-brand-color:           $navbar-dark-active-color !default;\n$navbar-dark-brand-hover-color:     $navbar-dark-active-color !default;\n// scss-docs-end navbar-dark-variables\n\n\n// Dropdowns\n//\n// Dropdown menu container and contents.\n\n// scss-docs-start dropdown-variables\n$dropdown-min-width:                10rem !default;\n$dropdown-padding-x:                0 !default;\n$dropdown-padding-y:                .5rem !default;\n$dropdown-spacer:                   .125rem !default;\n$dropdown-font-size:                $font-size-base !default;\n$dropdown-color:                    $body-color !default;\n$dropdown-bg:                       $white !default;\n$dropdown-border-color:             var(--#{$prefix}border-color-translucent) !default;\n$dropdown-border-radius:            $border-radius !default;\n$dropdown-border-width:             $border-width !default;\n$dropdown-inner-border-radius:      subtract($dropdown-border-radius, $dropdown-border-width) !default;\n$dropdown-divider-bg:               $dropdown-border-color !default;\n$dropdown-divider-margin-y:         $spacer * .5 !default;\n$dropdown-box-shadow:               $box-shadow !default;\n\n$dropdown-link-color:               $gray-900 !default;\n$dropdown-link-hover-color:         shade-color($dropdown-link-color, 10%) !default;\n$dropdown-link-hover-bg:            $gray-200 !default;\n\n$dropdown-link-active-color:        $component-active-color !default;\n$dropdown-link-active-bg:           $component-active-bg !default;\n\n$dropdown-link-disabled-color:      $gray-500 !default;\n\n$dropdown-item-padding-y:           $spacer * .25 !default;\n$dropdown-item-padding-x:           $spacer !default;\n\n$dropdown-header-color:             $gray-600 !default;\n$dropdown-header-padding-x:         $dropdown-item-padding-x !default;\n$dropdown-header-padding-y:         $dropdown-padding-y !default;\n// fusv-disable\n$dropdown-header-padding:           $dropdown-header-padding-y $dropdown-header-padding-x !default; // Deprecated in v5.2.0\n// fusv-enable\n// scss-docs-end dropdown-variables\n\n// scss-docs-start dropdown-dark-variables\n$dropdown-dark-color:               $gray-300 !default;\n$dropdown-dark-bg:                  $gray-800 !default;\n$dropdown-dark-border-color:        $dropdown-border-color !default;\n$dropdown-dark-divider-bg:          $dropdown-divider-bg !default;\n$dropdown-dark-box-shadow:          null !default;\n$dropdown-dark-link-color:          $dropdown-dark-color !default;\n$dropdown-dark-link-hover-color:    $white !default;\n$dropdown-dark-link-hover-bg:       rgba($white, .15) !default;\n$dropdown-dark-link-active-color:   $dropdown-link-active-color !default;\n$dropdown-dark-link-active-bg:      $dropdown-link-active-bg !default;\n$dropdown-dark-link-disabled-color: $gray-500 !default;\n$dropdown-dark-header-color:        $gray-500 !default;\n// scss-docs-end dropdown-dark-variables\n\n\n// Pagination\n\n// scss-docs-start pagination-variables\n$pagination-padding-y:              .375rem !default;\n$pagination-padding-x:              .75rem !default;\n$pagination-padding-y-sm:           .25rem !default;\n$pagination-padding-x-sm:           .5rem !default;\n$pagination-padding-y-lg:           .75rem !default;\n$pagination-padding-x-lg:           1.5rem !default;\n\n$pagination-font-size:              $font-size-base !default;\n\n$pagination-color:                  var(--#{$prefix}link-color) !default;\n$pagination-bg:                     $white !default;\n$pagination-border-radius:          $border-radius !default;\n$pagination-border-width:           $border-width !default;\n$pagination-margin-start:           ($pagination-border-width * -1) !default;\n$pagination-border-color:           $gray-300 !default;\n\n$pagination-focus-color:            var(--#{$prefix}link-hover-color) !default;\n$pagination-focus-bg:               $gray-200 !default;\n$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;\n$pagination-focus-outline:          0 !default;\n\n$pagination-hover-color:            var(--#{$prefix}link-hover-color) !default;\n$pagination-hover-bg:               $gray-200 !default;\n$pagination-hover-border-color:     $gray-300 !default;\n\n$pagination-active-color:           $component-active-color !default;\n$pagination-active-bg:              $component-active-bg !default;\n$pagination-active-border-color:    $pagination-active-bg !default;\n\n$pagination-disabled-color:         $gray-600 !default;\n$pagination-disabled-bg:            $white !default;\n$pagination-disabled-border-color:  $gray-300 !default;\n\n$pagination-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n$pagination-border-radius-sm:       $border-radius-sm !default;\n$pagination-border-radius-lg:       $border-radius-lg !default;\n// scss-docs-end pagination-variables\n\n\n// Placeholders\n\n// scss-docs-start placeholders\n$placeholder-opacity-max:           .5 !default;\n$placeholder-opacity-min:           .2 !default;\n// scss-docs-end placeholders\n\n// Cards\n\n// scss-docs-start card-variables\n$card-spacer-y:                     $spacer !default;\n$card-spacer-x:                     $spacer !default;\n$card-title-spacer-y:               $spacer * .5 !default;\n$card-border-width:                 $border-width !default;\n$card-border-color:                 var(--#{$prefix}border-color-translucent) !default;\n$card-border-radius:                $border-radius !default;\n$card-box-shadow:                   null !default;\n$card-inner-border-radius:          subtract($card-border-radius, $card-border-width) !default;\n$card-cap-padding-y:                $card-spacer-y * .5 !default;\n$card-cap-padding-x:                $card-spacer-x !default;\n$card-cap-bg:                       rgba($black, .03) !default;\n$card-cap-color:                    null !default;\n$card-height:                       null !default;\n$card-color:                        null !default;\n$card-bg:                           $white !default;\n$card-img-overlay-padding:          $spacer !default;\n$card-group-margin:                 $grid-gutter-width * .5 !default;\n// scss-docs-end card-variables\n\n// Accordion\n\n// scss-docs-start accordion-variables\n$accordion-padding-y:                     1rem !default;\n$accordion-padding-x:                     1.25rem !default;\n$accordion-color:                         $body-color !default; // Sass variable because of $accordion-button-icon\n$accordion-bg:                            $body-bg !default;\n$accordion-border-width:                  $border-width !default;\n$accordion-border-color:                  var(--#{$prefix}border-color) !default;\n$accordion-border-radius:                 $border-radius !default;\n$accordion-inner-border-radius:           subtract($accordion-border-radius, $accordion-border-width) !default;\n\n$accordion-body-padding-y:                $accordion-padding-y !default;\n$accordion-body-padding-x:                $accordion-padding-x !default;\n\n$accordion-button-padding-y:              $accordion-padding-y !default;\n$accordion-button-padding-x:              $accordion-padding-x !default;\n$accordion-button-color:                  $accordion-color !default;\n$accordion-button-bg:                     var(--#{$prefix}accordion-bg) !default;\n$accordion-transition:                    $btn-transition, border-radius .15s ease !default;\n$accordion-button-active-bg:              tint-color($component-active-bg, 90%) !default;\n$accordion-button-active-color:           shade-color($primary, 10%) !default;\n\n$accordion-button-focus-border-color:     $input-focus-border-color !default;\n$accordion-button-focus-box-shadow:       $btn-focus-box-shadow !default;\n\n$accordion-icon-width:                    1.25rem !default;\n$accordion-icon-color:                    $accordion-button-color !default;\n$accordion-icon-active-color:             $accordion-button-active-color !default;\n$accordion-icon-transition:               transform .2s ease-in-out !default;\n$accordion-icon-transform:                rotate(-180deg) !default;\n\n$accordion-button-icon:         url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'#{$accordion-icon-color}\'><path fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/></svg>") !default;\n$accordion-button-active-icon:  url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'#{$accordion-icon-active-color}\'><path fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/></svg>") !default;\n// scss-docs-end accordion-variables\n\n// Tooltips\n\n// scss-docs-start tooltip-variables\n$tooltip-font-size:                 $font-size-sm !default;\n$tooltip-max-width:                 200px !default;\n$tooltip-color:                     $white !default;\n$tooltip-bg:                        $black !default;\n$tooltip-border-radius:             $border-radius !default;\n$tooltip-opacity:                   .9 !default;\n$tooltip-padding-y:                 $spacer * .25 !default;\n$tooltip-padding-x:                 $spacer * .5 !default;\n$tooltip-margin:                    null !default; // TODO: remove this in v6\n\n$tooltip-arrow-width:               .8rem !default;\n$tooltip-arrow-height:              .4rem !default;\n// fusv-disable\n$tooltip-arrow-color:               null !default; // Deprecated in Bootstrap 5.2.0 for CSS variables\n// fusv-enable\n// scss-docs-end tooltip-variables\n\n// Form tooltips must come after regular tooltips\n// scss-docs-start tooltip-feedback-variables\n$form-feedback-tooltip-padding-y:     $tooltip-padding-y !default;\n$form-feedback-tooltip-padding-x:     $tooltip-padding-x !default;\n$form-feedback-tooltip-font-size:     $tooltip-font-size !default;\n$form-feedback-tooltip-line-height:   null !default;\n$form-feedback-tooltip-opacity:       $tooltip-opacity !default;\n$form-feedback-tooltip-border-radius: $tooltip-border-radius !default;\n// scss-docs-end tooltip-feedback-variables\n\n\n// Popovers\n\n// scss-docs-start popover-variables\n$popover-font-size:                 $font-size-sm !default;\n$popover-bg:                        $white !default;\n$popover-max-width:                 276px !default;\n$popover-border-width:              $border-width !default;\n$popover-border-color:              var(--#{$prefix}border-color-translucent) !default;\n$popover-border-radius:             $border-radius-lg !default;\n$popover-inner-border-radius:       subtract($popover-border-radius, $popover-border-width) !default;\n$popover-box-shadow:                $box-shadow !default;\n\n$popover-header-font-size:          $font-size-base !default;\n$popover-header-bg:                 shade-color($popover-bg, 6%) !default;\n$popover-header-color:              $headings-color !default;\n$popover-header-padding-y:          .5rem !default;\n$popover-header-padding-x:          $spacer !default;\n\n$popover-body-color:                $body-color !default;\n$popover-body-padding-y:            $spacer !default;\n$popover-body-padding-x:            $spacer !default;\n\n$popover-arrow-width:               1rem !default;\n$popover-arrow-height:              .5rem !default;\n// scss-docs-end popover-variables\n\n// fusv-disable\n// Deprecated in Bootstrap 5.2.0 for CSS variables\n$popover-arrow-color:               $popover-bg !default;\n$popover-arrow-outer-color:         var(--#{$prefix}border-color-translucent) !default;\n// fusv-enable\n\n\n// Toasts\n\n// scss-docs-start toast-variables\n$toast-max-width:                   350px !default;\n$toast-padding-x:                   .75rem !default;\n$toast-padding-y:                   .5rem !default;\n$toast-font-size:                   .875rem !default;\n$toast-color:                       null !default;\n$toast-background-color:            rgba($white, .85) !default;\n$toast-border-width:                $border-width !default;\n$toast-border-color:                var(--#{$prefix}border-color-translucent) !default;\n$toast-border-radius:               $border-radius !default;\n$toast-box-shadow:                  $box-shadow !default;\n$toast-spacing:                     $container-padding-x !default;\n\n$toast-header-color:                $gray-600 !default;\n$toast-header-background-color:     rgba($white, .85) !default;\n$toast-header-border-color:         rgba($black, .05) !default;\n// scss-docs-end toast-variables\n\n\n// Badges\n\n// scss-docs-start badge-variables\n$badge-font-size:                   .75em !default;\n$badge-font-weight:                 $font-weight-bold !default;\n$badge-color:                       $white !default;\n$badge-padding-y:                   .35em !default;\n$badge-padding-x:                   .65em !default;\n$badge-border-radius:               $border-radius !default;\n// scss-docs-end badge-variables\n\n\n// Modals\n\n// scss-docs-start modal-variables\n$modal-inner-padding:               $spacer !default;\n\n$modal-footer-margin-between:       .5rem !default;\n\n$modal-dialog-margin:               .5rem !default;\n$modal-dialog-margin-y-sm-up:       1.75rem !default;\n\n$modal-title-line-height:           $line-height-base !default;\n\n$modal-content-color:               null !default;\n$modal-content-bg:                  $white !default;\n$modal-content-border-color:        var(--#{$prefix}border-color-translucent) !default;\n$modal-content-border-width:        $border-width !default;\n$modal-content-border-radius:       $border-radius-lg !default;\n$modal-content-inner-border-radius: subtract($modal-content-border-radius, $modal-content-border-width) !default;\n$modal-content-box-shadow-xs:       $box-shadow-sm !default;\n$modal-content-box-shadow-sm-up:    $box-shadow !default;\n\n$modal-backdrop-bg:                 $black !default;\n$modal-backdrop-opacity:            .5 !default;\n\n$modal-header-border-color:         var(--#{$prefix}border-color) !default;\n$modal-header-border-width:         $modal-content-border-width !default;\n$modal-header-padding-y:            $modal-inner-padding !default;\n$modal-header-padding-x:            $modal-inner-padding !default;\n$modal-header-padding:              $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility\n\n$modal-footer-bg:                   null !default;\n$modal-footer-border-color:         $modal-header-border-color !default;\n$modal-footer-border-width:         $modal-header-border-width !default;\n\n$modal-sm:                          300px !default;\n$modal-md:                          500px !default;\n$modal-lg:                          800px !default;\n$modal-xl:                          1140px !default;\n\n$modal-fade-transform:              translate(0, -50px) !default;\n$modal-show-transform:              none !default;\n$modal-transition:                  transform .3s ease-out !default;\n$modal-scale-transform:             scale(1.02) !default;\n// scss-docs-end modal-variables\n\n\n// Alerts\n//\n// Define alert colors, border radius, and padding.\n\n// scss-docs-start alert-variables\n$alert-padding-y:               $spacer !default;\n$alert-padding-x:               $spacer !default;\n$alert-margin-bottom:           1rem !default;\n$alert-border-radius:           $border-radius !default;\n$alert-link-font-weight:        $font-weight-bold !default;\n$alert-border-width:            $border-width !default;\n$alert-bg-scale:                -80% !default;\n$alert-border-scale:            -70% !default;\n$alert-color-scale:             40% !default;\n$alert-dismissible-padding-r:   $alert-padding-x * 3 !default; // 3x covers width of x plus default padding on either side\n// scss-docs-end alert-variables\n\n\n// Progress bars\n\n// scss-docs-start progress-variables\n$progress-height:                   1rem !default;\n$progress-font-size:                $font-size-base * .75 !default;\n$progress-bg:                       $gray-200 !default;\n$progress-border-radius:            $border-radius !default;\n$progress-box-shadow:               $box-shadow-inset !default;\n$progress-bar-color:                $white !default;\n$progress-bar-bg:                   $primary !default;\n$progress-bar-animation-timing:     1s linear infinite !default;\n$progress-bar-transition:           width .6s ease !default;\n// scss-docs-end progress-variables\n\n\n// List group\n\n// scss-docs-start list-group-variables\n$list-group-color:                  $gray-900 !default;\n$list-group-bg:                     $white !default;\n$list-group-border-color:           rgba($black, .125) !default;\n$list-group-border-width:           $border-width !default;\n$list-group-border-radius:          $border-radius !default;\n\n$list-group-item-padding-y:         $spacer * .5 !default;\n$list-group-item-padding-x:         $spacer !default;\n$list-group-item-bg-scale:          -80% !default;\n$list-group-item-color-scale:       40% !default;\n\n$list-group-hover-bg:               $gray-100 !default;\n$list-group-active-color:           $component-active-color !default;\n$list-group-active-bg:              $component-active-bg !default;\n$list-group-active-border-color:    $list-group-active-bg !default;\n\n$list-group-disabled-color:         $gray-600 !default;\n$list-group-disabled-bg:            $list-group-bg !default;\n\n$list-group-action-color:           $gray-700 !default;\n$list-group-action-hover-color:     $list-group-action-color !default;\n\n$list-group-action-active-color:    $body-color !default;\n$list-group-action-active-bg:       $gray-200 !default;\n// scss-docs-end list-group-variables\n\n\n// Image thumbnails\n\n// scss-docs-start thumbnail-variables\n$thumbnail-padding:                 .25rem !default;\n$thumbnail-bg:                      $body-bg !default;\n$thumbnail-border-width:            $border-width !default;\n$thumbnail-border-color:            var(--#{$prefix}border-color) !default;\n$thumbnail-border-radius:           $border-radius !default;\n$thumbnail-box-shadow:              $box-shadow-sm !default;\n// scss-docs-end thumbnail-variables\n\n\n// Figures\n\n// scss-docs-start figure-variables\n$figure-caption-font-size:          $small-font-size !default;\n$figure-caption-color:              $gray-600 !default;\n// scss-docs-end figure-variables\n\n\n// Breadcrumbs\n\n// scss-docs-start breadcrumb-variables\n$breadcrumb-font-size:              null !default;\n$breadcrumb-padding-y:              0 !default;\n$breadcrumb-padding-x:              0 !default;\n$breadcrumb-item-padding-x:         .5rem !default;\n$breadcrumb-margin-bottom:          1rem !default;\n$breadcrumb-bg:                     null !default;\n$breadcrumb-divider-color:          $gray-600 !default;\n$breadcrumb-active-color:           $gray-600 !default;\n$breadcrumb-divider:                quote("/") !default;\n$breadcrumb-divider-flipped:        $breadcrumb-divider !default;\n$breadcrumb-border-radius:          null !default;\n// scss-docs-end breadcrumb-variables\n\n// Carousel\n\n// scss-docs-start carousel-variables\n$carousel-control-color:             $white !default;\n$carousel-control-width:             15% !default;\n$carousel-control-opacity:           .5 !default;\n$carousel-control-hover-opacity:     .9 !default;\n$carousel-control-transition:        opacity .15s ease !default;\n\n$carousel-indicator-width:           30px !default;\n$carousel-indicator-height:          3px !default;\n$carousel-indicator-hit-area-height: 10px !default;\n$carousel-indicator-spacer:          3px !default;\n$carousel-indicator-opacity:         .5 !default;\n$carousel-indicator-active-bg:       $white !default;\n$carousel-indicator-active-opacity:  1 !default;\n$carousel-indicator-transition:      opacity .6s ease !default;\n\n$carousel-caption-width:             70% !default;\n$carousel-caption-color:             $white !default;\n$carousel-caption-padding-y:         1.25rem !default;\n$carousel-caption-spacer:            1.25rem !default;\n\n$carousel-control-icon-width:        2rem !default;\n\n$carousel-control-prev-icon-bg:      url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'#{$carousel-control-color}\'><path d=\'M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\'/></svg>") !default;\n$carousel-control-next-icon-bg:      url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'#{$carousel-control-color}\'><path d=\'M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\'/></svg>") !default;\n\n$carousel-transition-duration:       .6s !default;\n$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)\n// scss-docs-end carousel-variables\n\n// scss-docs-start carousel-dark-variables\n$carousel-dark-indicator-active-bg:  $black !default;\n$carousel-dark-caption-color:        $black !default;\n$carousel-dark-control-icon-filter:  invert(1) grayscale(100) !default;\n// scss-docs-end carousel-dark-variables\n\n\n// Spinners\n\n// scss-docs-start spinner-variables\n$spinner-width:           2rem !default;\n$spinner-height:          $spinner-width !default;\n$spinner-vertical-align:  -.125em !default;\n$spinner-border-width:    .25em !default;\n$spinner-animation-speed: .75s !default;\n\n$spinner-width-sm:        1rem !default;\n$spinner-height-sm:       $spinner-width-sm !default;\n$spinner-border-width-sm: .2em !default;\n// scss-docs-end spinner-variables\n\n\n// Close\n\n// scss-docs-start close-variables\n$btn-close-width:            1em !default;\n$btn-close-height:           $btn-close-width !default;\n$btn-close-padding-x:        .25em !default;\n$btn-close-padding-y:        $btn-close-padding-x !default;\n$btn-close-color:            $black !default;\n$btn-close-bg:               url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'#{$btn-close-color}\'><path d=\'M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z\'/></svg>") !default;\n$btn-close-focus-shadow:     $input-btn-focus-box-shadow !default;\n$btn-close-opacity:          .5 !default;\n$btn-close-hover-opacity:    .75 !default;\n$btn-close-focus-opacity:    1 !default;\n$btn-close-disabled-opacity: .25 !default;\n$btn-close-white-filter:     invert(1) grayscale(100%) brightness(200%) !default;\n// scss-docs-end close-variables\n\n\n// Offcanvas\n\n// scss-docs-start offcanvas-variables\n$offcanvas-padding-y:               $modal-inner-padding !default;\n$offcanvas-padding-x:               $modal-inner-padding !default;\n$offcanvas-horizontal-width:        400px !default;\n$offcanvas-vertical-height:         30vh !default;\n$offcanvas-transition-duration:     .3s !default;\n$offcanvas-border-color:            $modal-content-border-color !default;\n$offcanvas-border-width:            $modal-content-border-width !default;\n$offcanvas-title-line-height:       $modal-title-line-height !default;\n$offcanvas-bg-color:                $modal-content-bg !default;\n$offcanvas-color:                   $modal-content-color !default;\n$offcanvas-box-shadow:              $modal-content-box-shadow-xs !default;\n$offcanvas-backdrop-bg:             $modal-backdrop-bg !default;\n$offcanvas-backdrop-opacity:        $modal-backdrop-opacity !default;\n// scss-docs-end offcanvas-variables\n\n// Code\n\n$code-font-size:                    $small-font-size !default;\n$code-color:                        $pink !default;\n\n$kbd-padding-y:                     .1875rem !default;\n$kbd-padding-x:                     .375rem !default;\n$kbd-font-size:                     $code-font-size !default;\n$kbd-color:                         var(--#{$prefix}body-bg) !default;\n$kbd-bg:                            var(--#{$prefix}body-color) !default;\n$nested-kbd-font-weight:            null !default; // Deprecated in v5.2.0, removing in v6\n\n$pre-color:                         null !default;\n',"// stylelint-disable property-disallowed-list\n// Single side border-radius\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n// scss-docs-start border-radius-mixins\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n// scss-docs-end border-radius-mixins\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-container-classes {\n  // Single container class with breakpoint max-widths\n  .container,\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  // Responsive containers that are 100% wide until a breakpoint\n  @each $breakpoint, $container-max-width in $container-max-widths {\n    .container-#{$breakpoint} {\n      @extend .container-fluid;\n    }\n\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n      %responsive-container-#{$breakpoint} {\n        max-width: $container-max-width;\n      }\n\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\n      $extend-breakpoint: true;\n\n      @each $name, $width in $grid-breakpoints {\n        @if ($extend-breakpoint) {\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\n            @extend %responsive-container-#{$breakpoint};\n          }\n\n          // Once the current breakpoint is reached, stop extending\n          @if ($breakpoint == $name) {\n            $extend-breakpoint: false;\n          }\n        }\n      }\n    }\n  }\n}\n","// Container mixins\n\n@mixin make-container($gutter: $container-padding-x) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-right: auto;\n  margin-left: auto;\n}\n",'// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    ""  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    "-sm"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint\'s minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n',"// Row\n//\n// Rows contain your columns.\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready() {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// number of columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: divide(100%, $count);\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is and invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","//\n// Basic Bootstrap table\n//\n\n.table {\n  --#{$prefix}table-color: #{$table-color};\n  --#{$prefix}table-bg: #{$table-bg};\n  --#{$prefix}table-border-color: #{$table-border-color};\n  --#{$prefix}table-accent-bg: #{$table-accent-bg};\n  --#{$prefix}table-striped-color: #{$table-striped-color};\n  --#{$prefix}table-striped-bg: #{$table-striped-bg};\n  --#{$prefix}table-active-color: #{$table-active-color};\n  --#{$prefix}table-active-bg: #{$table-active-bg};\n  --#{$prefix}table-hover-color: #{$table-hover-color};\n  --#{$prefix}table-hover-bg: #{$table-hover-bg};\n\n  width: 100%;\n  margin-bottom: $spacer;\n  color: var(--#{$prefix}table-color);\n  vertical-align: $table-cell-vertical-align;\n  border-color: var(--#{$prefix}table-border-color);\n\n  // Target th & td\n  // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.\n  // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).\n  // Another advantage is that this generates less code and makes the selector less specific making it easier to override.\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    padding: $table-cell-padding-y $table-cell-padding-x;\n    background-color: var(--#{$prefix}table-bg);\n    border-bottom-width: $table-border-width;\n    box-shadow: inset 0 0 0 9999px var(--#{$prefix}table-accent-bg);\n  }\n\n  > tbody {\n    vertical-align: inherit;\n  }\n\n  > thead {\n    vertical-align: bottom;\n  }\n}\n\n.table-group-divider {\n  border-top: ($table-border-width * 2) solid $table-group-separator-color;\n}\n\n//\n// Change placement of captions with a class\n//\n\n.caption-top {\n  caption-side: top;\n}\n\n\n//\n// Condensed table w/ half padding\n//\n\n.table-sm {\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;\n  }\n}\n\n\n// Border versions\n//\n// Add or remove borders all around the table and between all the columns.\n//\n// When borders are added on all sides of the cells, the corners can render odd when\n// these borders do not have the same color or if they are semi-transparent.\n// Therefor we add top and border bottoms to the `tr`s and left and right borders\n// to the `td`s or `th`s\n\n.table-bordered {\n  > :not(caption) > * {\n    border-width: $table-border-width 0;\n\n    // stylelint-disable-next-line selector-max-universal\n    > * {\n      border-width: 0 $table-border-width;\n    }\n  }\n}\n\n.table-borderless {\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    border-bottom-width: 0;\n  }\n\n  > :not(:first-child) {\n    border-top-width: 0;\n  }\n}\n\n// Zebra-striping\n//\n// Default zebra-stripe styles (alternating gray and transparent backgrounds)\n\n// For rows\n.table-striped {\n  > tbody > tr:nth-of-type(#{$table-striped-order}) > * {\n    --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);\n    color: var(--#{$prefix}table-striped-color);\n  }\n}\n\n// For columns\n.table-striped-columns {\n  > :not(caption) > tr > :nth-child(#{$table-striped-columns-order}) {\n    --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);\n    color: var(--#{$prefix}table-striped-color);\n  }\n}\n\n// Active table\n//\n// The `.table-active` class can be added to highlight rows or cells\n\n.table-active {\n  --#{$prefix}table-accent-bg: var(--#{$prefix}table-active-bg);\n  color: var(--#{$prefix}table-active-color);\n}\n\n// Hover effect\n//\n// Placed here since it has to come after the potential zebra striping\n\n.table-hover {\n  > tbody > tr:hover > * {\n    --#{$prefix}table-accent-bg: var(--#{$prefix}table-hover-bg);\n    color: var(--#{$prefix}table-hover-color);\n  }\n}\n\n\n// Table variants\n//\n// Table variants set the table cell backgrounds, border colors\n// and the colors of the striped, hovered & active tables\n\n@each $color, $value in $table-variants {\n  @include table-variant($color, $value);\n}\n\n// Responsive tables\n//\n// Generate series of `.table-responsive-*` classes for configuring the screen\n// size of where your table will overflow.\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n  @include media-breakpoint-down($breakpoint) {\n    .table-responsive#{$infix} {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n}\n","// scss-docs-start table-variant\n@mixin table-variant($state, $background) {\n  .table-#{$state} {\n    $color: color-contrast(opaque($body-bg, $background));\n    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));\n    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));\n    $active-bg: mix($color, $background, percentage($table-active-bg-factor));\n    $table-border-color: mix($color, $background, percentage($table-border-factor));\n\n    --#{$prefix}table-color: #{$color};\n    --#{$prefix}table-bg: #{$background};\n    --#{$prefix}table-border-color: #{$table-border-color};\n    --#{$prefix}table-striped-bg: #{$striped-bg};\n    --#{$prefix}table-striped-color: #{color-contrast($striped-bg)};\n    --#{$prefix}table-active-bg: #{$active-bg};\n    --#{$prefix}table-active-color: #{color-contrast($active-bg)};\n    --#{$prefix}table-hover-bg: #{$hover-bg};\n    --#{$prefix}table-hover-color: #{color-contrast($hover-bg)};\n\n    color: var(--#{$prefix}table-color);\n    border-color: var(--#{$prefix}table-border-color);\n  }\n}\n// scss-docs-end table-variant\n",'//\n// Base styles\n//\n\n.btn {\n  // scss-docs-start btn-css-vars\n  --#{$prefix}btn-padding-x: #{$btn-padding-x};\n  --#{$prefix}btn-padding-y: #{$btn-padding-y};\n  --#{$prefix}btn-font-family: #{$btn-font-family};\n  @include rfs($btn-font-size, --#{$prefix}btn-font-size);\n  --#{$prefix}btn-font-weight: #{$btn-font-weight};\n  --#{$prefix}btn-line-height: #{$btn-line-height};\n  --#{$prefix}btn-color: #{$body-color};\n  --#{$prefix}btn-bg: transparent;\n  --#{$prefix}btn-border-width: #{$btn-border-width};\n  --#{$prefix}btn-border-color: transparent;\n  --#{$prefix}btn-border-radius: #{$btn-border-radius};\n  --#{$prefix}btn-hover-border-color: transparent;\n  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};\n  --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};\n  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);\n  // scss-docs-end btn-css-vars\n\n  display: inline-block;\n  padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);\n  font-family: var(--#{$prefix}btn-font-family);\n  @include font-size(var(--#{$prefix}btn-font-size));\n  font-weight: var(--#{$prefix}btn-font-weight);\n  line-height: var(--#{$prefix}btn-line-height);\n  color: var(--#{$prefix}btn-color);\n  text-align: center;\n  text-decoration: if($link-decoration == none, null, none);\n  white-space: $btn-white-space;\n  vertical-align: middle;\n  cursor: if($enable-button-pointers, pointer, null);\n  user-select: none;\n  border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);\n  @include border-radius(var(--#{$prefix}btn-border-radius));\n  @include gradient-bg(var(--#{$prefix}btn-bg));\n  @include box-shadow(var(--#{$prefix}btn-box-shadow));\n  @include transition($btn-transition);\n\n  &:hover {\n    color: var(--#{$prefix}btn-hover-color);\n    text-decoration: if($link-hover-decoration == underline, none, null);\n    background-color: var(--#{$prefix}btn-hover-bg);\n    border-color: var(--#{$prefix}btn-hover-border-color);\n  }\n\n  .btn-check + &:hover {\n    // override for the checkbox/radio buttons\n    color: var(--#{$prefix}btn-color);\n    background-color: var(--#{$prefix}btn-bg);\n    border-color: var(--#{$prefix}btn-border-color);\n  }\n\n  &:focus-visible {\n    color: var(--#{$prefix}btn-hover-color);\n    @include gradient-bg(var(--#{$prefix}btn-hover-bg));\n    border-color: var(--#{$prefix}btn-hover-border-color);\n    outline: 0;\n    // Avoid using mixin so we can pass custom focus shadow properly\n    @if $enable-shadows {\n      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);\n    } @else {\n      box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n    }\n  }\n\n  .btn-check:focus-visible + & {\n    border-color: var(--#{$prefix}btn-hover-border-color);\n    outline: 0;\n    // Avoid using mixin so we can pass custom focus shadow properly\n    @if $enable-shadows {\n      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);\n    } @else {\n      box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n    }\n  }\n\n  .btn-check:checked + &,\n  :not(.btn-check) + &:active,\n  &:first-child:active,\n  &.active,\n  &.show {\n    color: var(--#{$prefix}btn-active-color);\n    background-color: var(--#{$prefix}btn-active-bg);\n    // Remove CSS gradients if they\'re enabled\n    background-image: if($enable-gradients, none, null);\n    border-color: var(--#{$prefix}btn-active-border-color);\n    @include box-shadow(var(--#{$prefix}btn-active-shadow));\n\n    &:focus-visible {\n      // Avoid using mixin so we can pass custom focus shadow properly\n      @if $enable-shadows {\n        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);\n      } @else {\n        box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n      }\n    }\n  }\n\n  &:disabled,\n  &.disabled,\n  fieldset:disabled & {\n    color: var(--#{$prefix}btn-disabled-color);\n    pointer-events: none;\n    background-color: var(--#{$prefix}btn-disabled-bg);\n    background-image: if($enable-gradients, none, null);\n    border-color: var(--#{$prefix}btn-disabled-border-color);\n    opacity: var(--#{$prefix}btn-disabled-opacity);\n    @include box-shadow(none);\n  }\n}\n\n\n//\n// Alternate buttons\n//\n\n// scss-docs-start btn-variant-loops\n@each $color, $value in $theme-colors {\n  .btn-#{$color} {\n    @if $color == "light" {\n      @include button-variant(\n        $value,\n        $value,\n        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),\n        $hover-border: shade-color($value, $btn-hover-border-shade-amount),\n        $active-background: shade-color($value, $btn-active-bg-shade-amount),\n        $active-border: shade-color($value, $btn-active-border-shade-amount)\n      );\n    } @else if $color == "dark" {\n      @include button-variant(\n        $value,\n        $value,\n        $hover-background: tint-color($value, $btn-hover-bg-tint-amount),\n        $hover-border: tint-color($value, $btn-hover-border-tint-amount),\n        $active-background: tint-color($value, $btn-active-bg-tint-amount),\n        $active-border: tint-color($value, $btn-active-border-tint-amount)\n      );\n    } @else {\n      @include button-variant($value, $value);\n    }\n  }\n}\n\n@each $color, $value in $theme-colors {\n  .btn-outline-#{$color} {\n    @include button-outline-variant($value);\n  }\n}\n// scss-docs-end btn-variant-loops\n\n\n//\n// Link buttons\n//\n\n// Make a button look and behave like a link\n.btn-link {\n  --#{$prefix}btn-font-weight: #{$font-weight-normal};\n  --#{$prefix}btn-color: #{$btn-link-color};\n  --#{$prefix}btn-bg: transparent;\n  --#{$prefix}btn-border-color: transparent;\n  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};\n  --#{$prefix}btn-hover-border-color: transparent;\n  --#{$prefix}btn-active-color: #{$btn-link-hover-color};\n  --#{$prefix}btn-active-border-color: transparent;\n  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};\n  --#{$prefix}btn-disabled-border-color: transparent;\n  --#{$prefix}btn-box-shadow: none;\n  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix(color-contrast($primary), $primary, 15%))};\n\n  text-decoration: $link-decoration;\n  @if $enable-gradients {\n    background-image: none;\n  }\n\n  &:hover,\n  &:focus-visible {\n    text-decoration: $link-hover-decoration;\n  }\n\n  &:focus-visible {\n    color: var(--#{$prefix}btn-color);\n  }\n\n  &:hover {\n    color: var(--#{$prefix}btn-hover-color);\n  }\n\n  // No need for an active state here\n}\n\n\n//\n// Button Sizes\n//\n\n.btn-lg {\n  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);\n}\n\n.btn-sm {\n  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);\n}\n',"// Gradients\n\n// scss-docs-start gradient-bg-mixin\n@mixin gradient-bg($color: null) {\n  background-color: $color;\n\n  @if $enable-gradients {\n    background-image: var(--#{$prefix}gradient);\n  }\n}\n// scss-docs-end gradient-bg-mixin\n\n// scss-docs-start gradient-mixins\n// Horizontal gradient, from left to right\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {\n  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);\n}\n\n// Vertical gradient, from top to bottom\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: null, $end-percent: null) {\n  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);\n}\n\n@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {\n  background-image: linear-gradient($deg, $start-color, $end-color);\n}\n\n@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);\n}\n\n@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);\n}\n\n@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {\n  background-image: radial-gradient(circle, $inner-color, $outer-color);\n}\n\n@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n}\n// scss-docs-end gradient-mixins\n","// stylelint-disable property-disallowed-list\n@mixin transition($transition...) {\n  @if length($transition) == 0 {\n    $transition: $transition-base;\n  }\n\n  @if length($transition) > 1 {\n    @each $value in $transition {\n      @if $value == null or $value == none {\n        @warn \"The keyword 'none' or 'null' must be used as a single argument.\";\n      }\n    }\n  }\n\n  @if $enable-transitions {\n    @if nth($transition, 1) != null {\n      transition: $transition;\n    }\n\n    @if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {\n      @media (prefers-reduced-motion: reduce) {\n        transition: none;\n      }\n    }\n  }\n}\n","// Button variants\n//\n// Easily pump out default styles, as well as :hover, :focus, :active,\n// and disabled options for all buttons\n\n// scss-docs-start btn-variant-mixin\n@mixin button-variant(\n  $background,\n  $border,\n  $color: color-contrast($background),\n  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),\n  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),\n  $hover-color: color-contrast($hover-background),\n  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),\n  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),\n  $active-color: color-contrast($active-background),\n  $disabled-background: $background,\n  $disabled-border: $border,\n  $disabled-color: color-contrast($disabled-background)\n) {\n  --#{$prefix}btn-color: #{$color};\n  --#{$prefix}btn-bg: #{$background};\n  --#{$prefix}btn-border-color: #{$border};\n  --#{$prefix}btn-hover-color: #{$hover-color};\n  --#{$prefix}btn-hover-bg: #{$hover-background};\n  --#{$prefix}btn-hover-border-color: #{$hover-border};\n  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $border, 15%))};\n  --#{$prefix}btn-active-color: #{$active-color};\n  --#{$prefix}btn-active-bg: #{$active-background};\n  --#{$prefix}btn-active-border-color: #{$active-border};\n  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};\n  --#{$prefix}btn-disabled-color: #{$disabled-color};\n  --#{$prefix}btn-disabled-bg: #{$disabled-background};\n  --#{$prefix}btn-disabled-border-color: #{$disabled-border};\n}\n// scss-docs-end btn-variant-mixin\n\n// scss-docs-start btn-outline-variant-mixin\n@mixin button-outline-variant(\n  $color,\n  $color-hover: color-contrast($color),\n  $active-background: $color,\n  $active-border: $color,\n  $active-color: color-contrast($active-background)\n) {\n  --#{$prefix}btn-color: #{$color};\n  --#{$prefix}btn-border-color: #{$color};\n  --#{$prefix}btn-hover-color: #{$color-hover};\n  --#{$prefix}btn-hover-bg: #{$active-background};\n  --#{$prefix}btn-hover-border-color: #{$active-border};\n  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($color)};\n  --#{$prefix}btn-active-color: #{$active-color};\n  --#{$prefix}btn-active-bg: #{$active-background};\n  --#{$prefix}btn-active-border-color: #{$active-border};\n  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};\n  --#{$prefix}btn-disabled-color: #{$color};\n  --#{$prefix}btn-disabled-bg: transparent;\n  --#{$prefix}btn-disabled-border-color: #{$color};\n  --#{$prefix}gradient: none;\n}\n// scss-docs-end btn-outline-variant-mixin\n\n// scss-docs-start btn-size-mixin\n@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {\n  --#{$prefix}btn-padding-y: #{$padding-y};\n  --#{$prefix}btn-padding-x: #{$padding-x};\n  @include rfs($font-size, --#{$prefix}btn-font-size);\n  --#{$prefix}btn-border-radius: #{$border-radius};\n}\n// scss-docs-end btn-size-mixin\n",'// Transparent background and border properties included for button version.\n// iOS requires the button element instead of an anchor tag.\n// If you want the anchor version, it requires `href="#"`.\n// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n\n.btn-close {\n  box-sizing: content-box;\n  width: $btn-close-width;\n  height: $btn-close-height;\n  padding: $btn-close-padding-y $btn-close-padding-x;\n  color: $btn-close-color;\n  background: transparent escape-svg($btn-close-bg) center / $btn-close-width auto no-repeat; // include transparent for button elements\n  border: 0; // for button elements\n  @include border-radius();\n  opacity: $btn-close-opacity;\n\n  // Override <a>\'s hover style\n  &:hover {\n    color: $btn-close-color;\n    text-decoration: none;\n    opacity: $btn-close-hover-opacity;\n  }\n\n  &:focus {\n    outline: 0;\n    box-shadow: $btn-close-focus-shadow;\n    opacity: $btn-close-focus-opacity;\n  }\n\n  &:disabled,\n  &.disabled {\n    pointer-events: none;\n    user-select: none;\n    opacity: $btn-close-disabled-opacity;\n  }\n}\n\n.btn-close-white {\n  filter: $btn-close-white-filter;\n}\n','//\n// Rotating border\n//\n\n.spinner-grow,\n.spinner-border {\n  display: inline-block;\n  width: var(--#{$prefix}spinner-width);\n  height: var(--#{$prefix}spinner-height);\n  vertical-align: var(--#{$prefix}spinner-vertical-align);\n  // stylelint-disable-next-line property-disallowed-list\n  border-radius: 50%;\n  animation: var(--#{$prefix}spinner-animation-speed) linear infinite var(--#{$prefix}spinner-animation-name);\n}\n\n// scss-docs-start spinner-border-keyframes\n@keyframes spinner-border {\n  to { transform: rotate(360deg) #{"/* rtl:ignore */"}; }\n}\n// scss-docs-end spinner-border-keyframes\n\n.spinner-border {\n  // scss-docs-start spinner-border-css-vars\n  --#{$prefix}spinner-width: #{$spinner-width};\n  --#{$prefix}spinner-height: #{$spinner-height};\n  --#{$prefix}spinner-vertical-align: #{$spinner-vertical-align};\n  --#{$prefix}spinner-border-width: #{$spinner-border-width};\n  --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed};\n  --#{$prefix}spinner-animation-name: spinner-border;\n  // scss-docs-end spinner-border-css-vars\n\n  border: var(--#{$prefix}spinner-border-width) solid currentcolor;\n  border-right-color: transparent;\n}\n\n.spinner-border-sm {\n  // scss-docs-start spinner-border-sm-css-vars\n  --#{$prefix}spinner-width: #{$spinner-width-sm};\n  --#{$prefix}spinner-height: #{$spinner-height-sm};\n  --#{$prefix}spinner-border-width: #{$spinner-border-width-sm};\n  // scss-docs-end spinner-border-sm-css-vars\n}\n\n//\n// Growing circle\n//\n\n// scss-docs-start spinner-grow-keyframes\n@keyframes spinner-grow {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    opacity: 1;\n    transform: none;\n  }\n}\n// scss-docs-end spinner-grow-keyframes\n\n.spinner-grow {\n  // scss-docs-start spinner-grow-css-vars\n  --#{$prefix}spinner-width: #{$spinner-width};\n  --#{$prefix}spinner-height: #{$spinner-height};\n  --#{$prefix}spinner-vertical-align: #{$spinner-vertical-align};\n  --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed};\n  --#{$prefix}spinner-animation-name: spinner-grow;\n  // scss-docs-end spinner-grow-css-vars\n\n  background-color: currentcolor;\n  opacity: 0;\n}\n\n.spinner-grow-sm {\n  --#{$prefix}spinner-width: #{$spinner-width-sm};\n  --#{$prefix}spinner-height: #{$spinner-height-sm};\n}\n\n@if $enable-reduced-motion {\n  @media (prefers-reduced-motion: reduce) {\n    .spinner-border,\n    .spinner-grow {\n      --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed * 2};\n    }\n  }\n}\n','// stylelint-disable function-disallowed-list\n\n%offcanvas-css-vars {\n  // scss-docs-start offcanvas-css-vars\n  --#{$prefix}offcanvas-zindex: #{$zindex-offcanvas};\n  --#{$prefix}offcanvas-width: #{$offcanvas-horizontal-width};\n  --#{$prefix}offcanvas-height: #{$offcanvas-vertical-height};\n  --#{$prefix}offcanvas-padding-x: #{$offcanvas-padding-x};\n  --#{$prefix}offcanvas-padding-y: #{$offcanvas-padding-y};\n  --#{$prefix}offcanvas-color: #{$offcanvas-color};\n  --#{$prefix}offcanvas-bg: #{$offcanvas-bg-color};\n  --#{$prefix}offcanvas-border-width: #{$offcanvas-border-width};\n  --#{$prefix}offcanvas-border-color: #{$offcanvas-border-color};\n  --#{$prefix}offcanvas-box-shadow: #{$offcanvas-box-shadow};\n  // scss-docs-end offcanvas-css-vars\n}\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  $next: breakpoint-next($breakpoint, $grid-breakpoints);\n  $infix: breakpoint-infix($next, $grid-breakpoints);\n\n  .offcanvas#{$infix} {\n    @extend %offcanvas-css-vars;\n  }\n}\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  $next: breakpoint-next($breakpoint, $grid-breakpoints);\n  $infix: breakpoint-infix($next, $grid-breakpoints);\n\n  .offcanvas#{$infix} {\n    @include media-breakpoint-down($next) {\n      position: fixed;\n      bottom: 0;\n      z-index: var(--#{$prefix}offcanvas-zindex);\n      display: flex;\n      flex-direction: column;\n      max-width: 100%;\n      color: var(--#{$prefix}offcanvas-color);\n      visibility: hidden;\n      background-color: var(--#{$prefix}offcanvas-bg);\n      background-clip: padding-box;\n      outline: 0;\n      @include box-shadow(var(--#{$prefix}offcanvas-box-shadow));\n      @include transition(transform $offcanvas-transition-duration ease-in-out);\n\n      &.offcanvas-start {\n        top: 0;\n        left: 0;\n        width: var(--#{$prefix}offcanvas-width);\n        border-right: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);\n        transform: translateX(-100%);\n      }\n\n      &.offcanvas-end {\n        top: 0;\n        right: 0;\n        width: var(--#{$prefix}offcanvas-width);\n        border-left: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);\n        transform: translateX(100%);\n      }\n\n      &.offcanvas-top {\n        top: 0;\n        right: 0;\n        left: 0;\n        height: var(--#{$prefix}offcanvas-height);\n        max-height: 100%;\n        border-bottom: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);\n        transform: translateY(-100%);\n      }\n\n      &.offcanvas-bottom {\n        right: 0;\n        left: 0;\n        height: var(--#{$prefix}offcanvas-height);\n        max-height: 100%;\n        border-top: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);\n        transform: translateY(100%);\n      }\n\n      &.showing,\n      &.show:not(.hiding) {\n        transform: none;\n      }\n\n      &.showing,\n      &.hiding,\n      &.show {\n        visibility: visible;\n      }\n    }\n\n    @if not ($infix == "") {\n      @include media-breakpoint-up($next) {\n        --#{$prefix}offcanvas-height: auto;\n        --#{$prefix}offcanvas-border-width: 0;\n        background-color: transparent !important; // stylelint-disable-line declaration-no-important\n\n        .offcanvas-header {\n          display: none;\n        }\n\n        .offcanvas-body {\n          display: flex;\n          flex-grow: 0;\n          padding: 0;\n          overflow-y: visible;\n          // Reset `background-color` in case `.bg-*` classes are used in offcanvas\n          background-color: transparent !important; // stylelint-disable-line declaration-no-important\n        }\n      }\n    }\n  }\n}\n\n.offcanvas-backdrop {\n  @include overlay-backdrop($zindex-offcanvas-backdrop, $offcanvas-backdrop-bg, $offcanvas-backdrop-opacity);\n}\n\n.offcanvas-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--#{$prefix}offcanvas-padding-y) var(--#{$prefix}offcanvas-padding-x);\n\n  .btn-close {\n    padding: calc(var(--#{$prefix}offcanvas-padding-y) * .5) calc(var(--#{$prefix}offcanvas-padding-x) * .5);\n    margin-top: calc(-.5 * var(--#{$prefix}offcanvas-padding-y));\n    margin-right: calc(-.5 * var(--#{$prefix}offcanvas-padding-x));\n    margin-bottom: calc(-.5 * var(--#{$prefix}offcanvas-padding-y));\n  }\n}\n\n.offcanvas-title {\n  margin-bottom: 0;\n  line-height: $offcanvas-title-line-height;\n}\n\n.offcanvas-body {\n  flex-grow: 1;\n  padding: var(--#{$prefix}offcanvas-padding-y) var(--#{$prefix}offcanvas-padding-x);\n  overflow-y: auto;\n}\n',"// Shared between modals and offcanvases\n@mixin overlay-backdrop($zindex, $backdrop-bg, $backdrop-opacity) {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: $zindex;\n  width: 100vw;\n  height: 100vh;\n  background-color: $backdrop-bg;\n\n  // Fade for backdrop\n  &.fade { opacity: 0; }\n  &.show { opacity: $backdrop-opacity; }\n}\n",'// scss-docs-start clearfix\n@mixin clearfix() {\n  &::after {\n    display: block;\n    clear: both;\n    content: "";\n  }\n}\n// scss-docs-end clearfix\n',"// stylelint-disable function-name-case\n\n// All-caps `RGBA()` function used because of this Sass bug: https://github.com/sass/node-sass/issues/2251\n@each $color, $value in $theme-colors {\n  $color-rgb: to-rgb($value);\n  .text-bg-#{$color} {\n    color: color-contrast($value) if($enable-important-utilities, !important, null);\n    background-color: RGBA($color-rgb, var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);\n  }\n}\n","@each $color, $value in $theme-colors {\n  .link-#{$color} {\n    color: $value !important; // stylelint-disable-line declaration-no-important\n\n    @if $link-shade-percentage != 0 {\n      &:hover,\n      &:focus {\n        color: if(color-contrast($value) == $color-contrast-light, shade-color($value, $link-shade-percentage), tint-color($value, $link-shade-percentage)) !important; // stylelint-disable-line declaration-no-important\n      }\n    }\n  }\n}\n",'// Credit: Nicolas Gallagher and SUIT CSS.\n\n.ratio {\n  position: relative;\n  width: 100%;\n\n  &::before {\n    display: block;\n    padding-top: var(--#{$prefix}aspect-ratio);\n    content: "";\n  }\n\n  > * {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n@each $key, $ratio in $aspect-ratios {\n  .ratio-#{$key} {\n    --#{$prefix}aspect-ratio: #{$ratio};\n  }\n}\n',"// Shorthand\n\n.fixed-top {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: $zindex-fixed;\n}\n\n.fixed-bottom {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: $zindex-fixed;\n}\n\n// Responsive sticky top and bottom\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    .sticky#{$infix}-top {\n      position: sticky;\n      top: 0;\n      z-index: $zindex-sticky;\n    }\n\n    .sticky#{$infix}-bottom {\n      position: sticky;\n      bottom: 0;\n      z-index: $zindex-sticky;\n    }\n  }\n}\n","// scss-docs-start stacks\n.hstack {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: stretch;\n}\n\n.vstack {\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  align-self: stretch;\n}\n// scss-docs-end stacks\n","//\n// Visually hidden\n//\n\n.visually-hidden,\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\n  @include visually-hidden();\n}\n",'// stylelint-disable declaration-no-important\n\n// Hide content visually while keeping it accessible to assistive technologies\n//\n// See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/\n// See: https://kittygiraudel.com/2016/10/13/css-hide-and-seek/\n\n@mixin visually-hidden() {\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686\n  overflow: hidden !important;\n  clip: rect(0, 0, 0, 0) !important;\n  white-space: nowrap !important;\n  border: 0 !important;\n}\n\n// Use to only display content when it\'s focused, or one of its child elements is focused\n// (i.e. when focus is within the element/container that the class was applied to)\n//\n// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\n\n@mixin visually-hidden-focusable() {\n  &:not(:focus):not(:focus-within) {\n    @include visually-hidden();\n  }\n}\n','//\n// Stretched link\n//\n\n.stretched-link {\n  &::#{$stretched-link-pseudo-element} {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: $stretched-link-z-index;\n    content: "";\n  }\n}\n',"//\n// Text truncation\n//\n\n.text-truncate {\n  @include text-truncate();\n}\n","// Text truncate\n// Requires inline-block or block for proper styling\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n",".vr {\n  display: inline-block;\n  align-self: stretch;\n  width: 1px;\n  min-height: 1em;\n  background-color: currentcolor;\n  opacity: $hr-opacity;\n}\n",'// Utility generator\n// Used to generate utilities & print utilities\n@mixin generate-utility($utility, $infix, $is-rfs-media-query: false) {\n  $values: map-get($utility, values);\n\n  // If the values are a list or string, convert it into a map\n  @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {\n    $values: zip($values, $values);\n  }\n\n  @each $key, $value in $values {\n    $properties: map-get($utility, property);\n\n    // Multiple properties are possible, for example with vertical or horizontal margins or paddings\n    @if type-of($properties) == "string" {\n      $properties: append((), $properties);\n    }\n\n    // Use custom class if present\n    $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n    $property-class: if($property-class == null, "", $property-class);\n\n    // Use custom CSS variable name if present, otherwise default to `class`\n    $css-variable-name: if(map-has-key($utility, css-variable-name), map-get($utility, css-variable-name), map-get($utility, class));\n\n    // State params to generate pseudo-classes\n    $state: if(map-has-key($utility, state), map-get($utility, state), ());\n\n    $infix: if($property-class == "" and str-slice($infix, 1, 1) == "-", str-slice($infix, 2), $infix);\n\n    // Don\'t prefix if value key is null (e.g. with shadow class)\n    $property-class-modifier: if($key, if($property-class == "" and $infix == "", "", "-") + $key, "");\n\n    @if map-get($utility, rfs) {\n      // Inside the media query\n      @if $is-rfs-media-query {\n        $val: rfs-value($value);\n\n        // Do not render anything if fluid and non fluid values are the same\n        $value: if($val == rfs-fluid-value($value), null, $val);\n      }\n      @else {\n        $value: rfs-fluid-value($value);\n      }\n    }\n\n    $is-css-var: map-get($utility, css-var);\n    $is-local-vars: map-get($utility, local-vars);\n    $is-rtl: map-get($utility, rtl);\n\n    @if $value != null {\n      @if $is-rtl == false {\n        /* rtl:begin:remove */\n      }\n\n      @if $is-css-var {\n        .#{$property-class + $infix + $property-class-modifier} {\n          --#{$prefix}#{$css-variable-name}: #{$value};\n        }\n\n        @each $pseudo in $state {\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n            --#{$prefix}#{$css-variable-name}: #{$value};\n          }\n        }\n      } @else {\n        .#{$property-class + $infix + $property-class-modifier} {\n          @each $property in $properties {\n            @if $is-local-vars {\n              @each $local-var, $variable in $is-local-vars {\n                --#{$prefix}#{$local-var}: #{$variable};\n              }\n            }\n            #{$property}: $value if($enable-important-utilities, !important, null);\n          }\n        }\n\n        @each $pseudo in $state {\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n            @each $property in $properties {\n              @if $is-local-vars {\n                @each $local-var, $variable in $is-local-vars {\n                  --#{$prefix}#{$local-var}: #{$variable};\n                }\n              }\n              #{$property}: $value if($enable-important-utilities, !important, null);\n            }\n          }\n        }\n      }\n\n      @if $is-rtl == false {\n        /* rtl:end:remove */\n      }\n    }\n  }\n}\n','// Loop over each breakpoint\n@each $breakpoint in map-keys($grid-breakpoints) {\n\n  // Generate media query if needed\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    // Loop over each utility property\n    @each $key, $utility in $utilities {\n      // The utility can be disabled with `false`, thus check if the utility is a map first\n      // Only proceed if responsive media queries are enabled or if it\'s the base media query\n      @if type-of($utility) == "map" and (map-get($utility, responsive) or $infix == "") {\n        @include generate-utility($utility, $infix);\n      }\n    }\n  }\n}\n\n// RFS rescaling\n@media (min-width: $rfs-mq-value) {\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {\n      // Loop over each utility property\n      @each $key, $utility in $utilities {\n        // The utility can be disabled with `false`, thus check if the utility is a map first\n        // Only proceed if responsive media queries are enabled or if it\'s the base media query\n        @if type-of($utility) == "map" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == "") {\n          @include generate-utility($utility, $infix, true);\n        }\n      }\n    }\n  }\n}\n\n\n// Print utilities\n@media print {\n  @each $key, $utility in $utilities {\n    // The utility can be disabled with `false`, thus check if the utility is a map first\n    // Then check if the utility needs print styles\n    @if type-of($utility) == "map" and map-get($utility, print) == true {\n      @include generate-utility($utility, "-print");\n    }\n  }\n}\n'],sourceRoot:""}]),t.default=a},"./node_modules/css-loader/dist/runtime/api.js":n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":n=>{"use strict";n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},"./node_modules/form-data/lib/browser.js":n=>{n.exports="object"==typeof self?self.FormData:window.FormData},"./node_modules/function-bind/implementation.js":n=>{"use strict";var t="Function.prototype.bind called on incompatible ",e=Array.prototype.slice,o=Object.prototype.toString,r="[object Function]";n.exports=function(n){var i=this;if("function"!=typeof i||o.call(i)!==r)throw new TypeError(t+i);for(var a,s=e.call(arguments,1),l=function(){if(this instanceof a){var t=i.apply(this,s.concat(e.call(arguments)));return Object(t)===t?t:this}return i.apply(n,s.concat(e.call(arguments)))},d=Math.max(0,i.length-s.length),c=[],p=0;p<d;p++)c.push("$"+p);if(a=Function("binder","return function ("+c.join(",")+"){ return binder.apply(this,arguments); }")(l),i.prototype){var A=function(){};A.prototype=i.prototype,a.prototype=new A,A.prototype=null}return a}},"./node_modules/function-bind/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/function-bind/implementation.js");n.exports=Function.prototype.bind||o},"./node_modules/get-intrinsic/index.js":(n,t,e)=>{"use strict";var o,r=SyntaxError,i=Function,a=TypeError,s=function(n){try{return i('"use strict"; return ('+n+").constructor;")()}catch(n){}},l=Object.getOwnPropertyDescriptor;if(l)try{l({},"")}catch(n){l=null}var d=function(){throw new a},c=l?function(){try{return d}catch(n){try{return l(arguments,"callee").get}catch(n){return d}}}():d,p=e("./node_modules/has-symbols/index.js")(),A=e("./node_modules/has-proto/index.js")(),m=Object.getPrototypeOf||(A?function(n){return n.__proto__}:null),u={},f="undefined"!=typeof Uint8Array&&m?m(Uint8Array):o,b={"%AggregateError%":"undefined"==typeof AggregateError?o:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?o:ArrayBuffer,"%ArrayIteratorPrototype%":p&&m?m([][Symbol.iterator]()):o,"%AsyncFromSyncIteratorPrototype%":o,"%AsyncFunction%":u,"%AsyncGenerator%":u,"%AsyncGeneratorFunction%":u,"%AsyncIteratorPrototype%":u,"%Atomics%":"undefined"==typeof Atomics?o:Atomics,"%BigInt%":"undefined"==typeof BigInt?o:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?o:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?o:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?o:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?o:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?o:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?o:FinalizationRegistry,"%Function%":i,"%GeneratorFunction%":u,"%Int8Array%":"undefined"==typeof Int8Array?o:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?o:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?o:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":p&&m?m(m([][Symbol.iterator]())):o,"%JSON%":"object"==typeof JSON?JSON:o,"%Map%":"undefined"==typeof Map?o:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&p&&m?m((new Map)[Symbol.iterator]()):o,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?o:Promise,"%Proxy%":"undefined"==typeof Proxy?o:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?o:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?o:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&p&&m?m((new Set)[Symbol.iterator]()):o,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?o:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":p&&m?m(""[Symbol.iterator]()):o,"%Symbol%":p?Symbol:o,"%SyntaxError%":r,"%ThrowTypeError%":c,"%TypedArray%":f,"%TypeError%":a,"%Uint8Array%":"undefined"==typeof Uint8Array?o:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?o:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?o:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?o:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?o:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?o:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?o:WeakSet};if(m)try{null.error}catch(n){var g=m(m(n));b["%Error.prototype%"]=g}var h=function n(t){var e;if("%AsyncFunction%"===t)e=s("async function () {}");else if("%GeneratorFunction%"===t)e=s("function* () {}");else if("%AsyncGeneratorFunction%"===t)e=s("async function* () {}");else if("%AsyncGenerator%"===t){var o=n("%AsyncGeneratorFunction%");o&&(e=o.prototype)}else if("%AsyncIteratorPrototype%"===t){var r=n("%AsyncGenerator%");r&&m&&(e=m(r.prototype))}return b[t]=e,e},x={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},v=e("./node_modules/function-bind/index.js"),E=e("./node_modules/has/src/index.js"),B=v.call(Function.call,Array.prototype.concat),y=v.call(Function.apply,Array.prototype.splice),w=v.call(Function.call,String.prototype.replace),I=v.call(Function.call,String.prototype.slice),$=v.call(Function.call,RegExp.prototype.exec),C=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,_=/\\(\\)?/g,k=function(n){var t=I(n,0,1),e=I(n,-1);if("%"===t&&"%"!==e)throw new r("invalid intrinsic syntax, expected closing `%`");if("%"===e&&"%"!==t)throw new r("invalid intrinsic syntax, expected opening `%`");var o=[];return w(n,C,(function(n,t,e,r){o[o.length]=e?w(r,_,"$1"):t||n})),o},O=function(n,t){var e,o=n;if(E(x,o)&&(o="%"+(e=x[o])[0]+"%"),E(b,o)){var i=b[o];if(i===u&&(i=h(o)),void 0===i&&!t)throw new a("intrinsic "+n+" exists, but is not available. Please file an issue!");return{alias:e,name:o,value:i}}throw new r("intrinsic "+n+" does not exist!")};n.exports=function(n,t){if("string"!=typeof n||0===n.length)throw new a("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new a('"allowMissing" argument must be a boolean');if(null===$(/^%?[^%]*%?$/,n))throw new r("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var e=k(n),o=e.length>0?e[0]:"",i=O("%"+o+"%",t),s=i.name,d=i.value,c=!1,p=i.alias;p&&(o=p[0],y(e,B([0,1],p)));for(var A=1,m=!0;A<e.length;A+=1){var u=e[A],f=I(u,0,1),g=I(u,-1);if(('"'===f||"'"===f||"`"===f||'"'===g||"'"===g||"`"===g)&&f!==g)throw new r("property names with quotes must have matching quotes");if("constructor"!==u&&m||(c=!0),E(b,s="%"+(o+="."+u)+"%"))d=b[s];else if(null!=d){if(!(u in d)){if(!t)throw new a("base intrinsic for "+n+" exists, but the property is not available.");return}if(l&&A+1>=e.length){var h=l(d,u);d=(m=!!h)&&"get"in h&&!("originalValue"in h.get)?h.get:d[u]}else m=E(d,u),d=d[u];m&&!c&&(b[s]=d)}}return d}},"./node_modules/has-proto/index.js":n=>{"use strict";var t={foo:{}},e=Object;n.exports=function(){return{__proto__:t}.foo===t.foo&&!({__proto__:null}instanceof e)}},"./node_modules/has-symbols/index.js":(n,t,e)=>{"use strict";var o="undefined"!=typeof Symbol&&Symbol,r=e("./node_modules/has-symbols/shams.js");n.exports=function(){return"function"==typeof o&&("function"==typeof Symbol&&("symbol"==typeof o("foo")&&("symbol"==typeof Symbol("bar")&&r())))}},"./node_modules/has-symbols/shams.js":n=>{"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},t=Symbol("test"),e=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;for(t in n[t]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var o=Object.getOwnPropertySymbols(n);if(1!==o.length||o[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(n,t);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},"./node_modules/has/src/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/function-bind/index.js");n.exports=o.call(Function.call,Object.prototype.hasOwnProperty)},"./node_modules/js-base64/base64.js":function(n,t,e){"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e.g&&e.g,n.exports=function(){"use strict";var n,t="3.7.5",e=t,o="function"==typeof atob,r="function"==typeof btoa,i="function"==typeof Buffer,a="function"==typeof TextDecoder?new TextDecoder:void 0,s="function"==typeof TextEncoder?new TextEncoder:void 0,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",d=Array.prototype.slice.call(l),c=(n={},d.forEach((function(t,e){return n[t]=e})),n),p=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,A=String.fromCharCode.bind(String),m="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):function(n){return new Uint8Array(Array.prototype.slice.call(n,0))},u=function(n){return n.replace(/=/g,"").replace(/[+\/]/g,(function(n){return"+"==n?"-":"_"}))},f=function(n){return n.replace(/[^A-Za-z0-9\+\/]/g,"")},b=function(n){for(var t,e,o,r,i="",a=n.length%3,s=0;s<n.length;){if((e=n.charCodeAt(s++))>255||(o=n.charCodeAt(s++))>255||(r=n.charCodeAt(s++))>255)throw new TypeError("invalid character found");i+=d[(t=e<<16|o<<8|r)>>18&63]+d[t>>12&63]+d[t>>6&63]+d[63&t]}return a?i.slice(0,a-3)+"===".substring(a):i},g=r?function(n){return btoa(n)}:i?function(n){return Buffer.from(n,"binary").toString("base64")}:b,h=i?function(n){return Buffer.from(n).toString("base64")}:function(n){for(var t=4096,e=[],o=0,r=n.length;o<r;o+=t)e.push(A.apply(null,n.subarray(o,o+t)));return g(e.join(""))},x=function(n,t){return void 0===t&&(t=!1),t?u(h(n)):h(n)},v=function(n){if(n.length<2)return(t=n.charCodeAt(0))<128?n:t<2048?A(192|t>>>6)+A(128|63&t):A(224|t>>>12&15)+A(128|t>>>6&63)+A(128|63&t);var t=65536+1024*(n.charCodeAt(0)-55296)+(n.charCodeAt(1)-56320);return A(240|t>>>18&7)+A(128|t>>>12&63)+A(128|t>>>6&63)+A(128|63&t)},E=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,B=function(n){return n.replace(E,v)},y=i?function(n){return Buffer.from(n,"utf8").toString("base64")}:s?function(n){return h(s.encode(n))}:function(n){return g(B(n))},w=function(n,t){return void 0===t&&(t=!1),t?u(y(n)):y(n)},I=function(n){return w(n,!0)},$=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,C=function(n){switch(n.length){case 4:var t=((7&n.charCodeAt(0))<<18|(63&n.charCodeAt(1))<<12|(63&n.charCodeAt(2))<<6|63&n.charCodeAt(3))-65536;return A(55296+(t>>>10))+A(56320+(1023&t));case 3:return A((15&n.charCodeAt(0))<<12|(63&n.charCodeAt(1))<<6|63&n.charCodeAt(2));default:return A((31&n.charCodeAt(0))<<6|63&n.charCodeAt(1))}},_=function(n){return n.replace($,C)},k=function(n){if(n=n.replace(/\s+/g,""),!p.test(n))throw new TypeError("malformed base64.");n+="==".slice(2-(3&n.length));for(var t,e,o,r="",i=0;i<n.length;)t=c[n.charAt(i++)]<<18|c[n.charAt(i++)]<<12|(e=c[n.charAt(i++)])<<6|(o=c[n.charAt(i++)]),r+=64===e?A(t>>16&255):64===o?A(t>>16&255,t>>8&255):A(t>>16&255,t>>8&255,255&t);return r},O=o?function(n){return atob(f(n))}:i?function(n){return Buffer.from(n,"base64").toString("binary")}:k,j=i?function(n){return m(Buffer.from(n,"base64"))}:function(n){return m(O(n).split("").map((function(n){return n.charCodeAt(0)})))},M=function(n){return j(R(n))},S=i?function(n){return Buffer.from(n,"base64").toString("utf8")}:a?function(n){return a.decode(j(n))}:function(n){return _(O(n))},R=function(n){return f(n.replace(/[-_]/g,(function(n){return"-"==n?"+":"/"})))},F=function(n){return S(R(n))},V=function(n){return{value:n,enumerable:!1,writable:!0,configurable:!0}},T=function(){var n=function(n,t){return Object.defineProperty(String.prototype,n,V(t))};n("fromBase64",(function(){return F(this)})),n("toBase64",(function(n){return w(this,n)})),n("toBase64URI",(function(){return w(this,!0)})),n("toBase64URL",(function(){return w(this,!0)})),n("toUint8Array",(function(){return M(this)}))},P=function(){var n=function(n,t){return Object.defineProperty(Uint8Array.prototype,n,V(t))};n("toBase64",(function(n){return x(this,n)})),n("toBase64URI",(function(){return x(this,!0)})),n("toBase64URL",(function(){return x(this,!0)}))},N=function(){T(),P()},L={version:t,VERSION:e,atob:O,atobPolyfill:k,btoa:g,btoaPolyfill:b,fromBase64:F,toBase64:w,encode:w,encodeURI:I,encodeURL:I,utob:B,btou:_,decode:F,isValid:function(n){if("string"!=typeof n)return!1;var t=n.replace(/\s+/g,"").replace(/={0,2}$/,"");return!/[^\s0-9a-zA-Z\+/]/.test(t)||!/[^\s0-9a-zA-Z\-_]/.test(t)},fromUint8Array:x,toUint8Array:M,extendString:T,extendUint8Array:P,extendBuiltins:N,Base64:{}};return Object.keys(L).forEach((function(n){return L.Base64[n]=L[n]})),L}()},"./node_modules/kintoneplugin-commonutils/dist/button_installer.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonInstaller=void 0;const o=e("./node_modules/kintoneplugin-commonutils/dist/utils.js");e("./node_modules/@shin-chan/kypes/src/index.js");t.ButtonInstaller=class{class_hms_button="button-hms-items";buttons=[];canvas;constructor(n=""){""!=n&&(this.class_hms_button=n)}create_button(n,t=""){const e=o.Utils.ce("span","",[],n);e.style.color="dodgerblue";let r=o.Utils.ce("button",this.class_hms_button,[e],"",{title:t});return r=o.Utils.decorate_menu_icon(r),console.log(n.length),n.length>2&&(r.style.fontSize="16px"),r}add_button(n){this.buttons.push(n)}install(){this.already_installed()?console.info("ボタンはすでに設置済みです。"):0!=this.buttons.length?this.put_buttons(this.buttons):console.info("ボタンが設定されていません。何もせずに終了します。")}set_canvas(n){this.canvas=n}get_hms(){const n=kintone.app.getHeaderMenuSpaceElement();if(null==n){const n="ボタン配置スペースが取得できませんでした。";throw console.error(n),new Error(n)}return n}already_installed(){return document.getElementsByClassName(this.class_hms_button).length>0}put_buttons(n){const t=void 0===this.canvas?this.get_hms():this.canvas;n.forEach((n=>{console.log(t),t.append(n)}))}get_header_element(n){const t=document.querySelectorAll(".recordlist-header-label-gaia");return Array.from(t).filter((t=>t.textContent==n))}}},"./node_modules/kintoneplugin-commonutils/dist/index.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e),Object.defineProperty(n,o,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e("./node_modules/kintoneplugin-commonutils/dist/utils.js"),t),r(e("./node_modules/kintoneplugin-commonutils/dist/button_installer.js"),t),r(e("./node_modules/kintoneplugin-commonutils/dist/plugin_canvas.js"),t)},"./node_modules/kintoneplugin-commonutils/dist/plugin_canvas.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PluginCanvas=void 0;const o=e("./node_modules/kintoneplugin-commonutils/dist/utils.js");e("./node_modules/@shin-chan/kypes/src/index.js");class r{static CLASS_DISMISS="offcanvas-dismiss";id_island;id_offcanvas;title_offcanvas;island;enable_offcanvas;constructor(n,t,e=null,r){if(this.title_offcanvas=n,this.id_island=`plugin_island_id_${t}`,this.id_offcanvas=`offcanvas_${this.id_island}`,""==t){if(console.log(`[${this.constructor.name}] オフキャンバスを使いません。`),null==e&&(e=kintone.app.getHeaderMenuSpaceElement()),null==e)throw new Error("kintone.app.HeaderMenuSpaceElement() を取得できませんでした。");return this.island=e,void(this.enable_offcanvas=!1)}this.enable_offcanvas=!0;const i=document.getElementById(this.id_island);if(i)console.log(`[${this.constructor.name}] 既存のオフキャンバスを使用します。`),this.island=i;else{console.log(`[${this.constructor.name}] オフキャンバスをID[${this.id_island}]で作成します。`);const n=(n=>{if(n)return n;{const n=o.Utils.ce("span","",[],"🎈");return n.style.cursor="pointer",n}})(r);n.style.color="dodgerblue";let t=o.Utils.ce("div","bbk-tool-icon-box",[n],"",{id:this.id_island,"data-bs-toggle":"offcanvas","aria-controls":this.id_offcanvas,"data-bs-target":`#${this.id_offcanvas}`});t=o.Utils.decorate_menu_icon(t),this.island=t,this.init_offcanvas()}}init_offcanvas(){const n=kintone.app.getHeaderMenuSpaceElement();n&&(n.appendChild(this.get_node()),n.appendChild(this.build_node_offcanvas()))}get_node(){return this.island}build_node_offcanvas(){return o.Utils.ce("div","offcanvas offcanvas-start",[o.Utils.ce("div","offcanvas-header",[o.Utils.ce("h5","offcanvas-title",[],this.title_offcanvas,{id:`${this.id_offcanvas}Label`}),o.Utils.ce("button","btn-close text-reset",[],"",{"data-bs-dismiss":"offcanvas","aria-label":"Close"})]),o.Utils.ce("div","offcanvas-body",[o.Utils.ce("div","mb-4",[],"ここから各種プラグインを呼び出せます。")],"",{id:`${this.id_offcanvas}-body`})],"",{tabindex:"-1",id:`${this.id_offcanvas}`,"aria-labelledby":`${this.id_offcanvas}Label`,"data-bs-backdrop":"false"})}append(n){if(this.enable_offcanvas){const t=document.getElementById(`${this.id_offcanvas}-body`);this.deal_dismiss_attribute(n),t?.appendChild(n)}else this.island.append(n)}deal_dismiss_attribute(n){const t=Array.from(n.querySelectorAll(`.${r.CLASS_DISMISS}`));console.log(t),t.length>0?t.map((n=>{n.setAttribute("data-bs-dismiss","offcanvas")})):n.setAttribute("data-bs-dismiss","offcanvas")}}t.PluginCanvas=r},"./node_modules/kintoneplugin-commonutils/dist/utils.js":(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Utils=void 0;class e{static unique_properties(n,t=!1){const e=[];for(const o of Object.keys(n)){const r=n[o];(1==r.unique||t&&"RECORD_NUMBER"==r.type)&&e.push(r)}return e}static is_not_empty_string(n){return!e.is_empty_string(n)}static is_empty_string(n){return null==n||null==n||!(n.length>0)}static get_from=(n,t,e)=>n.hasOwnProperty(t)?n[t]:e;static buildElement=n=>{const t=n.tagName,o=n.className?n.className:"",r=n.childElements?n.childElements:[],i=n.textContent?n.textContent:void 0,a=n.innerHTML?n.innerHTML:void 0,s=n.attrs?n.attrs:{};return e.createElement(t,o,r,i,s,a)};static createElement=(n,t="",e=[],o,r,i)=>{const a=document.createElement(n);return a.className=t,null!=o&&(a.textContent=o),null!=i&&(a.innerHTML=i),e.length>0&&e.forEach((n=>{a.appendChild(n)})),r&&Object.entries(r).forEach((([n,t])=>{a.setAttribute(n,t)})),a};static ce=(n,t="",e=[],o="",r)=>this.createElement(n,t,e,o,r);static decorate_menu_icon(n){return n.style.height="48px",n.style.backgroundColor="#f7f9fa",n.style.fontSize="28px",n.style.border="1px solid #e3e7e8",n.style.display="inline",n.style.marginLeft="2px",n.style.marginRight="2px",n.style.verticalAlign="middle",n}static simpleDiv=n=>e.createElement("div","",[],n);static is_overlapped=n=>e.overlapped(n).length>0;static overlapped=n=>{const t=n.filter(((n,t,e)=>e.indexOf(n)!==e.lastIndexOf(n)));return Array.from(new Set(t))};static get_application_url(n){return`${location.protocol}//${location.host}/k/${n}`}static retrieve_errors(n,t=-1){const e=n?.error?.errors;if(null==e)return;let o=[];if(Object.keys(e).forEach((n=>{const t=e[n].messages.map((t=>`[${n}] ${t}`));o=o.concat(t)})),o.sort(),t>=0&&t<o.length){const n=o.length-t;o=o.splice(0,t),o.push(`以下${n}件のエラーメッセージを省略しました。`)}return o}}t.Utils=e},"./node_modules/mime/Mime.js":n=>{"use strict";function t(){this._types=Object.create(null),this._extensions=Object.create(null);for(let n=0;n<arguments.length;n++)this.define(arguments[n]);this.define=this.define.bind(this),this.getType=this.getType.bind(this),this.getExtension=this.getExtension.bind(this)}t.prototype.define=function(n,t){for(let e in n){let o=n[e].map((function(n){return n.toLowerCase()}));e=e.toLowerCase();for(let n=0;n<o.length;n++){const r=o[n];if("*"!==r[0]){if(!t&&r in this._types)throw new Error('Attempt to change mapping for "'+r+'" extension from "'+this._types[r]+'" to "'+e+'". Pass `force=true` to allow this, otherwise remove "'+r+'" from the list of extensions for "'+e+'".');this._types[r]=e}}if(t||!this._extensions[e]){const n=o[0];this._extensions[e]="*"!==n[0]?n:n.substr(1)}}},t.prototype.getType=function(n){let t=(n=String(n)).replace(/^.*[/\\]/,"").toLowerCase(),e=t.replace(/^.*\./,"").toLowerCase(),o=t.length<n.length;return(e.length<t.length-1||!o)&&this._types[e]||null},t.prototype.getExtension=function(n){return(n=/^\s*([^;\s]*)/.test(n)&&RegExp.$1)&&this._extensions[n.toLowerCase()]||null},n.exports=t},"./node_modules/mime/lite.js":(n,t,e)=>{"use strict";let o=e("./node_modules/mime/Mime.js");n.exports=new o(e("./node_modules/mime/types/standard.js"))},"./node_modules/mime/types/standard.js":n=>{n.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["es","ecma"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/express":["exp"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/trig":["trig"],"application/ttml+xml":["ttml"],"application/ubjson":["ubj"],"application/urc-ressheet+xml":["rsheet"],"application/urc-targetdesc+xml":["td"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["*xsl","xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/amr":["amr"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx","opus"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/avif":["avif"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/ktx2":["ktx2"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/step+xml":["stpx"],"model/step+zip":["stpz"],"model/step-xml+zip":["stpxz"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/spdx":["spdx"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/iso.segment":["m4s"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]}},"./node_modules/object-inspect/index.js":(n,t,e)=>{var o="function"==typeof Map&&Map.prototype,r=Object.getOwnPropertyDescriptor&&o?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,i=o&&r&&"function"==typeof r.get?r.get:null,a=o&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,l=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,d=s&&l&&"function"==typeof l.get?l.get:null,c=s&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,A="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,m="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,u=Boolean.prototype.valueOf,f=Object.prototype.toString,b=Function.prototype.toString,g=String.prototype.match,h=String.prototype.slice,x=String.prototype.replace,v=String.prototype.toUpperCase,E=String.prototype.toLowerCase,B=RegExp.prototype.test,y=Array.prototype.concat,w=Array.prototype.join,I=Array.prototype.slice,$=Math.floor,C="function"==typeof BigInt?BigInt.prototype.valueOf:null,_=Object.getOwnPropertySymbols,k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,O="function"==typeof Symbol&&"object"==typeof Symbol.iterator,j="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===O||"symbol")?Symbol.toStringTag:null,M=Object.prototype.propertyIsEnumerable,S=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(n){return n.__proto__}:null);function R(n,t){if(n===1/0||n===-1/0||n!=n||n&&n>-1e3&&n<1e3||B.call(/e/,t))return t;var e=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof n){var o=n<0?-$(-n):$(n);if(o!==n){var r=String(o),i=h.call(t,r.length+1);return x.call(r,e,"$&_")+"."+x.call(x.call(i,/([0-9]{3})/g,"$&_"),/_$/,"")}}return x.call(t,e,"$&_")}var F=e("?4f7e"),V=F.custom,T=Q(V)?V:null;function P(n,t,e){var o="double"===(e.quoteStyle||t)?'"':"'";return o+n+o}function N(n){return x.call(String(n),/"/g,"&quot;")}function L(n){return!("[object Array]"!==U(n)||j&&"object"==typeof n&&j in n)}function D(n){return!("[object RegExp]"!==U(n)||j&&"object"==typeof n&&j in n)}function Q(n){if(O)return n&&"object"==typeof n&&n instanceof Symbol;if("symbol"==typeof n)return!0;if(!n||"object"!=typeof n||!k)return!1;try{return k.call(n),!0}catch(n){}return!1}n.exports=function n(t,e,o,r){var s=e||{};if(q(s,"quoteStyle")&&"single"!==s.quoteStyle&&"double"!==s.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(q(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var l=!q(s,"customInspect")||s.customInspect;if("boolean"!=typeof l&&"symbol"!==l)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(q(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(q(s,"numericSeparator")&&"boolean"!=typeof s.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var f=s.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return J(t,s);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var v=String(t);return f?R(t,v):v}if("bigint"==typeof t){var B=String(t)+"n";return f?R(t,B):B}var $=void 0===s.depth?5:s.depth;if(void 0===o&&(o=0),o>=$&&$>0&&"object"==typeof t)return L(t)?"[Array]":"[Object]";var _=function(n,t){var e;if("\t"===n.indent)e="\t";else{if(!("number"==typeof n.indent&&n.indent>0))return null;e=w.call(Array(n.indent+1)," ")}return{base:e,prev:w.call(Array(t+1),e)}}(s,o);if(void 0===r)r=[];else if(G(r,t)>=0)return"[Circular]";function V(t,e,i){if(e&&(r=I.call(r)).push(e),i){var a={depth:s.depth};return q(s,"quoteStyle")&&(a.quoteStyle=s.quoteStyle),n(t,a,o+1,r)}return n(t,s,o+1,r)}if("function"==typeof t&&!D(t)){var z=function(n){if(n.name)return n.name;var t=g.call(b.call(n),/^function\s*([\w$]+)/);if(t)return t[1];return null}(t),H=X(t,V);return"[Function"+(z?": "+z:" (anonymous)")+"]"+(H.length>0?" { "+w.call(H,", ")+" }":"")}if(Q(t)){var nn=O?x.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):k.call(t);return"object"!=typeof t||O?nn:K(nn)}if(function(n){if(!n||"object"!=typeof n)return!1;if("undefined"!=typeof HTMLElement&&n instanceof HTMLElement)return!0;return"string"==typeof n.nodeName&&"function"==typeof n.getAttribute}(t)){for(var tn="<"+E.call(String(t.nodeName)),en=t.attributes||[],on=0;on<en.length;on++)tn+=" "+en[on].name+"="+P(N(en[on].value),"double",s);return tn+=">",t.childNodes&&t.childNodes.length&&(tn+="..."),tn+="</"+E.call(String(t.nodeName))+">"}if(L(t)){if(0===t.length)return"[]";var rn=X(t,V);return _&&!function(n){for(var t=0;t<n.length;t++)if(G(n[t],"\n")>=0)return!1;return!0}(rn)?"["+Y(rn,_)+"]":"[ "+w.call(rn,", ")+" ]"}if(function(n){return!("[object Error]"!==U(n)||j&&"object"==typeof n&&j in n)}(t)){var an=X(t,V);return"cause"in Error.prototype||!("cause"in t)||M.call(t,"cause")?0===an.length?"["+String(t)+"]":"{ ["+String(t)+"] "+w.call(an,", ")+" }":"{ ["+String(t)+"] "+w.call(y.call("[cause]: "+V(t.cause),an),", ")+" }"}if("object"==typeof t&&l){if(T&&"function"==typeof t[T]&&F)return F(t,{depth:$-o});if("symbol"!==l&&"function"==typeof t.inspect)return t.inspect()}if(function(n){if(!i||!n||"object"!=typeof n)return!1;try{i.call(n);try{d.call(n)}catch(n){return!0}return n instanceof Map}catch(n){}return!1}(t)){var sn=[];return a.call(t,(function(n,e){sn.push(V(e,t,!0)+" => "+V(n,t))})),Z("Map",i.call(t),sn,_)}if(function(n){if(!d||!n||"object"!=typeof n)return!1;try{d.call(n);try{i.call(n)}catch(n){return!0}return n instanceof Set}catch(n){}return!1}(t)){var ln=[];return c.call(t,(function(n){ln.push(V(n,t))})),Z("Set",d.call(t),ln,_)}if(function(n){if(!p||!n||"object"!=typeof n)return!1;try{p.call(n,p);try{A.call(n,A)}catch(n){return!0}return n instanceof WeakMap}catch(n){}return!1}(t))return W("WeakMap");if(function(n){if(!A||!n||"object"!=typeof n)return!1;try{A.call(n,A);try{p.call(n,p)}catch(n){return!0}return n instanceof WeakSet}catch(n){}return!1}(t))return W("WeakSet");if(function(n){if(!m||!n||"object"!=typeof n)return!1;try{return m.call(n),!0}catch(n){}return!1}(t))return W("WeakRef");if(function(n){return!("[object Number]"!==U(n)||j&&"object"==typeof n&&j in n)}(t))return K(V(Number(t)));if(function(n){if(!n||"object"!=typeof n||!C)return!1;try{return C.call(n),!0}catch(n){}return!1}(t))return K(V(C.call(t)));if(function(n){return!("[object Boolean]"!==U(n)||j&&"object"==typeof n&&j in n)}(t))return K(u.call(t));if(function(n){return!("[object String]"!==U(n)||j&&"object"==typeof n&&j in n)}(t))return K(V(String(t)));if(!function(n){return!("[object Date]"!==U(n)||j&&"object"==typeof n&&j in n)}(t)&&!D(t)){var dn=X(t,V),cn=S?S(t)===Object.prototype:t instanceof Object||t.constructor===Object,pn=t instanceof Object?"":"null prototype",An=!cn&&j&&Object(t)===t&&j in t?h.call(U(t),8,-1):pn?"Object":"",mn=(cn||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(An||pn?"["+w.call(y.call([],An||[],pn||[]),": ")+"] ":"");return 0===dn.length?mn+"{}":_?mn+"{"+Y(dn,_)+"}":mn+"{ "+w.call(dn,", ")+" }"}return String(t)};var z=Object.prototype.hasOwnProperty||function(n){return n in this};function q(n,t){return z.call(n,t)}function U(n){return f.call(n)}function G(n,t){if(n.indexOf)return n.indexOf(t);for(var e=0,o=n.length;e<o;e++)if(n[e]===t)return e;return-1}function J(n,t){if(n.length>t.maxStringLength){var e=n.length-t.maxStringLength,o="... "+e+" more character"+(e>1?"s":"");return J(h.call(n,0,t.maxStringLength),t)+o}return P(x.call(x.call(n,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,H),"single",t)}function H(n){var t=n.charCodeAt(0),e={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return e?"\\"+e:"\\x"+(t<16?"0":"")+v.call(t.toString(16))}function K(n){return"Object("+n+")"}function W(n){return n+" { ? }"}function Z(n,t,e,o){return n+" ("+t+") {"+(o?Y(e,o):w.call(e,", "))+"}"}function Y(n,t){if(0===n.length)return"";var e="\n"+t.prev+t.base;return e+w.call(n,","+e)+"\n"+t.prev}function X(n,t){var e=L(n),o=[];if(e){o.length=n.length;for(var r=0;r<n.length;r++)o[r]=q(n,r)?t(n[r],n):""}var i,a="function"==typeof _?_(n):[];if(O){i={};for(var s=0;s<a.length;s++)i["$"+a[s]]=a[s]}for(var l in n)q(n,l)&&(e&&String(Number(l))===l&&l<n.length||O&&i["$"+l]instanceof Symbol||(B.call(/[^\w$]/,l)?o.push(t(l,n)+": "+t(n[l],n)):o.push(l+": "+t(n[l],n))));if("function"==typeof _)for(var d=0;d<a.length;d++)M.call(n,a[d])&&o.push("["+t(a[d])+"]: "+t(n[a[d]],n));return o}},"./node_modules/openai/dist/api.js":function(n,t,e){"use strict";var o=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.OpenAIApi=t.OpenAIApiFactory=t.OpenAIApiFp=t.OpenAIApiAxiosParamCreator=t.CreateImageRequestResponseFormatEnum=t.CreateImageRequestSizeEnum=t.ChatCompletionResponseMessageRoleEnum=t.ChatCompletionRequestMessageRoleEnum=void 0;const r=e("./node_modules/axios/index.js"),i=e("./node_modules/openai/dist/common.js"),a=e("./node_modules/openai/dist/base.js");t.ChatCompletionRequestMessageRoleEnum={System:"system",User:"user",Assistant:"assistant"},t.ChatCompletionResponseMessageRoleEnum={System:"system",User:"user",Assistant:"assistant"},t.CreateImageRequestSizeEnum={_256x256:"256x256",_512x512:"512x512",_1024x1024:"1024x1024"},t.CreateImageRequestResponseFormatEnum={Url:"url",B64Json:"b64_json"},t.OpenAIApiAxiosParamCreator=function(n){return{cancelFineTune:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("cancelFineTune","fineTuneId",t);const o="/fine-tunes/{fine_tune_id}/cancel".replace("{fine_tune_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"POST"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),createAnswer:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createAnswer","createAnswerRequest",t);const o=new URL("/answers",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createChatCompletion:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createChatCompletion","createChatCompletionRequest",t);const o=new URL("/chat/completions",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createClassification:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createClassification","createClassificationRequest",t);const o=new URL("/classifications",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createCompletion:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createCompletion","createCompletionRequest",t);const o=new URL("/completions",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createEdit:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createEdit","createEditRequest",t);const o=new URL("/edits",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createEmbedding:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createEmbedding","createEmbeddingRequest",t);const o=new URL("/embeddings",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createFile:(t,e,r={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createFile","file",t),i.assertParamExists("createFile","purpose",e);const o=new URL("/files",i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"POST"},a),r),l={},d=new(n&&n.formDataCtor||FormData);void 0!==t&&d.append("file",t),void 0!==e&&d.append("purpose",e),l["Content-Type"]="multipart/form-data",i.setSearchParams(o,{});let c=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign(Object.assign({},l),d.getHeaders()),c),r.headers),s.data=d,{url:i.toPathString(o),options:s}})),createFineTune:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createFineTune","createFineTuneRequest",t);const o=new URL("/fine-tunes",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createImage:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createImage","createImageRequest",t);const o=new URL("/images/generations",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createImageEdit:(t,e,r,a,s,l,d,c={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createImageEdit","image",t),i.assertParamExists("createImageEdit","prompt",e);const o=new URL("/images/edits",i.DUMMY_BASE_URL);let p;n&&(p=n.baseOptions);const A=Object.assign(Object.assign({method:"POST"},p),c),m={},u=new(n&&n.formDataCtor||FormData);void 0!==t&&u.append("image",t),void 0!==r&&u.append("mask",r),void 0!==e&&u.append("prompt",e),void 0!==a&&u.append("n",a),void 0!==s&&u.append("size",s),void 0!==l&&u.append("response_format",l),void 0!==d&&u.append("user",d),m["Content-Type"]="multipart/form-data",i.setSearchParams(o,{});let f=p&&p.headers?p.headers:{};return A.headers=Object.assign(Object.assign(Object.assign(Object.assign({},m),u.getHeaders()),f),c.headers),A.data=u,{url:i.toPathString(o),options:A}})),createImageVariation:(t,e,r,a,s,l={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createImageVariation","image",t);const o=new URL("/images/variations",i.DUMMY_BASE_URL);let d;n&&(d=n.baseOptions);const c=Object.assign(Object.assign({method:"POST"},d),l),p={},A=new(n&&n.formDataCtor||FormData);void 0!==t&&A.append("image",t),void 0!==e&&A.append("n",e),void 0!==r&&A.append("size",r),void 0!==a&&A.append("response_format",a),void 0!==s&&A.append("user",s),p["Content-Type"]="multipart/form-data",i.setSearchParams(o,{});let m=d&&d.headers?d.headers:{};return c.headers=Object.assign(Object.assign(Object.assign(Object.assign({},p),A.getHeaders()),m),l.headers),c.data=A,{url:i.toPathString(o),options:c}})),createModeration:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createModeration","createModerationRequest",t);const o=new URL("/moderations",i.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const a=Object.assign(Object.assign({method:"POST"},r),e),s={};s["Content-Type"]="application/json",i.setSearchParams(o,{});let l=r&&r.headers?r.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},s),l),e.headers),a.data=i.serializeDataIfNeeded(t,a,n),{url:i.toPathString(o),options:a}})),createSearch:(t,e,r={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createSearch","engineId",t),i.assertParamExists("createSearch","createSearchRequest",e);const o="/engines/{engine_id}/search".replace("{engine_id}",encodeURIComponent(String(t))),a=new URL(o,i.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const l=Object.assign(Object.assign({method:"POST"},s),r),d={};d["Content-Type"]="application/json",i.setSearchParams(a,{});let c=s&&s.headers?s.headers:{};return l.headers=Object.assign(Object.assign(Object.assign({},d),c),r.headers),l.data=i.serializeDataIfNeeded(e,l,n),{url:i.toPathString(a),options:l}})),createTranscription:(t,e,r,a,s,l,d={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createTranscription","file",t),i.assertParamExists("createTranscription","model",e);const o=new URL("/audio/transcriptions",i.DUMMY_BASE_URL);let c;n&&(c=n.baseOptions);const p=Object.assign(Object.assign({method:"POST"},c),d),A={},m=new(n&&n.formDataCtor||FormData);void 0!==t&&m.append("file",t),void 0!==e&&m.append("model",e),void 0!==r&&m.append("prompt",r),void 0!==a&&m.append("response_format",a),void 0!==s&&m.append("temperature",s),void 0!==l&&m.append("language",l),A["Content-Type"]="multipart/form-data",i.setSearchParams(o,{});let u=c&&c.headers?c.headers:{};return p.headers=Object.assign(Object.assign(Object.assign(Object.assign({},A),m.getHeaders()),u),d.headers),p.data=m,{url:i.toPathString(o),options:p}})),createTranslation:(t,e,r,a,s,l={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("createTranslation","file",t),i.assertParamExists("createTranslation","model",e);const o=new URL("/audio/translations",i.DUMMY_BASE_URL);let d;n&&(d=n.baseOptions);const c=Object.assign(Object.assign({method:"POST"},d),l),p={},A=new(n&&n.formDataCtor||FormData);void 0!==t&&A.append("file",t),void 0!==e&&A.append("model",e),void 0!==r&&A.append("prompt",r),void 0!==a&&A.append("response_format",a),void 0!==s&&A.append("temperature",s),p["Content-Type"]="multipart/form-data",i.setSearchParams(o,{});let m=d&&d.headers?d.headers:{};return c.headers=Object.assign(Object.assign(Object.assign(Object.assign({},p),A.getHeaders()),m),l.headers),c.data=A,{url:i.toPathString(o),options:c}})),deleteFile:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("deleteFile","fileId",t);const o="/files/{file_id}".replace("{file_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"DELETE"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),deleteModel:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("deleteModel","model",t);const o="/models/{model}".replace("{model}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"DELETE"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),downloadFile:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("downloadFile","fileId",t);const o="/files/{file_id}/content".replace("{file_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),listEngines:(t={})=>o(this,void 0,void 0,(function*(){const e=new URL("/engines",i.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const r=Object.assign(Object.assign({method:"GET"},o),t);i.setSearchParams(e,{});let a=o&&o.headers?o.headers:{};return r.headers=Object.assign(Object.assign(Object.assign({},{}),a),t.headers),{url:i.toPathString(e),options:r}})),listFiles:(t={})=>o(this,void 0,void 0,(function*(){const e=new URL("/files",i.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const r=Object.assign(Object.assign({method:"GET"},o),t);i.setSearchParams(e,{});let a=o&&o.headers?o.headers:{};return r.headers=Object.assign(Object.assign(Object.assign({},{}),a),t.headers),{url:i.toPathString(e),options:r}})),listFineTuneEvents:(t,e,r={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("listFineTuneEvents","fineTuneId",t);const o="/fine-tunes/{fine_tune_id}/events".replace("{fine_tune_id}",encodeURIComponent(String(t))),a=new URL(o,i.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const l=Object.assign(Object.assign({method:"GET"},s),r),d={};void 0!==e&&(d.stream=e),i.setSearchParams(a,d);let c=s&&s.headers?s.headers:{};return l.headers=Object.assign(Object.assign(Object.assign({},{}),c),r.headers),{url:i.toPathString(a),options:l}})),listFineTunes:(t={})=>o(this,void 0,void 0,(function*(){const e=new URL("/fine-tunes",i.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const r=Object.assign(Object.assign({method:"GET"},o),t);i.setSearchParams(e,{});let a=o&&o.headers?o.headers:{};return r.headers=Object.assign(Object.assign(Object.assign({},{}),a),t.headers),{url:i.toPathString(e),options:r}})),listModels:(t={})=>o(this,void 0,void 0,(function*(){const e=new URL("/models",i.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const r=Object.assign(Object.assign({method:"GET"},o),t);i.setSearchParams(e,{});let a=o&&o.headers?o.headers:{};return r.headers=Object.assign(Object.assign(Object.assign({},{}),a),t.headers),{url:i.toPathString(e),options:r}})),retrieveEngine:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("retrieveEngine","engineId",t);const o="/engines/{engine_id}".replace("{engine_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),retrieveFile:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("retrieveFile","fileId",t);const o="/files/{file_id}".replace("{file_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),retrieveFineTune:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("retrieveFineTune","fineTuneId",t);const o="/fine-tunes/{fine_tune_id}".replace("{fine_tune_id}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}})),retrieveModel:(t,e={})=>o(this,void 0,void 0,(function*(){i.assertParamExists("retrieveModel","model",t);const o="/models/{model}".replace("{model}",encodeURIComponent(String(t))),r=new URL(o,i.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},a),e);i.setSearchParams(r,{});let l=a&&a.headers?a.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),l),e.headers),{url:i.toPathString(r),options:s}}))}},t.OpenAIApiFp=function(n){const e=t.OpenAIApiAxiosParamCreator(n);return{cancelFineTune(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.cancelFineTune(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createAnswer(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createAnswer(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createChatCompletion(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createChatCompletion(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createClassification(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createClassification(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createCompletion(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createCompletion(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createEdit(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createEdit(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createEmbedding(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createEmbedding(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createFile(t,s,l){return o(this,void 0,void 0,(function*(){const o=yield e.createFile(t,s,l);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createFineTune(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createFineTune(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createImage(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createImage(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createImageEdit(t,s,l,d,c,p,A,m){return o(this,void 0,void 0,(function*(){const o=yield e.createImageEdit(t,s,l,d,c,p,A,m);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createImageVariation(t,s,l,d,c,p){return o(this,void 0,void 0,(function*(){const o=yield e.createImageVariation(t,s,l,d,c,p);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createModeration(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.createModeration(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createSearch(t,s,l){return o(this,void 0,void 0,(function*(){const o=yield e.createSearch(t,s,l);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createTranscription(t,s,l,d,c,p,A){return o(this,void 0,void 0,(function*(){const o=yield e.createTranscription(t,s,l,d,c,p,A);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},createTranslation(t,s,l,d,c,p){return o(this,void 0,void 0,(function*(){const o=yield e.createTranslation(t,s,l,d,c,p);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},deleteFile(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.deleteFile(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},deleteModel(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.deleteModel(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},downloadFile(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.downloadFile(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},listEngines(t){return o(this,void 0,void 0,(function*(){const o=yield e.listEngines(t);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},listFiles(t){return o(this,void 0,void 0,(function*(){const o=yield e.listFiles(t);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},listFineTuneEvents(t,s,l){return o(this,void 0,void 0,(function*(){const o=yield e.listFineTuneEvents(t,s,l);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},listFineTunes(t){return o(this,void 0,void 0,(function*(){const o=yield e.listFineTunes(t);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},listModels(t){return o(this,void 0,void 0,(function*(){const o=yield e.listModels(t);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},retrieveEngine(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.retrieveEngine(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},retrieveFile(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.retrieveFile(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},retrieveFineTune(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.retrieveFineTune(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))},retrieveModel(t,s){return o(this,void 0,void 0,(function*(){const o=yield e.retrieveModel(t,s);return i.createRequestFunction(o,r.default,a.BASE_PATH,n)}))}}},t.OpenAIApiFactory=function(n,e,o){const r=t.OpenAIApiFp(n);return{cancelFineTune:(n,t)=>r.cancelFineTune(n,t).then((n=>n(o,e))),createAnswer:(n,t)=>r.createAnswer(n,t).then((n=>n(o,e))),createChatCompletion:(n,t)=>r.createChatCompletion(n,t).then((n=>n(o,e))),createClassification:(n,t)=>r.createClassification(n,t).then((n=>n(o,e))),createCompletion:(n,t)=>r.createCompletion(n,t).then((n=>n(o,e))),createEdit:(n,t)=>r.createEdit(n,t).then((n=>n(o,e))),createEmbedding:(n,t)=>r.createEmbedding(n,t).then((n=>n(o,e))),createFile:(n,t,i)=>r.createFile(n,t,i).then((n=>n(o,e))),createFineTune:(n,t)=>r.createFineTune(n,t).then((n=>n(o,e))),createImage:(n,t)=>r.createImage(n,t).then((n=>n(o,e))),createImageEdit:(n,t,i,a,s,l,d,c)=>r.createImageEdit(n,t,i,a,s,l,d,c).then((n=>n(o,e))),createImageVariation:(n,t,i,a,s,l)=>r.createImageVariation(n,t,i,a,s,l).then((n=>n(o,e))),createModeration:(n,t)=>r.createModeration(n,t).then((n=>n(o,e))),createSearch:(n,t,i)=>r.createSearch(n,t,i).then((n=>n(o,e))),createTranscription:(n,t,i,a,s,l,d)=>r.createTranscription(n,t,i,a,s,l,d).then((n=>n(o,e))),createTranslation:(n,t,i,a,s,l)=>r.createTranslation(n,t,i,a,s,l).then((n=>n(o,e))),deleteFile:(n,t)=>r.deleteFile(n,t).then((n=>n(o,e))),deleteModel:(n,t)=>r.deleteModel(n,t).then((n=>n(o,e))),downloadFile:(n,t)=>r.downloadFile(n,t).then((n=>n(o,e))),listEngines:n=>r.listEngines(n).then((n=>n(o,e))),listFiles:n=>r.listFiles(n).then((n=>n(o,e))),listFineTuneEvents:(n,t,i)=>r.listFineTuneEvents(n,t,i).then((n=>n(o,e))),listFineTunes:n=>r.listFineTunes(n).then((n=>n(o,e))),listModels:n=>r.listModels(n).then((n=>n(o,e))),retrieveEngine:(n,t)=>r.retrieveEngine(n,t).then((n=>n(o,e))),retrieveFile:(n,t)=>r.retrieveFile(n,t).then((n=>n(o,e))),retrieveFineTune:(n,t)=>r.retrieveFineTune(n,t).then((n=>n(o,e))),retrieveModel:(n,t)=>r.retrieveModel(n,t).then((n=>n(o,e)))}};class s extends a.BaseAPI{cancelFineTune(n,e){return t.OpenAIApiFp(this.configuration).cancelFineTune(n,e).then((n=>n(this.axios,this.basePath)))}createAnswer(n,e){return t.OpenAIApiFp(this.configuration).createAnswer(n,e).then((n=>n(this.axios,this.basePath)))}createChatCompletion(n,e){return t.OpenAIApiFp(this.configuration).createChatCompletion(n,e).then((n=>n(this.axios,this.basePath)))}createClassification(n,e){return t.OpenAIApiFp(this.configuration).createClassification(n,e).then((n=>n(this.axios,this.basePath)))}createCompletion(n,e){return t.OpenAIApiFp(this.configuration).createCompletion(n,e).then((n=>n(this.axios,this.basePath)))}createEdit(n,e){return t.OpenAIApiFp(this.configuration).createEdit(n,e).then((n=>n(this.axios,this.basePath)))}createEmbedding(n,e){return t.OpenAIApiFp(this.configuration).createEmbedding(n,e).then((n=>n(this.axios,this.basePath)))}createFile(n,e,o){return t.OpenAIApiFp(this.configuration).createFile(n,e,o).then((n=>n(this.axios,this.basePath)))}createFineTune(n,e){return t.OpenAIApiFp(this.configuration).createFineTune(n,e).then((n=>n(this.axios,this.basePath)))}createImage(n,e){return t.OpenAIApiFp(this.configuration).createImage(n,e).then((n=>n(this.axios,this.basePath)))}createImageEdit(n,e,o,r,i,a,s,l){return t.OpenAIApiFp(this.configuration).createImageEdit(n,e,o,r,i,a,s,l).then((n=>n(this.axios,this.basePath)))}createImageVariation(n,e,o,r,i,a){return t.OpenAIApiFp(this.configuration).createImageVariation(n,e,o,r,i,a).then((n=>n(this.axios,this.basePath)))}createModeration(n,e){return t.OpenAIApiFp(this.configuration).createModeration(n,e).then((n=>n(this.axios,this.basePath)))}createSearch(n,e,o){return t.OpenAIApiFp(this.configuration).createSearch(n,e,o).then((n=>n(this.axios,this.basePath)))}createTranscription(n,e,o,r,i,a,s){return t.OpenAIApiFp(this.configuration).createTranscription(n,e,o,r,i,a,s).then((n=>n(this.axios,this.basePath)))}createTranslation(n,e,o,r,i,a){return t.OpenAIApiFp(this.configuration).createTranslation(n,e,o,r,i,a).then((n=>n(this.axios,this.basePath)))}deleteFile(n,e){return t.OpenAIApiFp(this.configuration).deleteFile(n,e).then((n=>n(this.axios,this.basePath)))}deleteModel(n,e){return t.OpenAIApiFp(this.configuration).deleteModel(n,e).then((n=>n(this.axios,this.basePath)))}downloadFile(n,e){return t.OpenAIApiFp(this.configuration).downloadFile(n,e).then((n=>n(this.axios,this.basePath)))}listEngines(n){return t.OpenAIApiFp(this.configuration).listEngines(n).then((n=>n(this.axios,this.basePath)))}listFiles(n){return t.OpenAIApiFp(this.configuration).listFiles(n).then((n=>n(this.axios,this.basePath)))}listFineTuneEvents(n,e,o){return t.OpenAIApiFp(this.configuration).listFineTuneEvents(n,e,o).then((n=>n(this.axios,this.basePath)))}listFineTunes(n){return t.OpenAIApiFp(this.configuration).listFineTunes(n).then((n=>n(this.axios,this.basePath)))}listModels(n){return t.OpenAIApiFp(this.configuration).listModels(n).then((n=>n(this.axios,this.basePath)))}retrieveEngine(n,e){return t.OpenAIApiFp(this.configuration).retrieveEngine(n,e).then((n=>n(this.axios,this.basePath)))}retrieveFile(n,e){return t.OpenAIApiFp(this.configuration).retrieveFile(n,e).then((n=>n(this.axios,this.basePath)))}retrieveFineTune(n,e){return t.OpenAIApiFp(this.configuration).retrieveFineTune(n,e).then((n=>n(this.axios,this.basePath)))}retrieveModel(n,e){return t.OpenAIApiFp(this.configuration).retrieveModel(n,e).then((n=>n(this.axios,this.basePath)))}}t.OpenAIApi=s},"./node_modules/openai/dist/base.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RequiredError=t.BaseAPI=t.COLLECTION_FORMATS=t.BASE_PATH=void 0;const o=e("./node_modules/axios/index.js");t.BASE_PATH="https://api.openai.com/v1".replace(/\/+$/,""),t.COLLECTION_FORMATS={csv:",",ssv:" ",tsv:"\t",pipes:"|"};t.BaseAPI=class{constructor(n,e=t.BASE_PATH,r=o.default){this.basePath=e,this.axios=r,n&&(this.configuration=n,this.basePath=n.basePath||this.basePath)}};class r extends Error{constructor(n,t){super(t),this.field=n,this.name="RequiredError"}}t.RequiredError=r},"./node_modules/openai/dist/common.js":function(n,t,e){"use strict";var o=this&&this.__awaiter||function(n,t,e,o){return new(e||(e=Promise))((function(r,i){function a(n){try{l(o.next(n))}catch(n){i(n)}}function s(n){try{l(o.throw(n))}catch(n){i(n)}}function l(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}l((o=o.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createRequestFunction=t.toPathString=t.serializeDataIfNeeded=t.setSearchParams=t.setOAuthToObject=t.setBearerAuthToObject=t.setBasicAuthToObject=t.setApiKeyToObject=t.assertParamExists=t.DUMMY_BASE_URL=void 0;const r=e("./node_modules/openai/dist/base.js");function i(n,t,e=""){null!=t&&("object"==typeof t?Array.isArray(t)?t.forEach((t=>i(n,t,e))):Object.keys(t).forEach((o=>i(n,t[o],`${e}${""!==e?".":""}${o}`))):n.has(e)?n.append(e,t):n.set(e,t))}t.DUMMY_BASE_URL="https://example.com",t.assertParamExists=function(n,t,e){if(null==e)throw new r.RequiredError(t,`Required parameter ${t} was null or undefined when calling ${n}.`)},t.setApiKeyToObject=function(n,t,e){return o(this,void 0,void 0,(function*(){if(e&&e.apiKey){const o="function"==typeof e.apiKey?yield e.apiKey(t):yield e.apiKey;n[t]=o}}))},t.setBasicAuthToObject=function(n,t){t&&(t.username||t.password)&&(n.auth={username:t.username,password:t.password})},t.setBearerAuthToObject=function(n,t){return o(this,void 0,void 0,(function*(){if(t&&t.accessToken){const e="function"==typeof t.accessToken?yield t.accessToken():yield t.accessToken;n.Authorization="Bearer "+e}}))},t.setOAuthToObject=function(n,t,e,r){return o(this,void 0,void 0,(function*(){if(r&&r.accessToken){const o="function"==typeof r.accessToken?yield r.accessToken(t,e):yield r.accessToken;n.Authorization="Bearer "+o}}))},t.setSearchParams=function(n,...t){const e=new URLSearchParams(n.search);i(e,t),n.search=e.toString()},t.serializeDataIfNeeded=function(n,t,e){const o="string"!=typeof n;return(o&&e&&e.isJsonMime?e.isJsonMime(t.headers["Content-Type"]):o)?JSON.stringify(void 0!==n?n:{}):n||""},t.toPathString=function(n){return n.pathname+n.search+n.hash},t.createRequestFunction=function(n,t,e,o){return(r=t,i=e)=>{const a=Object.assign(Object.assign({},n.options),{url:((null==o?void 0:o.basePath)||i)+n.url});return r.request(a)}}},"./node_modules/openai/dist/configuration.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Configuration=void 0;const o=e("./node_modules/openai/package.json");t.Configuration=class{constructor(n={}){this.apiKey=n.apiKey,this.organization=n.organization,this.username=n.username,this.password=n.password,this.accessToken=n.accessToken,this.basePath=n.basePath,this.baseOptions=n.baseOptions,this.formDataCtor=n.formDataCtor,this.baseOptions||(this.baseOptions={}),this.baseOptions.headers=Object.assign({"User-Agent":`OpenAI/NodeJS/${o.version}`,Authorization:`Bearer ${this.apiKey}`},this.baseOptions.headers),this.organization&&(this.baseOptions.headers["OpenAI-Organization"]=this.organization),this.formDataCtor||(this.formDataCtor=e("./node_modules/form-data/lib/browser.js"))}isJsonMime(n){const t=new RegExp("^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$","i");return null!==n&&(t.test(n)||"application/json-patch+json"===n.toLowerCase())}}},"./node_modules/openai/dist/index.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e),Object.defineProperty(n,o,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||t.hasOwnProperty(e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e("./node_modules/openai/dist/api.js"),t),r(e("./node_modules/openai/dist/configuration.js"),t)},"./node_modules/qs/lib/formats.js":n=>{"use strict";var t=String.prototype.replace,e=/%20/g,o="RFC1738",r="RFC3986";n.exports={default:r,formatters:{RFC1738:function(n){return t.call(n,e,"+")},RFC3986:function(n){return String(n)}},RFC1738:o,RFC3986:r}},"./node_modules/qs/lib/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/qs/lib/stringify.js"),r=e("./node_modules/qs/lib/parse.js"),i=e("./node_modules/qs/lib/formats.js");n.exports={formats:i,parse:r,stringify:o}},"./node_modules/qs/lib/parse.js":(n,t,e)=>{"use strict";var o=e("./node_modules/qs/lib/utils.js"),r=Object.prototype.hasOwnProperty,i=Array.isArray,a={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:o.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(n){return n.replace(/&#(\d+);/g,(function(n,t){return String.fromCharCode(parseInt(t,10))}))},l=function(n,t){return n&&"string"==typeof n&&t.comma&&n.indexOf(",")>-1?n.split(","):n},d=function(n,t,e,o){if(n){var i=e.allowDots?n.replace(/\.([^.[]+)/g,"[$1]"):n,a=/(\[[^[\]]*])/g,s=e.depth>0&&/(\[[^[\]]*])/.exec(i),d=s?i.slice(0,s.index):i,c=[];if(d){if(!e.plainObjects&&r.call(Object.prototype,d)&&!e.allowPrototypes)return;c.push(d)}for(var p=0;e.depth>0&&null!==(s=a.exec(i))&&p<e.depth;){if(p+=1,!e.plainObjects&&r.call(Object.prototype,s[1].slice(1,-1))&&!e.allowPrototypes)return;c.push(s[1])}return s&&c.push("["+i.slice(s.index)+"]"),function(n,t,e,o){for(var r=o?t:l(t,e),i=n.length-1;i>=0;--i){var a,s=n[i];if("[]"===s&&e.parseArrays)a=[].concat(r);else{a=e.plainObjects?Object.create(null):{};var d="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,c=parseInt(d,10);e.parseArrays||""!==d?!isNaN(c)&&s!==d&&String(c)===d&&c>=0&&e.parseArrays&&c<=e.arrayLimit?(a=[])[c]=r:"__proto__"!==d&&(a[d]=r):a={0:r}}r=a}return r}(c,t,e,o)}};n.exports=function(n,t){var e=function(n){if(!n)return a;if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===n.charset?a.charset:n.charset;return{allowDots:void 0===n.allowDots?a.allowDots:!!n.allowDots,allowPrototypes:"boolean"==typeof n.allowPrototypes?n.allowPrototypes:a.allowPrototypes,allowSparse:"boolean"==typeof n.allowSparse?n.allowSparse:a.allowSparse,arrayLimit:"number"==typeof n.arrayLimit?n.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof n.comma?n.comma:a.comma,decoder:"function"==typeof n.decoder?n.decoder:a.decoder,delimiter:"string"==typeof n.delimiter||o.isRegExp(n.delimiter)?n.delimiter:a.delimiter,depth:"number"==typeof n.depth||!1===n.depth?+n.depth:a.depth,ignoreQueryPrefix:!0===n.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof n.interpretNumericEntities?n.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof n.parameterLimit?n.parameterLimit:a.parameterLimit,parseArrays:!1!==n.parseArrays,plainObjects:"boolean"==typeof n.plainObjects?n.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:a.strictNullHandling}}(t);if(""===n||null==n)return e.plainObjects?Object.create(null):{};for(var c="string"==typeof n?function(n,t){var e,d={},c=t.ignoreQueryPrefix?n.replace(/^\?/,""):n,p=t.parameterLimit===1/0?void 0:t.parameterLimit,A=c.split(t.delimiter,p),m=-1,u=t.charset;if(t.charsetSentinel)for(e=0;e<A.length;++e)0===A[e].indexOf("utf8=")&&("utf8=%E2%9C%93"===A[e]?u="utf-8":"utf8=%26%2310003%3B"===A[e]&&(u="iso-8859-1"),m=e,e=A.length);for(e=0;e<A.length;++e)if(e!==m){var f,b,g=A[e],h=g.indexOf("]="),x=-1===h?g.indexOf("="):h+1;-1===x?(f=t.decoder(g,a.decoder,u,"key"),b=t.strictNullHandling?null:""):(f=t.decoder(g.slice(0,x),a.decoder,u,"key"),b=o.maybeMap(l(g.slice(x+1),t),(function(n){return t.decoder(n,a.decoder,u,"value")}))),b&&t.interpretNumericEntities&&"iso-8859-1"===u&&(b=s(b)),g.indexOf("[]=")>-1&&(b=i(b)?[b]:b),r.call(d,f)?d[f]=o.combine(d[f],b):d[f]=b}return d}(n,e):n,p=e.plainObjects?Object.create(null):{},A=Object.keys(c),m=0;m<A.length;++m){var u=A[m],f=d(u,c[u],e,"string"==typeof n);p=o.merge(p,f,e)}return!0===e.allowSparse?p:o.compact(p)}},"./node_modules/qs/lib/stringify.js":(n,t,e)=>{"use strict";var o=e("./node_modules/side-channel/index.js"),r=e("./node_modules/qs/lib/utils.js"),i=e("./node_modules/qs/lib/formats.js"),a=Object.prototype.hasOwnProperty,s={brackets:function(n){return n+"[]"},comma:"comma",indices:function(n,t){return n+"["+t+"]"},repeat:function(n){return n}},l=Array.isArray,d=String.prototype.split,c=Array.prototype.push,p=function(n,t){c.apply(n,l(t)?t:[t])},A=Date.prototype.toISOString,m=i.default,u={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:r.encode,encodeValuesOnly:!1,format:m,formatter:i.formatters[m],indices:!1,serializeDate:function(n){return A.call(n)},skipNulls:!1,strictNullHandling:!1},f={},b=function n(t,e,i,a,s,c,A,m,b,g,h,x,v,E,B,y){for(var w,I=t,$=y,C=0,_=!1;void 0!==($=$.get(f))&&!_;){var k=$.get(t);if(C+=1,void 0!==k){if(k===C)throw new RangeError("Cyclic object value");_=!0}void 0===$.get(f)&&(C=0)}if("function"==typeof m?I=m(e,I):I instanceof Date?I=h(I):"comma"===i&&l(I)&&(I=r.maybeMap(I,(function(n){return n instanceof Date?h(n):n}))),null===I){if(s)return A&&!E?A(e,u.encoder,B,"key",x):e;I=""}if("string"==typeof(w=I)||"number"==typeof w||"boolean"==typeof w||"symbol"==typeof w||"bigint"==typeof w||r.isBuffer(I)){if(A){var O=E?e:A(e,u.encoder,B,"key",x);if("comma"===i&&E){for(var j=d.call(String(I),","),M="",S=0;S<j.length;++S)M+=(0===S?"":",")+v(A(j[S],u.encoder,B,"value",x));return[v(O)+(a&&l(I)&&1===j.length?"[]":"")+"="+M]}return[v(O)+"="+v(A(I,u.encoder,B,"value",x))]}return[v(e)+"="+v(String(I))]}var R,F=[];if(void 0===I)return F;if("comma"===i&&l(I))R=[{value:I.length>0?I.join(",")||null:void 0}];else if(l(m))R=m;else{var V=Object.keys(I);R=b?V.sort(b):V}for(var T=a&&l(I)&&1===I.length?e+"[]":e,P=0;P<R.length;++P){var N=R[P],L="object"==typeof N&&void 0!==N.value?N.value:I[N];if(!c||null!==L){var D=l(I)?"function"==typeof i?i(T,N):T:T+(g?"."+N:"["+N+"]");y.set(t,C);var Q=o();Q.set(f,y),p(F,n(L,D,i,a,s,c,A,m,b,g,h,x,v,E,B,Q))}}return F};n.exports=function(n,t){var e,r=n,d=function(n){if(!n)return u;if(null!==n.encoder&&void 0!==n.encoder&&"function"!=typeof n.encoder)throw new TypeError("Encoder has to be a function.");var t=n.charset||u.charset;if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=i.default;if(void 0!==n.format){if(!a.call(i.formatters,n.format))throw new TypeError("Unknown format option provided.");e=n.format}var o=i.formatters[e],r=u.filter;return("function"==typeof n.filter||l(n.filter))&&(r=n.filter),{addQueryPrefix:"boolean"==typeof n.addQueryPrefix?n.addQueryPrefix:u.addQueryPrefix,allowDots:void 0===n.allowDots?u.allowDots:!!n.allowDots,charset:t,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:u.charsetSentinel,delimiter:void 0===n.delimiter?u.delimiter:n.delimiter,encode:"boolean"==typeof n.encode?n.encode:u.encode,encoder:"function"==typeof n.encoder?n.encoder:u.encoder,encodeValuesOnly:"boolean"==typeof n.encodeValuesOnly?n.encodeValuesOnly:u.encodeValuesOnly,filter:r,format:e,formatter:o,serializeDate:"function"==typeof n.serializeDate?n.serializeDate:u.serializeDate,skipNulls:"boolean"==typeof n.skipNulls?n.skipNulls:u.skipNulls,sort:"function"==typeof n.sort?n.sort:null,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:u.strictNullHandling}}(t);"function"==typeof d.filter?r=(0,d.filter)("",r):l(d.filter)&&(e=d.filter);var c,A=[];if("object"!=typeof r||null===r)return"";c=t&&t.arrayFormat in s?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var m=s[c];if(t&&"commaRoundTrip"in t&&"boolean"!=typeof t.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var f="comma"===m&&t&&t.commaRoundTrip;e||(e=Object.keys(r)),d.sort&&e.sort(d.sort);for(var g=o(),h=0;h<e.length;++h){var x=e[h];d.skipNulls&&null===r[x]||p(A,b(r[x],x,m,f,d.strictNullHandling,d.skipNulls,d.encode?d.encoder:null,d.filter,d.sort,d.allowDots,d.serializeDate,d.format,d.formatter,d.encodeValuesOnly,d.charset,g))}var v=A.join(d.delimiter),E=!0===d.addQueryPrefix?"?":"";return d.charsetSentinel&&("iso-8859-1"===d.charset?E+="utf8=%26%2310003%3B&":E+="utf8=%E2%9C%93&"),v.length>0?E+v:""}},"./node_modules/qs/lib/utils.js":(n,t,e)=>{"use strict";var o=e("./node_modules/qs/lib/formats.js"),r=Object.prototype.hasOwnProperty,i=Array.isArray,a=function(){for(var n=[],t=0;t<256;++t)n.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return n}(),s=function(n,t){for(var e=t&&t.plainObjects?Object.create(null):{},o=0;o<n.length;++o)void 0!==n[o]&&(e[o]=n[o]);return e};n.exports={arrayToObject:s,assign:function(n,t){return Object.keys(t).reduce((function(n,e){return n[e]=t[e],n}),n)},combine:function(n,t){return[].concat(n,t)},compact:function(n){for(var t=[{obj:{o:n},prop:"o"}],e=[],o=0;o<t.length;++o)for(var r=t[o],a=r.obj[r.prop],s=Object.keys(a),l=0;l<s.length;++l){var d=s[l],c=a[d];"object"==typeof c&&null!==c&&-1===e.indexOf(c)&&(t.push({obj:a,prop:d}),e.push(c))}return function(n){for(;n.length>1;){var t=n.pop(),e=t.obj[t.prop];if(i(e)){for(var o=[],r=0;r<e.length;++r)void 0!==e[r]&&o.push(e[r]);t.obj[t.prop]=o}}}(t),n},decode:function(n,t,e){var o=n.replace(/\+/g," ");if("iso-8859-1"===e)return o.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(o)}catch(n){return o}},encode:function(n,t,e,r,i){if(0===n.length)return n;var s=n;if("symbol"==typeof n?s=Symbol.prototype.toString.call(n):"string"!=typeof n&&(s=String(n)),"iso-8859-1"===e)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(n){return"%26%23"+parseInt(n.slice(2),16)+"%3B"}));for(var l="",d=0;d<s.length;++d){var c=s.charCodeAt(d);45===c||46===c||95===c||126===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122||i===o.RFC1738&&(40===c||41===c)?l+=s.charAt(d):c<128?l+=a[c]:c<2048?l+=a[192|c>>6]+a[128|63&c]:c<55296||c>=57344?l+=a[224|c>>12]+a[128|c>>6&63]+a[128|63&c]:(d+=1,c=65536+((1023&c)<<10|1023&s.charCodeAt(d)),l+=a[240|c>>18]+a[128|c>>12&63]+a[128|c>>6&63]+a[128|63&c])}return l},isBuffer:function(n){return!(!n||"object"!=typeof n)&&!!(n.constructor&&n.constructor.isBuffer&&n.constructor.isBuffer(n))},isRegExp:function(n){return"[object RegExp]"===Object.prototype.toString.call(n)},maybeMap:function(n,t){if(i(n)){for(var e=[],o=0;o<n.length;o+=1)e.push(t(n[o]));return e}return t(n)},merge:function n(t,e,o){if(!e)return t;if("object"!=typeof e){if(i(t))t.push(e);else{if(!t||"object"!=typeof t)return[t,e];(o&&(o.plainObjects||o.allowPrototypes)||!r.call(Object.prototype,e))&&(t[e]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(e);var a=t;return i(t)&&!i(e)&&(a=s(t,o)),i(t)&&i(e)?(e.forEach((function(e,i){if(r.call(t,i)){var a=t[i];a&&"object"==typeof a&&e&&"object"==typeof e?t[i]=n(a,e,o):t.push(e)}else t[i]=e})),t):Object.keys(e).reduce((function(t,i){var a=e[i];return r.call(t,i)?t[i]=n(t[i],a,o):t[i]=a,t}),a)}}},"./node_modules/side-channel/index.js":(n,t,e)=>{"use strict";var o=e("./node_modules/get-intrinsic/index.js"),r=e("./node_modules/call-bind/callBound.js"),i=e("./node_modules/object-inspect/index.js"),a=o("%TypeError%"),s=o("%WeakMap%",!0),l=o("%Map%",!0),d=r("WeakMap.prototype.get",!0),c=r("WeakMap.prototype.set",!0),p=r("WeakMap.prototype.has",!0),A=r("Map.prototype.get",!0),m=r("Map.prototype.set",!0),u=r("Map.prototype.has",!0),f=function(n,t){for(var e,o=n;null!==(e=o.next);o=e)if(e.key===t)return o.next=e.next,e.next=n.next,n.next=e,e};n.exports=function(){var n,t,e,o={assert:function(n){if(!o.has(n))throw new a("Side channel does not contain "+i(n))},get:function(o){if(s&&o&&("object"==typeof o||"function"==typeof o)){if(n)return d(n,o)}else if(l){if(t)return A(t,o)}else if(e)return function(n,t){var e=f(n,t);return e&&e.value}(e,o)},has:function(o){if(s&&o&&("object"==typeof o||"function"==typeof o)){if(n)return p(n,o)}else if(l){if(t)return u(t,o)}else if(e)return function(n,t){return!!f(n,t)}(e,o);return!1},set:function(o,r){s&&o&&("object"==typeof o||"function"==typeof o)?(n||(n=new s),c(n,o,r)):l?(t||(t=new l),m(t,o,r)):(e||(e={key:{},next:null}),function(n,t,e){var o=f(n,t);o?o.value=e:n.next={key:t,next:n.next,value:e}}(e,o,r))}};return o}},"./src/scss/style.scss":(n,t,e)=>{"use strict";e.r(t);var o=e("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),r=e.n(o),i=e("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),a=e.n(i),s=e("./node_modules/style-loader/dist/runtime/insertBySelector.js"),l=e.n(s),d=e("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),c=e.n(d),p=e("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),A=e.n(p),m=e("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),u=e.n(m),f=e("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/scss/style.scss"),b={};b.styleTagTransform=u(),b.setAttributes=c(),b.insert=l().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=A();r()(f.default,b);t.default=f.default&&f.default.locals?f.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":n=>{"use strict";var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var l=n[s],d=o.base?l[0]+o.base:l[0],c=i[d]||0,p="".concat(d," ").concat(c);i[d]=c+1;var A=e(p),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)t[A].references++,t[A].updater(m);else{var u=r(m,o);o.byIndex=s,t.splice(s,0,{identifier:p,updater:u,references:1})}a.push(p)}return a}function r(n,t){var e=t.domAPI(t);e.update(n);return function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var l=o(n,r),d=0;d<i.length;d++){var c=e(i[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=l}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":n=>{"use strict";var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(n,t,e)=>{"use strict";n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},"../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js":n=>{n.exports={}},"../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/button_installer.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonInstaller=void 0;const o=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/utils.js");e("../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js");t.ButtonInstaller=class{class_hms_button="button-hms-items";buttons=[];canvas;constructor(n=""){""!=n&&(this.class_hms_button=n)}create_button(n,t=""){const e=o.Utils.ce("span","",[],n);e.style.color="dodgerblue";let r=o.Utils.ce("button",this.class_hms_button,[e],"",{title:t});return r=o.Utils.decorate_menu_icon(r),console.log(n.length),n.length>2&&(r.style.fontSize="16px"),r}add_button(n){this.buttons.push(n)}install(){this.already_installed()?console.info("ボタンはすでに設置済みです。"):0!=this.buttons.length?this.put_buttons(this.buttons):console.info("ボタンが設定されていません。何もせずに終了します。")}set_canvas(n){this.canvas=n}get_hms(){const n=kintone.app.getHeaderMenuSpaceElement();if(null==n){const n="ボタン配置スペースが取得できませんでした。";throw console.error(n),new Error(n)}return n}already_installed(){return document.getElementsByClassName(this.class_hms_button).length>0}put_buttons(n){const t=void 0===this.canvas?this.get_hms():this.canvas;n.forEach((n=>{console.log(t),t.append(n)}))}get_header_element(n){const t=document.querySelectorAll(".recordlist-header-label-gaia");return Array.from(t).filter((t=>t.textContent==n))}}},"../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/index.js":function(n,t,e){"use strict";var o=this&&this.__createBinding||(Object.create?function(n,t,e,o){void 0===o&&(o=e),Object.defineProperty(n,o,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,o){void 0===o&&(o=e),n[o]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||o(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/utils.js"),t),r(e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/button_installer.js"),t),r(e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/plugin_canvas.js"),t)},"../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/plugin_canvas.js":(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PluginCanvas=void 0;const o=e("../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/utils.js");e("../lib/KintoneConfigBuilder.ts/node_modules/@shin-chan/kypes/src/index.js");class r{static CLASS_DISMISS="offcanvas-dismiss";id_island;id_offcanvas;title_offcanvas;island;enable_offcanvas;constructor(n,t,e=null,r){if(this.title_offcanvas=n,this.id_island=`plugin_island_id_${t}`,this.id_offcanvas=`offcanvas_${this.id_island}`,""==t){if(console.log(`[${this.constructor.name}] オフキャンバスを使いません。`),null==e&&(e=kintone.app.getHeaderMenuSpaceElement()),null==e)throw new Error("kintone.app.HeaderMenuSpaceElement() を取得できませんでした。");return this.island=e,void(this.enable_offcanvas=!1)}this.enable_offcanvas=!0;const i=document.getElementById(this.id_island);if(i)console.log(`[${this.constructor.name}] 既存のオフキャンバスを使用します。`),this.island=i;else{console.log(`[${this.constructor.name}] オフキャンバスをID[${this.id_island}]で作成します。`);const n=(n=>{if(n)return n;{const n=o.Utils.ce("span","",[],"🎈");return n.style.cursor="pointer",n}})(r);n.style.color="dodgerblue";let t=o.Utils.ce("div","bbk-tool-icon-box",[n],"",{id:this.id_island,"data-bs-toggle":"offcanvas","aria-controls":this.id_offcanvas,"data-bs-target":`#${this.id_offcanvas}`});t=o.Utils.decorate_menu_icon(t),this.island=t,this.init_offcanvas()}}init_offcanvas(){const n=kintone.app.getHeaderMenuSpaceElement();n&&(n.appendChild(this.get_node()),n.appendChild(this.build_node_offcanvas()))}get_node(){return this.island}build_node_offcanvas(){return o.Utils.ce("div","offcanvas offcanvas-start",[o.Utils.ce("div","offcanvas-header",[o.Utils.ce("h5","offcanvas-title",[],this.title_offcanvas,{id:`${this.id_offcanvas}Label`}),o.Utils.ce("button","btn-close text-reset",[],"",{"data-bs-dismiss":"offcanvas","aria-label":"Close"})]),o.Utils.ce("div","offcanvas-body",[o.Utils.ce("div","mb-4",[],"ここから各種プラグインを呼び出せます。")],"",{id:`${this.id_offcanvas}-body`})],"",{tabindex:"-1",id:`${this.id_offcanvas}`,"aria-labelledby":`${this.id_offcanvas}Label`,"data-bs-backdrop":"false"})}append(n){if(this.enable_offcanvas){const t=document.getElementById(`${this.id_offcanvas}-body`);this.deal_dismiss_attribute(n),t?.appendChild(n)}else this.island.append(n)}deal_dismiss_attribute(n){const t=Array.from(n.querySelectorAll(`.${r.CLASS_DISMISS}`));console.log(t),t.length>0?t.map((n=>{n.setAttribute("data-bs-dismiss","offcanvas")})):n.setAttribute("data-bs-dismiss","offcanvas")}}t.PluginCanvas=r},"../lib/KintoneConfigBuilder.ts/node_modules/commonutils/dist/utils.js":(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Utils=void 0;class e{static unique_properties(n,t=!1){const e=[];for(const o of Object.keys(n)){const r=n[o];(1==r.unique||t&&"RECORD_NUMBER"==r.type)&&e.push(r)}return e}static is_not_empty_string(n){return!e.is_empty_string(n)}static is_empty_string(n){return null==n||null==n||!(n.length>0)}static get_from=(n,t,e)=>n.hasOwnProperty(t)?n[t]:e;static buildElement=n=>{const t=n.tagName,o=n.className?n.className:"",r=n.childElements?n.childElements:[],i=n.textContent?n.textContent:void 0,a=n.innerHTML?n.innerHTML:void 0,s=n.attrs?n.attrs:{};return e.createElement(t,o,r,i,s,a)};static createElement=(n,t="",e=[],o,r,i)=>{const a=document.createElement(n);return a.className=t,null!=o&&(a.textContent=o),null!=i&&(a.innerHTML=i),e.length>0&&e.forEach((n=>{a.appendChild(n)})),r&&Object.entries(r).forEach((([n,t])=>{a.setAttribute(n,t)})),a};static ce=(n,t="",e=[],o="",r)=>this.createElement(n,t,e,o,r);static decorate_menu_icon(n){return n.style.height="48px",n.style.backgroundColor="#f7f9fa",n.style.fontSize="28px",n.style.border="1px solid #e3e7e8",n.style.display="inline",n.style.marginLeft="2px",n.style.marginRight="2px",n.style.verticalAlign="middle",n}static simpleDiv=n=>e.createElement("div","",[],n);static is_overlapped=n=>e.overlapped(n).length>0;static overlapped=n=>{const t=n.filter(((n,t,e)=>e.indexOf(n)!==e.lastIndexOf(n)));return Array.from(new Set(t))};static get_application_url(n){return`${location.protocol}//${location.host}/k/${n}`}static retrieve_errors(n,t=-1){const e=n?.error?.errors;if(null==e)return;let o=[];if(Object.keys(e).forEach((n=>{const t=e[n].messages.map((t=>`[${n}] ${t}`));o=o.concat(t)})),o.sort(),t>=0&&t<o.length){const n=o.length-t;o=o.splice(0,t),o.push(`以下${n}件のエラーメッセージを省略しました。`)}return o}}t.Utils=e},"?4f7e":()=>{},"./node_modules/openai/package.json":n=>{"use strict";n.exports=JSON.parse('{"name":"openai","version":"3.2.1","description":"Node.js library for the OpenAI API","repository":{"type":"git","url":"git@github.com:openai/openai-node.git"},"keywords":["openai","open","ai","gpt-3","gpt3"],"author":"OpenAI","license":"MIT","main":"./dist/index.js","types":"./dist/index.d.ts","scripts":{"build":"tsc --outDir dist/"},"dependencies":{"axios":"^0.26.0","form-data":"^4.0.0"},"devDependencies":{"@types/node":"^12.11.5","typescript":"^3.6.4"}}')}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.nc=void 0;var o={};(()=>{"use strict";e.r(o);e("./node_modules/bootstrap/dist/js/bootstrap.esm.js");var n=e("../lib/KintoneConfigBuilder.ts/dist/index.js"),t=e("./src/ts/config/settings.ts"),r=e("./src/ts/desktop/chatgpt_connector.ts");!function(e){if(null==e)throw new Error("PLUGIN_ID == undefined で呼び出されました。");console.info("run desktop main");const o=t.Settings.input,i=new n.ConfigManager(e,o).get_config();console.log(i),kintone.events.on(["app.record.edit.show","app.record.create.show"],(n=>{console.log(n);return new r.ChatGPTConnector(i).setup(e),n}))}(kintone.$PLUGIN_ID)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,